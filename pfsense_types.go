// Package pfsense provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package pfsense

import (
	"encoding/json"

	"github.com/deepmap/oapi-codegen/pkg/runtime"
	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	JwtScopes   = "jwt.Scopes"
	LocalScopes = "local.Scopes"
	TokenScopes = "token.Scopes"
)

// Defines values for APIFirewallAliasCreateJSONBodyType.
const (
	APIFirewallAliasCreateJSONBodyTypeHost    APIFirewallAliasCreateJSONBodyType = "host"
	APIFirewallAliasCreateJSONBodyTypeNetwork APIFirewallAliasCreateJSONBodyType = "network"
	APIFirewallAliasCreateJSONBodyTypePort    APIFirewallAliasCreateJSONBodyType = "port"
)

// Defines values for APIFirewallAliasUpdateJSONBodyType.
const (
	APIFirewallAliasUpdateJSONBodyTypeHost    APIFirewallAliasUpdateJSONBodyType = "host"
	APIFirewallAliasUpdateJSONBodyTypeNetwork APIFirewallAliasUpdateJSONBodyType = "network"
	APIFirewallAliasUpdateJSONBodyTypePort    APIFirewallAliasUpdateJSONBodyType = "port"
)

// Defines values for APIFirewallNATOneToOneCreateJSONBodyNatreflection.
const (
	APIFirewallNATOneToOneCreateJSONBodyNatreflectionDisable APIFirewallNATOneToOneCreateJSONBodyNatreflection = "disable"
	APIFirewallNATOneToOneCreateJSONBodyNatreflectionEnable  APIFirewallNATOneToOneCreateJSONBodyNatreflection = "enable"
)

// Defines values for APIFirewallNATOneToOneUpdateJSONBodyNatreflection.
const (
	APIFirewallNATOneToOneUpdateJSONBodyNatreflectionDisable APIFirewallNATOneToOneUpdateJSONBodyNatreflection = "disable"
	APIFirewallNATOneToOneUpdateJSONBodyNatreflectionEnable  APIFirewallNATOneToOneUpdateJSONBodyNatreflection = "enable"
)

// Defines values for APIFirewallNATOutboundUpdateJSONBodyMode.
const (
	Advanced  APIFirewallNATOutboundUpdateJSONBodyMode = "advanced"
	Automatic APIFirewallNATOutboundUpdateJSONBodyMode = "automatic"
	Hybrid    APIFirewallNATOutboundUpdateJSONBodyMode = "hybrid"
)

// Defines values for APIFirewallNATOutboundMappingCreateJSONBodyPoolopts.
const (
	APIFirewallNATOutboundMappingCreateJSONBodyPooloptsBitmask                 APIFirewallNATOutboundMappingCreateJSONBodyPoolopts = "bitmask"
	APIFirewallNATOutboundMappingCreateJSONBodyPooloptsRandom                  APIFirewallNATOutboundMappingCreateJSONBodyPoolopts = "random"
	APIFirewallNATOutboundMappingCreateJSONBodyPooloptsRandomStickyAddress     APIFirewallNATOutboundMappingCreateJSONBodyPoolopts = "random sticky-address"
	APIFirewallNATOutboundMappingCreateJSONBodyPooloptsRoundRobin              APIFirewallNATOutboundMappingCreateJSONBodyPoolopts = "round-robin"
	APIFirewallNATOutboundMappingCreateJSONBodyPooloptsRoundRobinStickyAddress APIFirewallNATOutboundMappingCreateJSONBodyPoolopts = "round-robin sticky-address"
	APIFirewallNATOutboundMappingCreateJSONBodyPooloptsSourceHash              APIFirewallNATOutboundMappingCreateJSONBodyPoolopts = "source-hash"
)

// Defines values for APIFirewallNATOutboundMappingCreateJSONBodyProtocol.
const (
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolAh     APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "ah"
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolAny    APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "any"
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolEsp    APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "esp"
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolGre    APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "gre"
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolIcmp   APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "icmp"
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolIgmp   APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "igmp"
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolIpv6   APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "ipv6"
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolOspf   APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "ospf"
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolPim    APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "pim"
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolTcp    APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "tcp"
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolTcpudp APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "tcp/udp"
	APIFirewallNATOutboundMappingCreateJSONBodyProtocolUdp    APIFirewallNATOutboundMappingCreateJSONBodyProtocol = "udp"
)

// Defines values for APIFirewallNATOutboundMappingUpdateJSONBodyPoolopts.
const (
	APIFirewallNATOutboundMappingUpdateJSONBodyPooloptsBitmask                 APIFirewallNATOutboundMappingUpdateJSONBodyPoolopts = "bitmask"
	APIFirewallNATOutboundMappingUpdateJSONBodyPooloptsRandom                  APIFirewallNATOutboundMappingUpdateJSONBodyPoolopts = "random"
	APIFirewallNATOutboundMappingUpdateJSONBodyPooloptsRandomStickyAddress     APIFirewallNATOutboundMappingUpdateJSONBodyPoolopts = "random sticky-address"
	APIFirewallNATOutboundMappingUpdateJSONBodyPooloptsRoundRobin              APIFirewallNATOutboundMappingUpdateJSONBodyPoolopts = "round-robin"
	APIFirewallNATOutboundMappingUpdateJSONBodyPooloptsRoundRobinStickyAddress APIFirewallNATOutboundMappingUpdateJSONBodyPoolopts = "round-robin sticky-address"
	APIFirewallNATOutboundMappingUpdateJSONBodyPooloptsSourceHash              APIFirewallNATOutboundMappingUpdateJSONBodyPoolopts = "source-hash"
)

// Defines values for APIFirewallNATOutboundMappingUpdateJSONBodyProtocol.
const (
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolAh     APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "ah"
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolAny    APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "any"
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolEsp    APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "esp"
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolGre    APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "gre"
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolIcmp   APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "icmp"
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolIgmp   APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "igmp"
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolIpv6   APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "ipv6"
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolOspf   APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "ospf"
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolPim    APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "pim"
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolTcp    APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "tcp"
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolTcpudp APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "tcp/udp"
	APIFirewallNATOutboundMappingUpdateJSONBodyProtocolUdp    APIFirewallNATOutboundMappingUpdateJSONBodyProtocol = "udp"
)

// Defines values for APIFirewallNATOutboundPortForwardCreateJSONBodyNatreflection.
const (
	APIFirewallNATOutboundPortForwardCreateJSONBodyNatreflectionDisable APIFirewallNATOutboundPortForwardCreateJSONBodyNatreflection = "disable"
	APIFirewallNATOutboundPortForwardCreateJSONBodyNatreflectionEnable  APIFirewallNATOutboundPortForwardCreateJSONBodyNatreflection = "enable"
	APIFirewallNATOutboundPortForwardCreateJSONBodyNatreflectionPurenat APIFirewallNATOutboundPortForwardCreateJSONBodyNatreflection = "purenat"
)

// Defines values for APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol.
const (
	APIFirewallNATOutboundPortForwardCreateJSONBodyProtocolAh     APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol = "ah"
	APIFirewallNATOutboundPortForwardCreateJSONBodyProtocolEsp    APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol = "esp"
	APIFirewallNATOutboundPortForwardCreateJSONBodyProtocolGre    APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol = "gre"
	APIFirewallNATOutboundPortForwardCreateJSONBodyProtocolIcmp   APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol = "icmp"
	APIFirewallNATOutboundPortForwardCreateJSONBodyProtocolIgmp   APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol = "igmp"
	APIFirewallNATOutboundPortForwardCreateJSONBodyProtocolIpv6   APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol = "ipv6"
	APIFirewallNATOutboundPortForwardCreateJSONBodyProtocolOspf   APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol = "ospf"
	APIFirewallNATOutboundPortForwardCreateJSONBodyProtocolPim    APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol = "pim"
	APIFirewallNATOutboundPortForwardCreateJSONBodyProtocolTcp    APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol = "tcp"
	APIFirewallNATOutboundPortForwardCreateJSONBodyProtocolTcpudp APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol = "tcp/udp"
	APIFirewallNATOutboundPortForwardCreateJSONBodyProtocolUdp    APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol = "udp"
)

// Defines values for APIFirewallNATOutboundPortForwardUpdateJSONBodyNatreflection.
const (
	APIFirewallNATOutboundPortForwardUpdateJSONBodyNatreflectionDisable APIFirewallNATOutboundPortForwardUpdateJSONBodyNatreflection = "disable"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyNatreflectionEnable  APIFirewallNATOutboundPortForwardUpdateJSONBodyNatreflection = "enable"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyNatreflectionPurenat APIFirewallNATOutboundPortForwardUpdateJSONBodyNatreflection = "purenat"
)

// Defines values for APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol.
const (
	APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocolAh     APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol = "ah"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocolEsp    APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol = "esp"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocolGre    APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol = "gre"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocolIcmp   APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol = "icmp"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocolIgmp   APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol = "igmp"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocolIpv6   APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol = "ipv6"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocolOspf   APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol = "ospf"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocolPim    APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol = "pim"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocolTcp    APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol = "tcp"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocolTcpudp APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol = "tcp/udp"
	APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocolUdp    APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol = "udp"
)

// Defines values for APIFirewallRuleCreateJSONBodyDirection.
const (
	APIFirewallRuleCreateJSONBodyDirectionAny APIFirewallRuleCreateJSONBodyDirection = "any"
	APIFirewallRuleCreateJSONBodyDirectionIn  APIFirewallRuleCreateJSONBodyDirection = "in"
	APIFirewallRuleCreateJSONBodyDirectionOut APIFirewallRuleCreateJSONBodyDirection = "out"
)

// Defines values for APIFirewallRuleCreateJSONBodyIcmptype.
const (
	APIFirewallRuleCreateJSONBodyIcmptypeAlthost   APIFirewallRuleCreateJSONBodyIcmptype = "althost"
	APIFirewallRuleCreateJSONBodyIcmptypeDataconv  APIFirewallRuleCreateJSONBodyIcmptype = "dataconv"
	APIFirewallRuleCreateJSONBodyIcmptypeEchorep   APIFirewallRuleCreateJSONBodyIcmptype = "echorep"
	APIFirewallRuleCreateJSONBodyIcmptypeEchoreq   APIFirewallRuleCreateJSONBodyIcmptype = "echoreq"
	APIFirewallRuleCreateJSONBodyIcmptypeInforep   APIFirewallRuleCreateJSONBodyIcmptype = "inforep"
	APIFirewallRuleCreateJSONBodyIcmptypeInforeq   APIFirewallRuleCreateJSONBodyIcmptype = "inforeq"
	APIFirewallRuleCreateJSONBodyIcmptypeIpv6Here  APIFirewallRuleCreateJSONBodyIcmptype = "ipv6-here"
	APIFirewallRuleCreateJSONBodyIcmptypeIpv6Where APIFirewallRuleCreateJSONBodyIcmptype = "ipv6-where"
	APIFirewallRuleCreateJSONBodyIcmptypeMaskrep   APIFirewallRuleCreateJSONBodyIcmptype = "maskrep"
	APIFirewallRuleCreateJSONBodyIcmptypeMaskreq   APIFirewallRuleCreateJSONBodyIcmptype = "maskreq"
	APIFirewallRuleCreateJSONBodyIcmptypeMobredir  APIFirewallRuleCreateJSONBodyIcmptype = "mobredir"
	APIFirewallRuleCreateJSONBodyIcmptypeMobregrep APIFirewallRuleCreateJSONBodyIcmptype = "mobregrep"
	APIFirewallRuleCreateJSONBodyIcmptypeMobregreq APIFirewallRuleCreateJSONBodyIcmptype = "mobregreq"
	APIFirewallRuleCreateJSONBodyIcmptypeParamprob APIFirewallRuleCreateJSONBodyIcmptype = "paramprob"
	APIFirewallRuleCreateJSONBodyIcmptypePhoturis  APIFirewallRuleCreateJSONBodyIcmptype = "photuris"
	APIFirewallRuleCreateJSONBodyIcmptypeRedir     APIFirewallRuleCreateJSONBodyIcmptype = "redir"
	APIFirewallRuleCreateJSONBodyIcmptypeRouteradv APIFirewallRuleCreateJSONBodyIcmptype = "routeradv"
	APIFirewallRuleCreateJSONBodyIcmptypeRoutersol APIFirewallRuleCreateJSONBodyIcmptype = "routersol"
	APIFirewallRuleCreateJSONBodyIcmptypeSkip      APIFirewallRuleCreateJSONBodyIcmptype = "skip"
	APIFirewallRuleCreateJSONBodyIcmptypeSquench   APIFirewallRuleCreateJSONBodyIcmptype = "squench"
	APIFirewallRuleCreateJSONBodyIcmptypeTimerep   APIFirewallRuleCreateJSONBodyIcmptype = "timerep"
	APIFirewallRuleCreateJSONBodyIcmptypeTimereq   APIFirewallRuleCreateJSONBodyIcmptype = "timereq"
	APIFirewallRuleCreateJSONBodyIcmptypeTimex     APIFirewallRuleCreateJSONBodyIcmptype = "timex"
	APIFirewallRuleCreateJSONBodyIcmptypeTrace     APIFirewallRuleCreateJSONBodyIcmptype = "trace"
	APIFirewallRuleCreateJSONBodyIcmptypeUnreach   APIFirewallRuleCreateJSONBodyIcmptype = "unreach"
)

// Defines values for APIFirewallRuleCreateJSONBodyIpprotocol.
const (
	APIFirewallRuleCreateJSONBodyIpprotocolInet   APIFirewallRuleCreateJSONBodyIpprotocol = "inet"
	APIFirewallRuleCreateJSONBodyIpprotocolInet46 APIFirewallRuleCreateJSONBodyIpprotocol = "inet46"
	APIFirewallRuleCreateJSONBodyIpprotocolInet6  APIFirewallRuleCreateJSONBodyIpprotocol = "inet6"
)

// Defines values for APIFirewallRuleCreateJSONBodyProtocol.
const (
	APIFirewallRuleCreateJSONBodyProtocolAh     APIFirewallRuleCreateJSONBodyProtocol = "ah"
	APIFirewallRuleCreateJSONBodyProtocolAny    APIFirewallRuleCreateJSONBodyProtocol = "any"
	APIFirewallRuleCreateJSONBodyProtocolCarp   APIFirewallRuleCreateJSONBodyProtocol = "carp"
	APIFirewallRuleCreateJSONBodyProtocolEsp    APIFirewallRuleCreateJSONBodyProtocol = "esp"
	APIFirewallRuleCreateJSONBodyProtocolGre    APIFirewallRuleCreateJSONBodyProtocol = "gre"
	APIFirewallRuleCreateJSONBodyProtocolIcmp   APIFirewallRuleCreateJSONBodyProtocol = "icmp"
	APIFirewallRuleCreateJSONBodyProtocolIgmp   APIFirewallRuleCreateJSONBodyProtocol = "igmp"
	APIFirewallRuleCreateJSONBodyProtocolIpv6   APIFirewallRuleCreateJSONBodyProtocol = "ipv6"
	APIFirewallRuleCreateJSONBodyProtocolOspf   APIFirewallRuleCreateJSONBodyProtocol = "ospf"
	APIFirewallRuleCreateJSONBodyProtocolPfsync APIFirewallRuleCreateJSONBodyProtocol = "pfsync"
	APIFirewallRuleCreateJSONBodyProtocolPim    APIFirewallRuleCreateJSONBodyProtocol = "pim"
	APIFirewallRuleCreateJSONBodyProtocolTcp    APIFirewallRuleCreateJSONBodyProtocol = "tcp"
	APIFirewallRuleCreateJSONBodyProtocolTcpudp APIFirewallRuleCreateJSONBodyProtocol = "tcp/udp"
	APIFirewallRuleCreateJSONBodyProtocolUdp    APIFirewallRuleCreateJSONBodyProtocol = "udp"
)

// Defines values for APIFirewallRuleCreateJSONBodyStatetype.
const (
	APIFirewallRuleCreateJSONBodyStatetypeKeepState     APIFirewallRuleCreateJSONBodyStatetype = "keep state"
	APIFirewallRuleCreateJSONBodyStatetypeSloppyState   APIFirewallRuleCreateJSONBodyStatetype = "sloppy state"
	APIFirewallRuleCreateJSONBodyStatetypeSynproxyState APIFirewallRuleCreateJSONBodyStatetype = "synproxy state"
)

// Defines values for APIFirewallRuleCreateJSONBodyTcpflags1.
const (
	APIFirewallRuleCreateJSONBodyTcpflags1Ack APIFirewallRuleCreateJSONBodyTcpflags1 = "ack"
	APIFirewallRuleCreateJSONBodyTcpflags1Cwr APIFirewallRuleCreateJSONBodyTcpflags1 = "cwr"
	APIFirewallRuleCreateJSONBodyTcpflags1Ece APIFirewallRuleCreateJSONBodyTcpflags1 = "ece"
	APIFirewallRuleCreateJSONBodyTcpflags1Fin APIFirewallRuleCreateJSONBodyTcpflags1 = "fin"
	APIFirewallRuleCreateJSONBodyTcpflags1Psh APIFirewallRuleCreateJSONBodyTcpflags1 = "psh"
	APIFirewallRuleCreateJSONBodyTcpflags1Rst APIFirewallRuleCreateJSONBodyTcpflags1 = "rst"
	APIFirewallRuleCreateJSONBodyTcpflags1Syn APIFirewallRuleCreateJSONBodyTcpflags1 = "syn"
	APIFirewallRuleCreateJSONBodyTcpflags1Urg APIFirewallRuleCreateJSONBodyTcpflags1 = "urg"
)

// Defines values for APIFirewallRuleCreateJSONBodyTcpflags2.
const (
	APIFirewallRuleCreateJSONBodyTcpflags2Ack APIFirewallRuleCreateJSONBodyTcpflags2 = "ack"
	APIFirewallRuleCreateJSONBodyTcpflags2Cwr APIFirewallRuleCreateJSONBodyTcpflags2 = "cwr"
	APIFirewallRuleCreateJSONBodyTcpflags2Ece APIFirewallRuleCreateJSONBodyTcpflags2 = "ece"
	APIFirewallRuleCreateJSONBodyTcpflags2Fin APIFirewallRuleCreateJSONBodyTcpflags2 = "fin"
	APIFirewallRuleCreateJSONBodyTcpflags2Psh APIFirewallRuleCreateJSONBodyTcpflags2 = "psh"
	APIFirewallRuleCreateJSONBodyTcpflags2Rst APIFirewallRuleCreateJSONBodyTcpflags2 = "rst"
	APIFirewallRuleCreateJSONBodyTcpflags2Syn APIFirewallRuleCreateJSONBodyTcpflags2 = "syn"
	APIFirewallRuleCreateJSONBodyTcpflags2Urg APIFirewallRuleCreateJSONBodyTcpflags2 = "urg"
)

// Defines values for APIFirewallRuleCreateJSONBodyType.
const (
	APIFirewallRuleCreateJSONBodyTypeBlock  APIFirewallRuleCreateJSONBodyType = "block"
	APIFirewallRuleCreateJSONBodyTypePass   APIFirewallRuleCreateJSONBodyType = "pass"
	APIFirewallRuleCreateJSONBodyTypeReject APIFirewallRuleCreateJSONBodyType = "reject"
)

// Defines values for APIFirewallRuleUpdateJSONBodyDirection.
const (
	APIFirewallRuleUpdateJSONBodyDirectionAny APIFirewallRuleUpdateJSONBodyDirection = "any"
	APIFirewallRuleUpdateJSONBodyDirectionIn  APIFirewallRuleUpdateJSONBodyDirection = "in"
	APIFirewallRuleUpdateJSONBodyDirectionOut APIFirewallRuleUpdateJSONBodyDirection = "out"
)

// Defines values for APIFirewallRuleUpdateJSONBodyIcmptype.
const (
	APIFirewallRuleUpdateJSONBodyIcmptypeAlthost   APIFirewallRuleUpdateJSONBodyIcmptype = "althost"
	APIFirewallRuleUpdateJSONBodyIcmptypeDataconv  APIFirewallRuleUpdateJSONBodyIcmptype = "dataconv"
	APIFirewallRuleUpdateJSONBodyIcmptypeEchorep   APIFirewallRuleUpdateJSONBodyIcmptype = "echorep"
	APIFirewallRuleUpdateJSONBodyIcmptypeEchoreq   APIFirewallRuleUpdateJSONBodyIcmptype = "echoreq"
	APIFirewallRuleUpdateJSONBodyIcmptypeInforep   APIFirewallRuleUpdateJSONBodyIcmptype = "inforep"
	APIFirewallRuleUpdateJSONBodyIcmptypeInforeq   APIFirewallRuleUpdateJSONBodyIcmptype = "inforeq"
	APIFirewallRuleUpdateJSONBodyIcmptypeIpv6Here  APIFirewallRuleUpdateJSONBodyIcmptype = "ipv6-here"
	APIFirewallRuleUpdateJSONBodyIcmptypeIpv6Where APIFirewallRuleUpdateJSONBodyIcmptype = "ipv6-where"
	APIFirewallRuleUpdateJSONBodyIcmptypeMaskrep   APIFirewallRuleUpdateJSONBodyIcmptype = "maskrep"
	APIFirewallRuleUpdateJSONBodyIcmptypeMaskreq   APIFirewallRuleUpdateJSONBodyIcmptype = "maskreq"
	APIFirewallRuleUpdateJSONBodyIcmptypeMobredir  APIFirewallRuleUpdateJSONBodyIcmptype = "mobredir"
	APIFirewallRuleUpdateJSONBodyIcmptypeMobregrep APIFirewallRuleUpdateJSONBodyIcmptype = "mobregrep"
	APIFirewallRuleUpdateJSONBodyIcmptypeMobregreq APIFirewallRuleUpdateJSONBodyIcmptype = "mobregreq"
	APIFirewallRuleUpdateJSONBodyIcmptypeParamprob APIFirewallRuleUpdateJSONBodyIcmptype = "paramprob"
	APIFirewallRuleUpdateJSONBodyIcmptypePhoturis  APIFirewallRuleUpdateJSONBodyIcmptype = "photuris"
	APIFirewallRuleUpdateJSONBodyIcmptypeRedir     APIFirewallRuleUpdateJSONBodyIcmptype = "redir"
	APIFirewallRuleUpdateJSONBodyIcmptypeRouteradv APIFirewallRuleUpdateJSONBodyIcmptype = "routeradv"
	APIFirewallRuleUpdateJSONBodyIcmptypeRoutersol APIFirewallRuleUpdateJSONBodyIcmptype = "routersol"
	APIFirewallRuleUpdateJSONBodyIcmptypeSkip      APIFirewallRuleUpdateJSONBodyIcmptype = "skip"
	APIFirewallRuleUpdateJSONBodyIcmptypeSquench   APIFirewallRuleUpdateJSONBodyIcmptype = "squench"
	APIFirewallRuleUpdateJSONBodyIcmptypeTimerep   APIFirewallRuleUpdateJSONBodyIcmptype = "timerep"
	APIFirewallRuleUpdateJSONBodyIcmptypeTimereq   APIFirewallRuleUpdateJSONBodyIcmptype = "timereq"
	APIFirewallRuleUpdateJSONBodyIcmptypeTimex     APIFirewallRuleUpdateJSONBodyIcmptype = "timex"
	APIFirewallRuleUpdateJSONBodyIcmptypeTrace     APIFirewallRuleUpdateJSONBodyIcmptype = "trace"
	APIFirewallRuleUpdateJSONBodyIcmptypeUnreach   APIFirewallRuleUpdateJSONBodyIcmptype = "unreach"
)

// Defines values for APIFirewallRuleUpdateJSONBodyIpprotocol.
const (
	APIFirewallRuleUpdateJSONBodyIpprotocolInet   APIFirewallRuleUpdateJSONBodyIpprotocol = "inet"
	APIFirewallRuleUpdateJSONBodyIpprotocolInet46 APIFirewallRuleUpdateJSONBodyIpprotocol = "inet46"
	APIFirewallRuleUpdateJSONBodyIpprotocolInet6  APIFirewallRuleUpdateJSONBodyIpprotocol = "inet6"
)

// Defines values for APIFirewallRuleUpdateJSONBodyProtocol.
const (
	APIFirewallRuleUpdateJSONBodyProtocolAh     APIFirewallRuleUpdateJSONBodyProtocol = "ah"
	APIFirewallRuleUpdateJSONBodyProtocolAny    APIFirewallRuleUpdateJSONBodyProtocol = "any"
	APIFirewallRuleUpdateJSONBodyProtocolCarp   APIFirewallRuleUpdateJSONBodyProtocol = "carp"
	APIFirewallRuleUpdateJSONBodyProtocolEsp    APIFirewallRuleUpdateJSONBodyProtocol = "esp"
	APIFirewallRuleUpdateJSONBodyProtocolGre    APIFirewallRuleUpdateJSONBodyProtocol = "gre"
	APIFirewallRuleUpdateJSONBodyProtocolIcmp   APIFirewallRuleUpdateJSONBodyProtocol = "icmp"
	APIFirewallRuleUpdateJSONBodyProtocolIgmp   APIFirewallRuleUpdateJSONBodyProtocol = "igmp"
	APIFirewallRuleUpdateJSONBodyProtocolIpv6   APIFirewallRuleUpdateJSONBodyProtocol = "ipv6"
	APIFirewallRuleUpdateJSONBodyProtocolOspf   APIFirewallRuleUpdateJSONBodyProtocol = "ospf"
	APIFirewallRuleUpdateJSONBodyProtocolPfsync APIFirewallRuleUpdateJSONBodyProtocol = "pfsync"
	APIFirewallRuleUpdateJSONBodyProtocolPim    APIFirewallRuleUpdateJSONBodyProtocol = "pim"
	APIFirewallRuleUpdateJSONBodyProtocolTcp    APIFirewallRuleUpdateJSONBodyProtocol = "tcp"
	APIFirewallRuleUpdateJSONBodyProtocolTcpudp APIFirewallRuleUpdateJSONBodyProtocol = "tcp/udp"
	APIFirewallRuleUpdateJSONBodyProtocolUdp    APIFirewallRuleUpdateJSONBodyProtocol = "udp"
)

// Defines values for APIFirewallRuleUpdateJSONBodyStatetype.
const (
	APIFirewallRuleUpdateJSONBodyStatetypeKeepState     APIFirewallRuleUpdateJSONBodyStatetype = "keep state"
	APIFirewallRuleUpdateJSONBodyStatetypeSloppyState   APIFirewallRuleUpdateJSONBodyStatetype = "sloppy state"
	APIFirewallRuleUpdateJSONBodyStatetypeSynproxyState APIFirewallRuleUpdateJSONBodyStatetype = "synproxy state"
)

// Defines values for APIFirewallRuleUpdateJSONBodyTcpflags1.
const (
	APIFirewallRuleUpdateJSONBodyTcpflags1Ack APIFirewallRuleUpdateJSONBodyTcpflags1 = "ack"
	APIFirewallRuleUpdateJSONBodyTcpflags1Cwr APIFirewallRuleUpdateJSONBodyTcpflags1 = "cwr"
	APIFirewallRuleUpdateJSONBodyTcpflags1Ece APIFirewallRuleUpdateJSONBodyTcpflags1 = "ece"
	APIFirewallRuleUpdateJSONBodyTcpflags1Fin APIFirewallRuleUpdateJSONBodyTcpflags1 = "fin"
	APIFirewallRuleUpdateJSONBodyTcpflags1Psh APIFirewallRuleUpdateJSONBodyTcpflags1 = "psh"
	APIFirewallRuleUpdateJSONBodyTcpflags1Rst APIFirewallRuleUpdateJSONBodyTcpflags1 = "rst"
	APIFirewallRuleUpdateJSONBodyTcpflags1Syn APIFirewallRuleUpdateJSONBodyTcpflags1 = "syn"
	APIFirewallRuleUpdateJSONBodyTcpflags1Urg APIFirewallRuleUpdateJSONBodyTcpflags1 = "urg"
)

// Defines values for APIFirewallRuleUpdateJSONBodyTcpflags2.
const (
	APIFirewallRuleUpdateJSONBodyTcpflags2Ack APIFirewallRuleUpdateJSONBodyTcpflags2 = "ack"
	APIFirewallRuleUpdateJSONBodyTcpflags2Cwr APIFirewallRuleUpdateJSONBodyTcpflags2 = "cwr"
	APIFirewallRuleUpdateJSONBodyTcpflags2Ece APIFirewallRuleUpdateJSONBodyTcpflags2 = "ece"
	APIFirewallRuleUpdateJSONBodyTcpflags2Fin APIFirewallRuleUpdateJSONBodyTcpflags2 = "fin"
	APIFirewallRuleUpdateJSONBodyTcpflags2Psh APIFirewallRuleUpdateJSONBodyTcpflags2 = "psh"
	APIFirewallRuleUpdateJSONBodyTcpflags2Rst APIFirewallRuleUpdateJSONBodyTcpflags2 = "rst"
	APIFirewallRuleUpdateJSONBodyTcpflags2Syn APIFirewallRuleUpdateJSONBodyTcpflags2 = "syn"
	APIFirewallRuleUpdateJSONBodyTcpflags2Urg APIFirewallRuleUpdateJSONBodyTcpflags2 = "urg"
)

// Defines values for APIFirewallRuleUpdateJSONBodyType.
const (
	APIFirewallRuleUpdateJSONBodyTypeBlock  APIFirewallRuleUpdateJSONBodyType = "block"
	APIFirewallRuleUpdateJSONBodyTypePass   APIFirewallRuleUpdateJSONBodyType = "pass"
	APIFirewallRuleUpdateJSONBodyTypeReject APIFirewallRuleUpdateJSONBodyType = "reject"
)

// Defines values for APIFirewallRuleSortUpdateJSONBodyOption.
const (
	APIFirewallRuleSortUpdateJSONBodyOptionAscend  APIFirewallRuleSortUpdateJSONBodyOption = "ascend"
	APIFirewallRuleSortUpdateJSONBodyOptionDescend APIFirewallRuleSortUpdateJSONBodyOption = "descend"
	APIFirewallRuleSortUpdateJSONBodyOptionNatural APIFirewallRuleSortUpdateJSONBodyOption = "natural"
	APIFirewallRuleSortUpdateJSONBodyOptionNumeric APIFirewallRuleSortUpdateJSONBodyOption = "numeric"
	APIFirewallRuleSortUpdateJSONBodyOptionString  APIFirewallRuleSortUpdateJSONBodyOption = "string"
)

// Defines values for APIFirewallTrafficShaperCreateJSONBodyBandwidthtype.
const (
	APIFirewallTrafficShaperCreateJSONBodyBandwidthtypeB       APIFirewallTrafficShaperCreateJSONBodyBandwidthtype = "b"
	APIFirewallTrafficShaperCreateJSONBodyBandwidthtypeGb      APIFirewallTrafficShaperCreateJSONBodyBandwidthtype = "Gb"
	APIFirewallTrafficShaperCreateJSONBodyBandwidthtypeKb      APIFirewallTrafficShaperCreateJSONBodyBandwidthtype = "Kb"
	APIFirewallTrafficShaperCreateJSONBodyBandwidthtypeMb      APIFirewallTrafficShaperCreateJSONBodyBandwidthtype = "Mb"
	APIFirewallTrafficShaperCreateJSONBodyBandwidthtypePercent APIFirewallTrafficShaperCreateJSONBodyBandwidthtype = "%"
)

// Defines values for APIFirewallTrafficShaperCreateJSONBodyScheduler.
const (
	APIFirewallTrafficShaperCreateJSONBodySchedulerCBQ    APIFirewallTrafficShaperCreateJSONBodyScheduler = "CBQ"
	APIFirewallTrafficShaperCreateJSONBodySchedulerCODELQ APIFirewallTrafficShaperCreateJSONBodyScheduler = "CODELQ"
	APIFirewallTrafficShaperCreateJSONBodySchedulerFAIRQ  APIFirewallTrafficShaperCreateJSONBodyScheduler = "FAIRQ"
	APIFirewallTrafficShaperCreateJSONBodySchedulerHFSC   APIFirewallTrafficShaperCreateJSONBodyScheduler = "HFSC"
	APIFirewallTrafficShaperCreateJSONBodySchedulerPRIQ   APIFirewallTrafficShaperCreateJSONBodyScheduler = "PRIQ"
)

// Defines values for APIFirewallTrafficShaperUpdateJSONBodyBandwidthtype.
const (
	APIFirewallTrafficShaperUpdateJSONBodyBandwidthtypeB       APIFirewallTrafficShaperUpdateJSONBodyBandwidthtype = "b"
	APIFirewallTrafficShaperUpdateJSONBodyBandwidthtypeGb      APIFirewallTrafficShaperUpdateJSONBodyBandwidthtype = "Gb"
	APIFirewallTrafficShaperUpdateJSONBodyBandwidthtypeKb      APIFirewallTrafficShaperUpdateJSONBodyBandwidthtype = "Kb"
	APIFirewallTrafficShaperUpdateJSONBodyBandwidthtypeMb      APIFirewallTrafficShaperUpdateJSONBodyBandwidthtype = "Mb"
	APIFirewallTrafficShaperUpdateJSONBodyBandwidthtypePercent APIFirewallTrafficShaperUpdateJSONBodyBandwidthtype = "%"
)

// Defines values for APIFirewallTrafficShaperUpdateJSONBodyScheduler.
const (
	APIFirewallTrafficShaperUpdateJSONBodySchedulerCBQ    APIFirewallTrafficShaperUpdateJSONBodyScheduler = "CBQ"
	APIFirewallTrafficShaperUpdateJSONBodySchedulerCODELQ APIFirewallTrafficShaperUpdateJSONBodyScheduler = "CODELQ"
	APIFirewallTrafficShaperUpdateJSONBodySchedulerFAIRQ  APIFirewallTrafficShaperUpdateJSONBodyScheduler = "FAIRQ"
	APIFirewallTrafficShaperUpdateJSONBodySchedulerHFSC   APIFirewallTrafficShaperUpdateJSONBodyScheduler = "HFSC"
	APIFirewallTrafficShaperUpdateJSONBodySchedulerPRIQ   APIFirewallTrafficShaperUpdateJSONBodyScheduler = "PRIQ"
)

// Defines values for APIFirewallTrafficShaperLimiterCreateJSONBodyAqm.
const (
	APIFirewallTrafficShaperLimiterCreateJSONBodyAqmCodel    APIFirewallTrafficShaperLimiterCreateJSONBodyAqm = "codel"
	APIFirewallTrafficShaperLimiterCreateJSONBodyAqmDroptail APIFirewallTrafficShaperLimiterCreateJSONBodyAqm = "droptail"
	APIFirewallTrafficShaperLimiterCreateJSONBodyAqmGred     APIFirewallTrafficShaperLimiterCreateJSONBodyAqm = "gred"
	APIFirewallTrafficShaperLimiterCreateJSONBodyAqmPie      APIFirewallTrafficShaperLimiterCreateJSONBodyAqm = "pie"
	APIFirewallTrafficShaperLimiterCreateJSONBodyAqmRed      APIFirewallTrafficShaperLimiterCreateJSONBodyAqm = "red"
)

// Defines values for APIFirewallTrafficShaperLimiterCreateJSONBodyMask.
const (
	APIFirewallTrafficShaperLimiterCreateJSONBodyMaskDstaddress APIFirewallTrafficShaperLimiterCreateJSONBodyMask = "dstaddress"
	APIFirewallTrafficShaperLimiterCreateJSONBodyMaskNone       APIFirewallTrafficShaperLimiterCreateJSONBodyMask = "none"
	APIFirewallTrafficShaperLimiterCreateJSONBodyMaskSrcaddress APIFirewallTrafficShaperLimiterCreateJSONBodyMask = "srcaddress"
)

// Defines values for APIFirewallTrafficShaperLimiterCreateJSONBodySched.
const (
	Fifo    APIFirewallTrafficShaperLimiterCreateJSONBodySched = "fifo"
	FqCodel APIFirewallTrafficShaperLimiterCreateJSONBodySched = "fq_codel"
	FqPie   APIFirewallTrafficShaperLimiterCreateJSONBodySched = "fq_pie"
	Prio    APIFirewallTrafficShaperLimiterCreateJSONBodySched = "prio"
	Qfq     APIFirewallTrafficShaperLimiterCreateJSONBodySched = "qfq"
	Rr      APIFirewallTrafficShaperLimiterCreateJSONBodySched = "rr"
	Wf2q    APIFirewallTrafficShaperLimiterCreateJSONBodySched = "wf2q+"
)

// Defines values for APIFirewallTrafficShaperLimiterBandwidthCreateJSONBodyBwscale.
const (
	APIFirewallTrafficShaperLimiterBandwidthCreateJSONBodyBwscaleB  APIFirewallTrafficShaperLimiterBandwidthCreateJSONBodyBwscale = "b"
	APIFirewallTrafficShaperLimiterBandwidthCreateJSONBodyBwscaleKb APIFirewallTrafficShaperLimiterBandwidthCreateJSONBodyBwscale = "Kb"
	APIFirewallTrafficShaperLimiterBandwidthCreateJSONBodyBwscaleMb APIFirewallTrafficShaperLimiterBandwidthCreateJSONBodyBwscale = "Mb"
)

// Defines values for APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqm.
const (
	APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqmCodel    APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqm = "codel"
	APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqmDroptail APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqm = "droptail"
	APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqmGred     APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqm = "gred"
	APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqmPie      APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqm = "pie"
	APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqmRed      APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqm = "red"
)

// Defines values for APIFirewallTrafficShaperLimiterQueueCreateJSONBodyMask.
const (
	APIFirewallTrafficShaperLimiterQueueCreateJSONBodyMaskDstaddress APIFirewallTrafficShaperLimiterQueueCreateJSONBodyMask = "dstaddress"
	APIFirewallTrafficShaperLimiterQueueCreateJSONBodyMaskNone       APIFirewallTrafficShaperLimiterQueueCreateJSONBodyMask = "none"
	APIFirewallTrafficShaperLimiterQueueCreateJSONBodyMaskSrcaddress APIFirewallTrafficShaperLimiterQueueCreateJSONBodyMask = "srcaddress"
)

// Defines values for APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtype.
const (
	APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtypeB       APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtype = "b"
	APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtypeGb      APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtype = "Gb"
	APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtypeKb      APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtype = "Kb"
	APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtypeMb      APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtype = "Mb"
	APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtypePercent APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtype = "%"
)

// Defines values for APIFirewallVirtualIPCreateJSONBodyMode.
const (
	APIFirewallVirtualIPCreateJSONBodyModeCarp     APIFirewallVirtualIPCreateJSONBodyMode = "carp"
	APIFirewallVirtualIPCreateJSONBodyModeIpalias  APIFirewallVirtualIPCreateJSONBodyMode = "ipalias"
	APIFirewallVirtualIPCreateJSONBodyModeOther    APIFirewallVirtualIPCreateJSONBodyMode = "other"
	APIFirewallVirtualIPCreateJSONBodyModeProxyarp APIFirewallVirtualIPCreateJSONBodyMode = "proxyarp"
)

// Defines values for APIFirewallVirtualIPUpdateJSONBodyMode.
const (
	APIFirewallVirtualIPUpdateJSONBodyModeCarp     APIFirewallVirtualIPUpdateJSONBodyMode = "carp"
	APIFirewallVirtualIPUpdateJSONBodyModeIpalias  APIFirewallVirtualIPUpdateJSONBodyMode = "ipalias"
	APIFirewallVirtualIPUpdateJSONBodyModeOther    APIFirewallVirtualIPUpdateJSONBodyMode = "other"
	APIFirewallVirtualIPUpdateJSONBodyModeProxyarp APIFirewallVirtualIPUpdateJSONBodyMode = "proxyarp"
)

// Defines values for APIInterfaceCreateJSONBodyDhcpcvpt.
const (
	APIInterfaceCreateJSONBodyDhcpcvptN0 APIInterfaceCreateJSONBodyDhcpcvpt = 0
	APIInterfaceCreateJSONBodyDhcpcvptN1 APIInterfaceCreateJSONBodyDhcpcvpt = 1
	APIInterfaceCreateJSONBodyDhcpcvptN2 APIInterfaceCreateJSONBodyDhcpcvpt = 2
	APIInterfaceCreateJSONBodyDhcpcvptN3 APIInterfaceCreateJSONBodyDhcpcvpt = 3
	APIInterfaceCreateJSONBodyDhcpcvptN4 APIInterfaceCreateJSONBodyDhcpcvpt = 4
	APIInterfaceCreateJSONBodyDhcpcvptN5 APIInterfaceCreateJSONBodyDhcpcvpt = 5
	APIInterfaceCreateJSONBodyDhcpcvptN6 APIInterfaceCreateJSONBodyDhcpcvpt = 6
	APIInterfaceCreateJSONBodyDhcpcvptN7 APIInterfaceCreateJSONBodyDhcpcvpt = 7
)

// Defines values for APIInterfaceCreateJSONBodyType.
const (
	APIInterfaceCreateJSONBodyTypeDhcp     APIInterfaceCreateJSONBodyType = "dhcp"
	APIInterfaceCreateJSONBodyTypeStaticv4 APIInterfaceCreateJSONBodyType = "staticv4"
)

// Defines values for APIInterfaceCreateJSONBodyType6.
const (
	APIInterfaceCreateJSONBodyType6Dhcp6    APIInterfaceCreateJSONBodyType6 = "dhcp6"
	APIInterfaceCreateJSONBodyType6N6rd     APIInterfaceCreateJSONBodyType6 = "6rd"
	APIInterfaceCreateJSONBodyType6N6to4    APIInterfaceCreateJSONBodyType6 = "6to4"
	APIInterfaceCreateJSONBodyType6Slaac    APIInterfaceCreateJSONBodyType6 = "slaac"
	APIInterfaceCreateJSONBodyType6Staticv6 APIInterfaceCreateJSONBodyType6 = "staticv6"
	APIInterfaceCreateJSONBodyType6Track6   APIInterfaceCreateJSONBodyType6 = "track6"
)

// Defines values for APIInterfaceUpdateJSONBodyDhcpcvpt.
const (
	APIInterfaceUpdateJSONBodyDhcpcvptN0 APIInterfaceUpdateJSONBodyDhcpcvpt = 0
	APIInterfaceUpdateJSONBodyDhcpcvptN1 APIInterfaceUpdateJSONBodyDhcpcvpt = 1
	APIInterfaceUpdateJSONBodyDhcpcvptN2 APIInterfaceUpdateJSONBodyDhcpcvpt = 2
	APIInterfaceUpdateJSONBodyDhcpcvptN3 APIInterfaceUpdateJSONBodyDhcpcvpt = 3
	APIInterfaceUpdateJSONBodyDhcpcvptN4 APIInterfaceUpdateJSONBodyDhcpcvpt = 4
	APIInterfaceUpdateJSONBodyDhcpcvptN5 APIInterfaceUpdateJSONBodyDhcpcvpt = 5
	APIInterfaceUpdateJSONBodyDhcpcvptN6 APIInterfaceUpdateJSONBodyDhcpcvpt = 6
	APIInterfaceUpdateJSONBodyDhcpcvptN7 APIInterfaceUpdateJSONBodyDhcpcvpt = 7
)

// Defines values for APIInterfaceUpdateJSONBodyType.
const (
	APIInterfaceUpdateJSONBodyTypeDhcp     APIInterfaceUpdateJSONBodyType = "dhcp"
	APIInterfaceUpdateJSONBodyTypeStaticv4 APIInterfaceUpdateJSONBodyType = "staticv4"
)

// Defines values for APIInterfaceUpdateJSONBodyType6.
const (
	APIInterfaceUpdateJSONBodyType6Dhcp6    APIInterfaceUpdateJSONBodyType6 = "dhcp6"
	APIInterfaceUpdateJSONBodyType6N6rd     APIInterfaceUpdateJSONBodyType6 = "6rd"
	APIInterfaceUpdateJSONBodyType6N6to4    APIInterfaceUpdateJSONBodyType6 = "6to4"
	APIInterfaceUpdateJSONBodyType6Slaac    APIInterfaceUpdateJSONBodyType6 = "slaac"
	APIInterfaceUpdateJSONBodyType6Staticv6 APIInterfaceUpdateJSONBodyType6 = "staticv6"
	APIInterfaceUpdateJSONBodyType6Track6   APIInterfaceUpdateJSONBodyType6 = "track6"
)

// Defines values for APIRoutingGatewayCreateJSONBodyIpprotocol.
const (
	APIRoutingGatewayCreateJSONBodyIpprotocolInet  APIRoutingGatewayCreateJSONBodyIpprotocol = "inet"
	APIRoutingGatewayCreateJSONBodyIpprotocolInet6 APIRoutingGatewayCreateJSONBodyIpprotocol = "inet6"
)

// Defines values for APIRoutingGatewayUpdateJSONBodyIpprotocol.
const (
	APIRoutingGatewayUpdateJSONBodyIpprotocolInet  APIRoutingGatewayUpdateJSONBodyIpprotocol = "inet"
	APIRoutingGatewayUpdateJSONBodyIpprotocolInet6 APIRoutingGatewayUpdateJSONBodyIpprotocol = "inet6"
)

// Defines values for APIServicesDHCPdOptionsCreateJSONBodyType.
const (
	APIServicesDHCPdOptionsCreateJSONBodyTypeBoolean           APIServicesDHCPdOptionsCreateJSONBodyType = "boolean"
	APIServicesDHCPdOptionsCreateJSONBodyTypeIpAddress         APIServicesDHCPdOptionsCreateJSONBodyType = "ip-address"
	APIServicesDHCPdOptionsCreateJSONBodyTypeSignedInteger16   APIServicesDHCPdOptionsCreateJSONBodyType = "signed integer 16"
	APIServicesDHCPdOptionsCreateJSONBodyTypeSignedInteger32   APIServicesDHCPdOptionsCreateJSONBodyType = "signed integer 32"
	APIServicesDHCPdOptionsCreateJSONBodyTypeSignedInteger8    APIServicesDHCPdOptionsCreateJSONBodyType = "signed integer 8"
	APIServicesDHCPdOptionsCreateJSONBodyTypeString            APIServicesDHCPdOptionsCreateJSONBodyType = "string"
	APIServicesDHCPdOptionsCreateJSONBodyTypeText              APIServicesDHCPdOptionsCreateJSONBodyType = "text"
	APIServicesDHCPdOptionsCreateJSONBodyTypeUnsignedInteger16 APIServicesDHCPdOptionsCreateJSONBodyType = "unsigned integer 16"
	APIServicesDHCPdOptionsCreateJSONBodyTypeUnsignedInteger32 APIServicesDHCPdOptionsCreateJSONBodyType = "unsigned integer 32"
	APIServicesDHCPdOptionsCreateJSONBodyTypeUnsignedInteger8  APIServicesDHCPdOptionsCreateJSONBodyType = "unsigned integer 8"
)

// Defines values for APIServicesIPsecPhase1CreateJSONBodyAuthenticationMethod.
const (
	APIServicesIPsecPhase1CreateJSONBodyAuthenticationMethodCert         APIServicesIPsecPhase1CreateJSONBodyAuthenticationMethod = "cert"
	APIServicesIPsecPhase1CreateJSONBodyAuthenticationMethodPreSharedKey APIServicesIPsecPhase1CreateJSONBodyAuthenticationMethod = "pre_shared_key"
)

// Defines values for APIServicesIPsecPhase1CreateJSONBodyCloseaction.
const (
	APIServicesIPsecPhase1CreateJSONBodyCloseactionEmpty APIServicesIPsecPhase1CreateJSONBodyCloseaction = ""
	APIServicesIPsecPhase1CreateJSONBodyCloseactionNone  APIServicesIPsecPhase1CreateJSONBodyCloseaction = "none"
	APIServicesIPsecPhase1CreateJSONBodyCloseactionStart APIServicesIPsecPhase1CreateJSONBodyCloseaction = "start"
	APIServicesIPsecPhase1CreateJSONBodyCloseactionTrap  APIServicesIPsecPhase1CreateJSONBodyCloseaction = "trap"
)

// Defines values for APIServicesIPsecPhase1CreateJSONBodyIketype.
const (
	APIServicesIPsecPhase1CreateJSONBodyIketypeAuto  APIServicesIPsecPhase1CreateJSONBodyIketype = "auto"
	APIServicesIPsecPhase1CreateJSONBodyIketypeIkev1 APIServicesIPsecPhase1CreateJSONBodyIketype = "ikev1"
	APIServicesIPsecPhase1CreateJSONBodyIketypeIkev2 APIServicesIPsecPhase1CreateJSONBodyIketype = "ikev2"
)

// Defines values for APIServicesIPsecPhase1CreateJSONBodyMode.
const (
	APIServicesIPsecPhase1CreateJSONBodyModeAggressive APIServicesIPsecPhase1CreateJSONBodyMode = "aggressive"
	APIServicesIPsecPhase1CreateJSONBodyModeMain       APIServicesIPsecPhase1CreateJSONBodyMode = "main"
)

// Defines values for APIServicesIPsecPhase1CreateJSONBodyMyidType.
const (
	APIServicesIPsecPhase1CreateJSONBodyMyidTypeAddress   APIServicesIPsecPhase1CreateJSONBodyMyidType = "address"
	APIServicesIPsecPhase1CreateJSONBodyMyidTypeAsn1dn    APIServicesIPsecPhase1CreateJSONBodyMyidType = "asn1dn"
	APIServicesIPsecPhase1CreateJSONBodyMyidTypeAuto      APIServicesIPsecPhase1CreateJSONBodyMyidType = "auto"
	APIServicesIPsecPhase1CreateJSONBodyMyidTypeDynDns    APIServicesIPsecPhase1CreateJSONBodyMyidType = "dyn_dns"
	APIServicesIPsecPhase1CreateJSONBodyMyidTypeFqdn      APIServicesIPsecPhase1CreateJSONBodyMyidType = "fqdn"
	APIServicesIPsecPhase1CreateJSONBodyMyidTypeKeyidTag  APIServicesIPsecPhase1CreateJSONBodyMyidType = "keyid tag"
	APIServicesIPsecPhase1CreateJSONBodyMyidTypeMyaddress APIServicesIPsecPhase1CreateJSONBodyMyidType = "myaddress"
	APIServicesIPsecPhase1CreateJSONBodyMyidTypeUserFqdn  APIServicesIPsecPhase1CreateJSONBodyMyidType = "user_fqdn"
)

// Defines values for APIServicesIPsecPhase1CreateJSONBodyNattraversal.
const (
	APIServicesIPsecPhase1CreateJSONBodyNattraversalForce APIServicesIPsecPhase1CreateJSONBodyNattraversal = "force"
	APIServicesIPsecPhase1CreateJSONBodyNattraversalOn    APIServicesIPsecPhase1CreateJSONBodyNattraversal = "on"
)

// Defines values for APIServicesIPsecPhase1CreateJSONBodyPeeridType.
const (
	APIServicesIPsecPhase1CreateJSONBodyPeeridTypeAddress     APIServicesIPsecPhase1CreateJSONBodyPeeridType = "address"
	APIServicesIPsecPhase1CreateJSONBodyPeeridTypeAny         APIServicesIPsecPhase1CreateJSONBodyPeeridType = "any"
	APIServicesIPsecPhase1CreateJSONBodyPeeridTypeAsn1dn      APIServicesIPsecPhase1CreateJSONBodyPeeridType = "asn1dn"
	APIServicesIPsecPhase1CreateJSONBodyPeeridTypeAuto        APIServicesIPsecPhase1CreateJSONBodyPeeridType = "auto"
	APIServicesIPsecPhase1CreateJSONBodyPeeridTypeFqdn        APIServicesIPsecPhase1CreateJSONBodyPeeridType = "fqdn"
	APIServicesIPsecPhase1CreateJSONBodyPeeridTypeKeyidTag    APIServicesIPsecPhase1CreateJSONBodyPeeridType = "keyid tag"
	APIServicesIPsecPhase1CreateJSONBodyPeeridTypePeeraddress APIServicesIPsecPhase1CreateJSONBodyPeeridType = "peeraddress"
	APIServicesIPsecPhase1CreateJSONBodyPeeridTypeUserFqdn    APIServicesIPsecPhase1CreateJSONBodyPeeridType = "user_fqdn"
)

// Defines values for APIServicesIPsecPhase1CreateJSONBodyProtocol.
const (
	APIServicesIPsecPhase1CreateJSONBodyProtocolBoth  APIServicesIPsecPhase1CreateJSONBodyProtocol = "both"
	APIServicesIPsecPhase1CreateJSONBodyProtocolInet  APIServicesIPsecPhase1CreateJSONBodyProtocol = "inet"
	APIServicesIPsecPhase1CreateJSONBodyProtocolInet6 APIServicesIPsecPhase1CreateJSONBodyProtocol = "inet6"
)

// Defines values for APIServicesIPsecPhase1CreateJSONBodyStartaction.
const (
	APIServicesIPsecPhase1CreateJSONBodyStartactionEmpty APIServicesIPsecPhase1CreateJSONBodyStartaction = ""
	APIServicesIPsecPhase1CreateJSONBodyStartactionNone  APIServicesIPsecPhase1CreateJSONBodyStartaction = "none"
	APIServicesIPsecPhase1CreateJSONBodyStartactionStart APIServicesIPsecPhase1CreateJSONBodyStartaction = "start"
	APIServicesIPsecPhase1CreateJSONBodyStartactionTrap  APIServicesIPsecPhase1CreateJSONBodyStartaction = "trap"
)

// Defines values for APIServicesIPsecPhase1UpdateJSONBodyAuthenticationMethod.
const (
	APIServicesIPsecPhase1UpdateJSONBodyAuthenticationMethodCert         APIServicesIPsecPhase1UpdateJSONBodyAuthenticationMethod = "cert"
	APIServicesIPsecPhase1UpdateJSONBodyAuthenticationMethodPreSharedKey APIServicesIPsecPhase1UpdateJSONBodyAuthenticationMethod = "pre_shared_key"
)

// Defines values for APIServicesIPsecPhase1UpdateJSONBodyCloseaction.
const (
	APIServicesIPsecPhase1UpdateJSONBodyCloseactionEmpty APIServicesIPsecPhase1UpdateJSONBodyCloseaction = ""
	APIServicesIPsecPhase1UpdateJSONBodyCloseactionNone  APIServicesIPsecPhase1UpdateJSONBodyCloseaction = "none"
	APIServicesIPsecPhase1UpdateJSONBodyCloseactionStart APIServicesIPsecPhase1UpdateJSONBodyCloseaction = "start"
	APIServicesIPsecPhase1UpdateJSONBodyCloseactionTrap  APIServicesIPsecPhase1UpdateJSONBodyCloseaction = "trap"
)

// Defines values for APIServicesIPsecPhase1UpdateJSONBodyIketype.
const (
	APIServicesIPsecPhase1UpdateJSONBodyIketypeAuto  APIServicesIPsecPhase1UpdateJSONBodyIketype = "auto"
	APIServicesIPsecPhase1UpdateJSONBodyIketypeIkev1 APIServicesIPsecPhase1UpdateJSONBodyIketype = "ikev1"
	APIServicesIPsecPhase1UpdateJSONBodyIketypeIkev2 APIServicesIPsecPhase1UpdateJSONBodyIketype = "ikev2"
)

// Defines values for APIServicesIPsecPhase1UpdateJSONBodyMode.
const (
	APIServicesIPsecPhase1UpdateJSONBodyModeAggressive APIServicesIPsecPhase1UpdateJSONBodyMode = "aggressive"
	APIServicesIPsecPhase1UpdateJSONBodyModeMain       APIServicesIPsecPhase1UpdateJSONBodyMode = "main"
)

// Defines values for APIServicesIPsecPhase1UpdateJSONBodyMyidType.
const (
	APIServicesIPsecPhase1UpdateJSONBodyMyidTypeAddress   APIServicesIPsecPhase1UpdateJSONBodyMyidType = "address"
	APIServicesIPsecPhase1UpdateJSONBodyMyidTypeAsn1dn    APIServicesIPsecPhase1UpdateJSONBodyMyidType = "asn1dn"
	APIServicesIPsecPhase1UpdateJSONBodyMyidTypeAuto      APIServicesIPsecPhase1UpdateJSONBodyMyidType = "auto"
	APIServicesIPsecPhase1UpdateJSONBodyMyidTypeDynDns    APIServicesIPsecPhase1UpdateJSONBodyMyidType = "dyn_dns"
	APIServicesIPsecPhase1UpdateJSONBodyMyidTypeFqdn      APIServicesIPsecPhase1UpdateJSONBodyMyidType = "fqdn"
	APIServicesIPsecPhase1UpdateJSONBodyMyidTypeKeyidTag  APIServicesIPsecPhase1UpdateJSONBodyMyidType = "keyid tag"
	APIServicesIPsecPhase1UpdateJSONBodyMyidTypeMyaddress APIServicesIPsecPhase1UpdateJSONBodyMyidType = "myaddress"
	APIServicesIPsecPhase1UpdateJSONBodyMyidTypeUserFqdn  APIServicesIPsecPhase1UpdateJSONBodyMyidType = "user_fqdn"
)

// Defines values for APIServicesIPsecPhase1UpdateJSONBodyNattraversal.
const (
	APIServicesIPsecPhase1UpdateJSONBodyNattraversalForce APIServicesIPsecPhase1UpdateJSONBodyNattraversal = "force"
	APIServicesIPsecPhase1UpdateJSONBodyNattraversalOn    APIServicesIPsecPhase1UpdateJSONBodyNattraversal = "on"
)

// Defines values for APIServicesIPsecPhase1UpdateJSONBodyPeeridType.
const (
	APIServicesIPsecPhase1UpdateJSONBodyPeeridTypeAddress     APIServicesIPsecPhase1UpdateJSONBodyPeeridType = "address"
	APIServicesIPsecPhase1UpdateJSONBodyPeeridTypeAny         APIServicesIPsecPhase1UpdateJSONBodyPeeridType = "any"
	APIServicesIPsecPhase1UpdateJSONBodyPeeridTypeAsn1dn      APIServicesIPsecPhase1UpdateJSONBodyPeeridType = "asn1dn"
	APIServicesIPsecPhase1UpdateJSONBodyPeeridTypeAuto        APIServicesIPsecPhase1UpdateJSONBodyPeeridType = "auto"
	APIServicesIPsecPhase1UpdateJSONBodyPeeridTypeFqdn        APIServicesIPsecPhase1UpdateJSONBodyPeeridType = "fqdn"
	APIServicesIPsecPhase1UpdateJSONBodyPeeridTypeKeyidTag    APIServicesIPsecPhase1UpdateJSONBodyPeeridType = "keyid tag"
	APIServicesIPsecPhase1UpdateJSONBodyPeeridTypePeeraddress APIServicesIPsecPhase1UpdateJSONBodyPeeridType = "peeraddress"
	APIServicesIPsecPhase1UpdateJSONBodyPeeridTypeUserFqdn    APIServicesIPsecPhase1UpdateJSONBodyPeeridType = "user_fqdn"
)

// Defines values for APIServicesIPsecPhase1UpdateJSONBodyProtocol.
const (
	APIServicesIPsecPhase1UpdateJSONBodyProtocolBoth  APIServicesIPsecPhase1UpdateJSONBodyProtocol = "both"
	APIServicesIPsecPhase1UpdateJSONBodyProtocolInet  APIServicesIPsecPhase1UpdateJSONBodyProtocol = "inet"
	APIServicesIPsecPhase1UpdateJSONBodyProtocolInet6 APIServicesIPsecPhase1UpdateJSONBodyProtocol = "inet6"
)

// Defines values for APIServicesIPsecPhase1UpdateJSONBodyStartaction.
const (
	APIServicesIPsecPhase1UpdateJSONBodyStartactionEmpty APIServicesIPsecPhase1UpdateJSONBodyStartaction = ""
	APIServicesIPsecPhase1UpdateJSONBodyStartactionNone  APIServicesIPsecPhase1UpdateJSONBodyStartaction = "none"
	APIServicesIPsecPhase1UpdateJSONBodyStartactionStart APIServicesIPsecPhase1UpdateJSONBodyStartaction = "start"
	APIServicesIPsecPhase1UpdateJSONBodyStartactionTrap  APIServicesIPsecPhase1UpdateJSONBodyStartaction = "trap"
)

// Defines values for APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup.
const (
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN1  APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 1
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN14 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 14
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN15 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 15
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN16 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 16
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN17 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 17
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN18 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 18
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN19 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 19
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN2  APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 2
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN20 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 20
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN21 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 21
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN22 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 22
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN23 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 23
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN24 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 24
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN25 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 25
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN26 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 26
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN27 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 27
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN28 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 28
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN29 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 29
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN30 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 30
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN31 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 31
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN32 APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 32
	APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroupN5  APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup = 5
)

// Defines values for APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithm.
const (
	APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithmAesxcbc APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithm = "aesxcbc"
	APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithmMd5     APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithm = "md5"
	APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithmSha1    APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithm = "sha1"
	APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithmSha256  APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithm = "sha256"
	APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithmSha384  APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithm = "sha384"
	APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithmSha512  APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithm = "sha512"
)

// Defines values for APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithm.
const (
	APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithmAesxcbc APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithm = "aesxcbc"
	APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithmMd5     APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithm = "md5"
	APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithmSha1    APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithm = "sha1"
	APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithmSha256  APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithm = "sha256"
	APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithmSha384  APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithm = "sha384"
	APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithmSha512  APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithm = "sha512"
)

// Defines values for APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOption.
const (
	APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOptionAesxcbc    APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOption = "aesxcbc"
	APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOptionHmacMd5    APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOption = "hmac_md5"
	APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOptionHmacSha1   APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOption = "hmac_sha1"
	APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOptionHmacSha256 APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOption = "hmac_sha256"
	APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOptionHmacSha384 APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOption = "hmac_sha384"
	APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOptionHmacSha512 APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOption = "hmac_sha512"
)

// Defines values for APIServicesIPsecPhase2CreateJSONBodyMode.
const (
	APIServicesIPsecPhase2CreateJSONBodyModeTransport APIServicesIPsecPhase2CreateJSONBodyMode = "transport"
	APIServicesIPsecPhase2CreateJSONBodyModeTunnel    APIServicesIPsecPhase2CreateJSONBodyMode = "tunnel"
	APIServicesIPsecPhase2CreateJSONBodyModeTunnel6   APIServicesIPsecPhase2CreateJSONBodyMode = "tunnel6"
	APIServicesIPsecPhase2CreateJSONBodyModeVti       APIServicesIPsecPhase2CreateJSONBodyMode = "vti"
)

// Defines values for APIServicesIPsecPhase2CreateJSONBodyPfsgroup.
const (
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN1  APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 1
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN14 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 14
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN15 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 15
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN16 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 16
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN17 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 17
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN18 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 18
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN19 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 19
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN2  APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 2
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN20 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 20
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN21 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 21
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN22 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 22
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN23 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 23
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN24 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 24
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN25 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 25
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN26 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 26
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN27 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 27
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN28 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 28
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN29 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 29
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN30 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 30
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN31 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 31
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN32 APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 32
	APIServicesIPsecPhase2CreateJSONBodyPfsgroupN5  APIServicesIPsecPhase2CreateJSONBodyPfsgroup = 5
)

// Defines values for APIServicesIPsecPhase2CreateJSONBodyProtocol.
const (
	APIServicesIPsecPhase2CreateJSONBodyProtocolAh  APIServicesIPsecPhase2CreateJSONBodyProtocol = "ah"
	APIServicesIPsecPhase2CreateJSONBodyProtocolEsp APIServicesIPsecPhase2CreateJSONBodyProtocol = "esp"
)

// Defines values for APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOption.
const (
	APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOptionAesxcbc    APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOption = "aesxcbc"
	APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOptionHmacMd5    APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOption = "hmac_md5"
	APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOptionHmacSha1   APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOption = "hmac_sha1"
	APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOptionHmacSha256 APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOption = "hmac_sha256"
	APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOptionHmacSha384 APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOption = "hmac_sha384"
	APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOptionHmacSha512 APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOption = "hmac_sha512"
)

// Defines values for APIServicesIPsecPhase2UpdateJSONBodyMode.
const (
	APIServicesIPsecPhase2UpdateJSONBodyModeTransport APIServicesIPsecPhase2UpdateJSONBodyMode = "transport"
	APIServicesIPsecPhase2UpdateJSONBodyModeTunnel    APIServicesIPsecPhase2UpdateJSONBodyMode = "tunnel"
	APIServicesIPsecPhase2UpdateJSONBodyModeTunnel6   APIServicesIPsecPhase2UpdateJSONBodyMode = "tunnel6"
	APIServicesIPsecPhase2UpdateJSONBodyModeVti       APIServicesIPsecPhase2UpdateJSONBodyMode = "vti"
)

// Defines values for APIServicesIPsecPhase2UpdateJSONBodyPfsgroup.
const (
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN1  APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 1
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN14 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 14
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN15 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 15
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN16 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 16
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN17 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 17
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN18 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 18
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN19 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 19
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN2  APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 2
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN20 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 20
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN21 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 21
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN22 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 22
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN23 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 23
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN24 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 24
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN25 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 25
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN26 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 26
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN27 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 27
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN28 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 28
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN29 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 29
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN30 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 30
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN31 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 31
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN32 APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 32
	APIServicesIPsecPhase2UpdateJSONBodyPfsgroupN5  APIServicesIPsecPhase2UpdateJSONBodyPfsgroup = 5
)

// Defines values for APIServicesIPsecPhase2UpdateJSONBodyProtocol.
const (
	APIServicesIPsecPhase2UpdateJSONBodyProtocolAh  APIServicesIPsecPhase2UpdateJSONBodyProtocol = "ah"
	APIServicesIPsecPhase2UpdateJSONBodyProtocolEsp APIServicesIPsecPhase2UpdateJSONBodyProtocol = "esp"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyCompression.
const (
	APIServicesOpenVPNClientCreateJSONBodyCompressionAdaptive APIServicesOpenVPNClientCreateJSONBodyCompression = "adaptive"
	APIServicesOpenVPNClientCreateJSONBodyCompressionLz4      APIServicesOpenVPNClientCreateJSONBodyCompression = "lz4"
	APIServicesOpenVPNClientCreateJSONBodyCompressionLz4V2    APIServicesOpenVPNClientCreateJSONBodyCompression = "lz4-v2"
	APIServicesOpenVPNClientCreateJSONBodyCompressionLzo      APIServicesOpenVPNClientCreateJSONBodyCompression = "lzo"
	APIServicesOpenVPNClientCreateJSONBodyCompressionNo       APIServicesOpenVPNClientCreateJSONBodyCompression = "no"
	APIServicesOpenVPNClientCreateJSONBodyCompressionNoadapt  APIServicesOpenVPNClientCreateJSONBodyCompression = "noadapt"
	APIServicesOpenVPNClientCreateJSONBodyCompressionNone     APIServicesOpenVPNClientCreateJSONBodyCompression = "none"
	APIServicesOpenVPNClientCreateJSONBodyCompressionStub     APIServicesOpenVPNClientCreateJSONBodyCompression = "stub"
	APIServicesOpenVPNClientCreateJSONBodyCompressionStubV2   APIServicesOpenVPNClientCreateJSONBodyCompression = "stub-v2"
	APIServicesOpenVPNClientCreateJSONBodyCompressionYes      APIServicesOpenVPNClientCreateJSONBodyCompression = "yes"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyCreateGw.
const (
	APIServicesOpenVPNClientCreateJSONBodyCreateGwBoth   APIServicesOpenVPNClientCreateJSONBodyCreateGw = "both"
	APIServicesOpenVPNClientCreateJSONBodyCreateGwV4only APIServicesOpenVPNClientCreateJSONBodyCreateGw = "v4only"
	APIServicesOpenVPNClientCreateJSONBodyCreateGwV6only APIServicesOpenVPNClientCreateJSONBodyCreateGw = "v6only"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyDevMode.
const (
	APIServicesOpenVPNClientCreateJSONBodyDevModeTap APIServicesOpenVPNClientCreateJSONBodyDevMode = "tap"
	APIServicesOpenVPNClientCreateJSONBodyDevModeTun APIServicesOpenVPNClientCreateJSONBodyDevMode = "tun"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyDigest.
const (
	APIServicesOpenVPNClientCreateJSONBodyDigestBLAKE2b256 APIServicesOpenVPNClientCreateJSONBodyDigest = "BLAKE2b256"
	APIServicesOpenVPNClientCreateJSONBodyDigestBLAKE2b512 APIServicesOpenVPNClientCreateJSONBodyDigest = "BLAKE2b512"
	APIServicesOpenVPNClientCreateJSONBodyDigestMD4        APIServicesOpenVPNClientCreateJSONBodyDigest = "MD4"
	APIServicesOpenVPNClientCreateJSONBodyDigestMD5        APIServicesOpenVPNClientCreateJSONBodyDigest = "MD5"
	APIServicesOpenVPNClientCreateJSONBodyDigestMD5SHA1    APIServicesOpenVPNClientCreateJSONBodyDigest = "MD5-SHA1"
	APIServicesOpenVPNClientCreateJSONBodyDigestMDC2       APIServicesOpenVPNClientCreateJSONBodyDigest = "MDC2"
	APIServicesOpenVPNClientCreateJSONBodyDigestNone       APIServicesOpenVPNClientCreateJSONBodyDigest = "none"
	APIServicesOpenVPNClientCreateJSONBodyDigestRIPEMD160  APIServicesOpenVPNClientCreateJSONBodyDigest = "RIPEMD160"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHA1       APIServicesOpenVPNClientCreateJSONBodyDigest = "SHA1"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHA224     APIServicesOpenVPNClientCreateJSONBodyDigest = "SHA224"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHA256     APIServicesOpenVPNClientCreateJSONBodyDigest = "SHA256"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHA3224    APIServicesOpenVPNClientCreateJSONBodyDigest = "SHA3-224"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHA3256    APIServicesOpenVPNClientCreateJSONBodyDigest = "SHA3-256"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHA3384    APIServicesOpenVPNClientCreateJSONBodyDigest = "SHA3-384"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHA3512    APIServicesOpenVPNClientCreateJSONBodyDigest = "SHA3-512"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHA384     APIServicesOpenVPNClientCreateJSONBodyDigest = "SHA384"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHA512     APIServicesOpenVPNClientCreateJSONBodyDigest = "SHA512"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHA512224  APIServicesOpenVPNClientCreateJSONBodyDigest = "SHA512-224"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHA512256  APIServicesOpenVPNClientCreateJSONBodyDigest = "SHA512-256"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHAKE128   APIServicesOpenVPNClientCreateJSONBodyDigest = "SHAKE128"
	APIServicesOpenVPNClientCreateJSONBodyDigestSHAKE256   APIServicesOpenVPNClientCreateJSONBodyDigest = "SHAKE256"
	APIServicesOpenVPNClientCreateJSONBodyDigestSM3        APIServicesOpenVPNClientCreateJSONBodyDigest = "SM3"
	APIServicesOpenVPNClientCreateJSONBodyDigestWhirlpool  APIServicesOpenVPNClientCreateJSONBodyDigest = "whirlpool"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyExitNotify.
const (
	APIServicesOpenVPNClientCreateJSONBodyExitNotifyEmpty APIServicesOpenVPNClientCreateJSONBodyExitNotify = ""
	APIServicesOpenVPNClientCreateJSONBodyExitNotifyNone  APIServicesOpenVPNClientCreateJSONBodyExitNotify = "none"
	APIServicesOpenVPNClientCreateJSONBodyExitNotifyOnce  APIServicesOpenVPNClientCreateJSONBodyExitNotify = "once"
	APIServicesOpenVPNClientCreateJSONBodyExitNotifyTwice APIServicesOpenVPNClientCreateJSONBodyExitNotify = "twice"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyMode.
const (
	APIServicesOpenVPNClientCreateJSONBodyModeP2pSharedKey APIServicesOpenVPNClientCreateJSONBodyMode = "p2p_shared_key"
	APIServicesOpenVPNClientCreateJSONBodyModeP2pTls       APIServicesOpenVPNClientCreateJSONBodyMode = "p2p_tls"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyPingAction.
const (
	APIServicesOpenVPNClientCreateJSONBodyPingActionPingExit    APIServicesOpenVPNClientCreateJSONBodyPingAction = "ping_exit"
	APIServicesOpenVPNClientCreateJSONBodyPingActionPingRestart APIServicesOpenVPNClientCreateJSONBodyPingAction = "ping_restart"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyPingMethod.
const (
	APIServicesOpenVPNClientCreateJSONBodyPingMethodKeepalive APIServicesOpenVPNClientCreateJSONBodyPingMethod = "keepalive"
	APIServicesOpenVPNClientCreateJSONBodyPingMethodPing      APIServicesOpenVPNClientCreateJSONBodyPingMethod = "ping"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyProtocol.
const (
	APIServicesOpenVPNClientCreateJSONBodyProtocolTcp  APIServicesOpenVPNClientCreateJSONBodyProtocol = "tcp"
	APIServicesOpenVPNClientCreateJSONBodyProtocolTcp4 APIServicesOpenVPNClientCreateJSONBodyProtocol = "tcp4"
	APIServicesOpenVPNClientCreateJSONBodyProtocolTcp6 APIServicesOpenVPNClientCreateJSONBodyProtocol = "tcp6"
	APIServicesOpenVPNClientCreateJSONBodyProtocolUdp  APIServicesOpenVPNClientCreateJSONBodyProtocol = "udp"
	APIServicesOpenVPNClientCreateJSONBodyProtocolUdp4 APIServicesOpenVPNClientCreateJSONBodyProtocol = "udp4"
	APIServicesOpenVPNClientCreateJSONBodyProtocolUdp6 APIServicesOpenVPNClientCreateJSONBodyProtocol = "udp6"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodySndrcvbuf.
const (
	APIServicesOpenVPNClientCreateJSONBodySndrcvbufDefault APIServicesOpenVPNClientCreateJSONBodySndrcvbuf = "default"
	APIServicesOpenVPNClientCreateJSONBodySndrcvbufN128KiB APIServicesOpenVPNClientCreateJSONBodySndrcvbuf = "128KiB"
	APIServicesOpenVPNClientCreateJSONBodySndrcvbufN1MiB   APIServicesOpenVPNClientCreateJSONBodySndrcvbuf = "1MiB"
	APIServicesOpenVPNClientCreateJSONBodySndrcvbufN256KiB APIServicesOpenVPNClientCreateJSONBodySndrcvbuf = "256KiB"
	APIServicesOpenVPNClientCreateJSONBodySndrcvbufN2MiB   APIServicesOpenVPNClientCreateJSONBodySndrcvbuf = "2MiB"
	APIServicesOpenVPNClientCreateJSONBodySndrcvbufN512KiB APIServicesOpenVPNClientCreateJSONBodySndrcvbuf = "512KiB"
	APIServicesOpenVPNClientCreateJSONBodySndrcvbufN64KiB  APIServicesOpenVPNClientCreateJSONBodySndrcvbuf = "64KiB"
	APIServicesOpenVPNClientCreateJSONBodySndrcvbufNone    APIServicesOpenVPNClientCreateJSONBodySndrcvbuf = "none"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyTlsType.
const (
	APIServicesOpenVPNClientCreateJSONBodyTlsTypeAuth  APIServicesOpenVPNClientCreateJSONBodyTlsType = "auth"
	APIServicesOpenVPNClientCreateJSONBodyTlsTypeCrypt APIServicesOpenVPNClientCreateJSONBodyTlsType = "crypt"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydir.
const (
	APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydirBothDirections APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydir = "both-directions"
	APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydirDefault        APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydir = "default"
	APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydirDirection0     APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydir = "direction-0"
	APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydirDirection1     APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydir = "direction-1"
)

// Defines values for APIServicesOpenVPNClientCreateJSONBodyTopology.
const (
	APIServicesOpenVPNClientCreateJSONBodyTopologyNet30  APIServicesOpenVPNClientCreateJSONBodyTopology = "net30"
	APIServicesOpenVPNClientCreateJSONBodyTopologySubnet APIServicesOpenVPNClientCreateJSONBodyTopology = "subnet"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyAllowCompression.
const (
	APIServicesOpenVPNClientUpdateJSONBodyAllowCompressionAsym APIServicesOpenVPNClientUpdateJSONBodyAllowCompression = "asym"
	APIServicesOpenVPNClientUpdateJSONBodyAllowCompressionNo   APIServicesOpenVPNClientUpdateJSONBodyAllowCompression = "no"
	APIServicesOpenVPNClientUpdateJSONBodyAllowCompressionYes  APIServicesOpenVPNClientUpdateJSONBodyAllowCompression = "yes"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyCertDepth.
const (
	APIServicesOpenVPNClientUpdateJSONBodyCertDepthFive  APIServicesOpenVPNClientUpdateJSONBodyCertDepth = "five"
	APIServicesOpenVPNClientUpdateJSONBodyCertDepthFour  APIServicesOpenVPNClientUpdateJSONBodyCertDepth = "four"
	APIServicesOpenVPNClientUpdateJSONBodyCertDepthNone  APIServicesOpenVPNClientUpdateJSONBodyCertDepth = "none"
	APIServicesOpenVPNClientUpdateJSONBodyCertDepthOne   APIServicesOpenVPNClientUpdateJSONBodyCertDepth = "one"
	APIServicesOpenVPNClientUpdateJSONBodyCertDepthThree APIServicesOpenVPNClientUpdateJSONBodyCertDepth = "three"
	APIServicesOpenVPNClientUpdateJSONBodyCertDepthTwo   APIServicesOpenVPNClientUpdateJSONBodyCertDepth = "two"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyCompression.
const (
	APIServicesOpenVPNClientUpdateJSONBodyCompressionAdaptive APIServicesOpenVPNClientUpdateJSONBodyCompression = "adaptive"
	APIServicesOpenVPNClientUpdateJSONBodyCompressionLz4      APIServicesOpenVPNClientUpdateJSONBodyCompression = "lz4"
	APIServicesOpenVPNClientUpdateJSONBodyCompressionLz4V2    APIServicesOpenVPNClientUpdateJSONBodyCompression = "lz4-v2"
	APIServicesOpenVPNClientUpdateJSONBodyCompressionLzo      APIServicesOpenVPNClientUpdateJSONBodyCompression = "lzo"
	APIServicesOpenVPNClientUpdateJSONBodyCompressionNo       APIServicesOpenVPNClientUpdateJSONBodyCompression = "no"
	APIServicesOpenVPNClientUpdateJSONBodyCompressionNoadapt  APIServicesOpenVPNClientUpdateJSONBodyCompression = "noadapt"
	APIServicesOpenVPNClientUpdateJSONBodyCompressionNone     APIServicesOpenVPNClientUpdateJSONBodyCompression = "none"
	APIServicesOpenVPNClientUpdateJSONBodyCompressionStub     APIServicesOpenVPNClientUpdateJSONBodyCompression = "stub"
	APIServicesOpenVPNClientUpdateJSONBodyCompressionStubV2   APIServicesOpenVPNClientUpdateJSONBodyCompression = "stub-v2"
	APIServicesOpenVPNClientUpdateJSONBodyCompressionYes      APIServicesOpenVPNClientUpdateJSONBodyCompression = "yes"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyCreateGw.
const (
	APIServicesOpenVPNClientUpdateJSONBodyCreateGwBoth   APIServicesOpenVPNClientUpdateJSONBodyCreateGw = "both"
	APIServicesOpenVPNClientUpdateJSONBodyCreateGwV4only APIServicesOpenVPNClientUpdateJSONBodyCreateGw = "v4only"
	APIServicesOpenVPNClientUpdateJSONBodyCreateGwV6only APIServicesOpenVPNClientUpdateJSONBodyCreateGw = "v6only"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyDevMode.
const (
	APIServicesOpenVPNClientUpdateJSONBodyDevModeTap APIServicesOpenVPNClientUpdateJSONBodyDevMode = "tap"
	APIServicesOpenVPNClientUpdateJSONBodyDevModeTun APIServicesOpenVPNClientUpdateJSONBodyDevMode = "tun"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyDigest.
const (
	APIServicesOpenVPNClientUpdateJSONBodyDigestBLAKE2b256 APIServicesOpenVPNClientUpdateJSONBodyDigest = "BLAKE2b256"
	APIServicesOpenVPNClientUpdateJSONBodyDigestBLAKE2b512 APIServicesOpenVPNClientUpdateJSONBodyDigest = "BLAKE2b512"
	APIServicesOpenVPNClientUpdateJSONBodyDigestMD4        APIServicesOpenVPNClientUpdateJSONBodyDigest = "MD4"
	APIServicesOpenVPNClientUpdateJSONBodyDigestMD5        APIServicesOpenVPNClientUpdateJSONBodyDigest = "MD5"
	APIServicesOpenVPNClientUpdateJSONBodyDigestMD5SHA1    APIServicesOpenVPNClientUpdateJSONBodyDigest = "MD5-SHA1"
	APIServicesOpenVPNClientUpdateJSONBodyDigestMDC2       APIServicesOpenVPNClientUpdateJSONBodyDigest = "MDC2"
	APIServicesOpenVPNClientUpdateJSONBodyDigestNone       APIServicesOpenVPNClientUpdateJSONBodyDigest = "none"
	APIServicesOpenVPNClientUpdateJSONBodyDigestRIPEMD160  APIServicesOpenVPNClientUpdateJSONBodyDigest = "RIPEMD160"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHA1       APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHA1"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHA224     APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHA224"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHA256     APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHA256"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHA3224    APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHA3-224"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHA3256    APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHA3-256"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHA3384    APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHA3-384"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHA3512    APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHA3-512"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHA384     APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHA384"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHA512     APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHA512"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHA512224  APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHA512-224"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHA512256  APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHA512-256"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHAKE128   APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHAKE128"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSHAKE256   APIServicesOpenVPNClientUpdateJSONBodyDigest = "SHAKE256"
	APIServicesOpenVPNClientUpdateJSONBodyDigestSM3        APIServicesOpenVPNClientUpdateJSONBodyDigest = "SM3"
	APIServicesOpenVPNClientUpdateJSONBodyDigestWhirlpool  APIServicesOpenVPNClientUpdateJSONBodyDigest = "whirlpool"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyEcdhCurve.
const (
	APIServicesOpenVPNClientUpdateJSONBodyEcdhCurveNone       APIServicesOpenVPNClientUpdateJSONBodyEcdhCurve = "none"
	APIServicesOpenVPNClientUpdateJSONBodyEcdhCurvePrime256v1 APIServicesOpenVPNClientUpdateJSONBodyEcdhCurve = "prime256v1"
	APIServicesOpenVPNClientUpdateJSONBodyEcdhCurveSecp384r1  APIServicesOpenVPNClientUpdateJSONBodyEcdhCurve = "secp384r1"
	APIServicesOpenVPNClientUpdateJSONBodyEcdhCurveSecp521r1  APIServicesOpenVPNClientUpdateJSONBodyEcdhCurve = "secp521r1"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyExitNotify.
const (
	APIServicesOpenVPNClientUpdateJSONBodyExitNotifyEmpty APIServicesOpenVPNClientUpdateJSONBodyExitNotify = ""
	APIServicesOpenVPNClientUpdateJSONBodyExitNotifyNone  APIServicesOpenVPNClientUpdateJSONBodyExitNotify = "none"
	APIServicesOpenVPNClientUpdateJSONBodyExitNotifyOnce  APIServicesOpenVPNClientUpdateJSONBodyExitNotify = "once"
	APIServicesOpenVPNClientUpdateJSONBodyExitNotifyTwice APIServicesOpenVPNClientUpdateJSONBodyExitNotify = "twice"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyMode.
const (
	APIServicesOpenVPNClientUpdateJSONBodyModeP2pSharedKey  APIServicesOpenVPNClientUpdateJSONBodyMode = "p2p_shared_key"
	APIServicesOpenVPNClientUpdateJSONBodyModeP2pTls        APIServicesOpenVPNClientUpdateJSONBodyMode = "p2p_tls"
	APIServicesOpenVPNClientUpdateJSONBodyModeServerTls     APIServicesOpenVPNClientUpdateJSONBodyMode = "server_tls"
	APIServicesOpenVPNClientUpdateJSONBodyModeServerTlsUser APIServicesOpenVPNClientUpdateJSONBodyMode = "server_tls_user"
	APIServicesOpenVPNClientUpdateJSONBodyModeServerUser    APIServicesOpenVPNClientUpdateJSONBodyMode = "server_user"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeType.
const (
	APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeTypeB APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeType = "b"
	APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeTypeH APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeType = "h"
	APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeTypeM APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeType = "m"
	APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeTypeP APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeType = "p"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyPingAction.
const (
	APIServicesOpenVPNClientUpdateJSONBodyPingActionPingExit    APIServicesOpenVPNClientUpdateJSONBodyPingAction = "ping_exit"
	APIServicesOpenVPNClientUpdateJSONBodyPingActionPingRestart APIServicesOpenVPNClientUpdateJSONBodyPingAction = "ping_restart"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyPingMethod.
const (
	APIServicesOpenVPNClientUpdateJSONBodyPingMethodKeepalive APIServicesOpenVPNClientUpdateJSONBodyPingMethod = "keepalive"
	APIServicesOpenVPNClientUpdateJSONBodyPingMethodPing      APIServicesOpenVPNClientUpdateJSONBodyPingMethod = "ping"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyProtocol.
const (
	APIServicesOpenVPNClientUpdateJSONBodyProtocolTcp  APIServicesOpenVPNClientUpdateJSONBodyProtocol = "tcp"
	APIServicesOpenVPNClientUpdateJSONBodyProtocolTcp4 APIServicesOpenVPNClientUpdateJSONBodyProtocol = "tcp4"
	APIServicesOpenVPNClientUpdateJSONBodyProtocolTcp6 APIServicesOpenVPNClientUpdateJSONBodyProtocol = "tcp6"
	APIServicesOpenVPNClientUpdateJSONBodyProtocolUdp  APIServicesOpenVPNClientUpdateJSONBodyProtocol = "udp"
	APIServicesOpenVPNClientUpdateJSONBodyProtocolUdp4 APIServicesOpenVPNClientUpdateJSONBodyProtocol = "udp4"
	APIServicesOpenVPNClientUpdateJSONBodyProtocolUdp6 APIServicesOpenVPNClientUpdateJSONBodyProtocol = "udp6"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyServerbridgeInterface.
const (
	APIServicesOpenVPNClientUpdateJSONBodyServerbridgeInterfaceLan  APIServicesOpenVPNClientUpdateJSONBodyServerbridgeInterface = "lan"
	APIServicesOpenVPNClientUpdateJSONBodyServerbridgeInterfaceNone APIServicesOpenVPNClientUpdateJSONBodyServerbridgeInterface = "none"
	APIServicesOpenVPNClientUpdateJSONBodyServerbridgeInterfaceWan  APIServicesOpenVPNClientUpdateJSONBodyServerbridgeInterface = "wan"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf.
const (
	APIServicesOpenVPNClientUpdateJSONBodySndrcvbufDefault APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf = "default"
	APIServicesOpenVPNClientUpdateJSONBodySndrcvbufN128KiB APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf = "128KiB"
	APIServicesOpenVPNClientUpdateJSONBodySndrcvbufN1MiB   APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf = "1MiB"
	APIServicesOpenVPNClientUpdateJSONBodySndrcvbufN256KiB APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf = "256KiB"
	APIServicesOpenVPNClientUpdateJSONBodySndrcvbufN2MiB   APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf = "2MiB"
	APIServicesOpenVPNClientUpdateJSONBodySndrcvbufN512KiB APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf = "512KiB"
	APIServicesOpenVPNClientUpdateJSONBodySndrcvbufN64KiB  APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf = "64KiB"
	APIServicesOpenVPNClientUpdateJSONBodySndrcvbufNone    APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf = "none"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyTlsType.
const (
	APIServicesOpenVPNClientUpdateJSONBodyTlsTypeAuth  APIServicesOpenVPNClientUpdateJSONBodyTlsType = "auth"
	APIServicesOpenVPNClientUpdateJSONBodyTlsTypeCrypt APIServicesOpenVPNClientUpdateJSONBodyTlsType = "crypt"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydir.
const (
	APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydirBothDirections APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydir = "both-directions"
	APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydirDefault        APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydir = "default"
	APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydirDirection0     APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydir = "direction-0"
	APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydirDirection1     APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydir = "direction-1"
)

// Defines values for APIServicesOpenVPNClientUpdateJSONBodyTopology.
const (
	APIServicesOpenVPNClientUpdateJSONBodyTopologyNet30  APIServicesOpenVPNClientUpdateJSONBodyTopology = "net30"
	APIServicesOpenVPNClientUpdateJSONBodyTopologySubnet APIServicesOpenVPNClientUpdateJSONBodyTopology = "subnet"
)

// Defines values for APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeType.
const (
	APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeTypeB APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeType = "b"
	APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeTypeH APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeType = "h"
	APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeTypeM APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeType = "m"
	APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeTypeP APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeType = "p"
)

// Defines values for APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeType.
const (
	APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeTypeB APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeType = "b"
	APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeTypeH APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeType = "h"
	APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeTypeM APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeType = "m"
	APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeTypeP APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeType = "p"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyAllowCompression.
const (
	APIServicesOpenVPNServerCreateJSONBodyAllowCompressionAsym APIServicesOpenVPNServerCreateJSONBodyAllowCompression = "asym"
	APIServicesOpenVPNServerCreateJSONBodyAllowCompressionNo   APIServicesOpenVPNServerCreateJSONBodyAllowCompression = "no"
	APIServicesOpenVPNServerCreateJSONBodyAllowCompressionYes  APIServicesOpenVPNServerCreateJSONBodyAllowCompression = "yes"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyCertDepth.
const (
	APIServicesOpenVPNServerCreateJSONBodyCertDepthFive  APIServicesOpenVPNServerCreateJSONBodyCertDepth = "five"
	APIServicesOpenVPNServerCreateJSONBodyCertDepthFour  APIServicesOpenVPNServerCreateJSONBodyCertDepth = "four"
	APIServicesOpenVPNServerCreateJSONBodyCertDepthNone  APIServicesOpenVPNServerCreateJSONBodyCertDepth = "none"
	APIServicesOpenVPNServerCreateJSONBodyCertDepthOne   APIServicesOpenVPNServerCreateJSONBodyCertDepth = "one"
	APIServicesOpenVPNServerCreateJSONBodyCertDepthThree APIServicesOpenVPNServerCreateJSONBodyCertDepth = "three"
	APIServicesOpenVPNServerCreateJSONBodyCertDepthTwo   APIServicesOpenVPNServerCreateJSONBodyCertDepth = "two"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyCompression.
const (
	APIServicesOpenVPNServerCreateJSONBodyCompressionAdaptive APIServicesOpenVPNServerCreateJSONBodyCompression = "adaptive"
	APIServicesOpenVPNServerCreateJSONBodyCompressionLz4      APIServicesOpenVPNServerCreateJSONBodyCompression = "lz4"
	APIServicesOpenVPNServerCreateJSONBodyCompressionLz4V2    APIServicesOpenVPNServerCreateJSONBodyCompression = "lz4-v2"
	APIServicesOpenVPNServerCreateJSONBodyCompressionLzo      APIServicesOpenVPNServerCreateJSONBodyCompression = "lzo"
	APIServicesOpenVPNServerCreateJSONBodyCompressionNo       APIServicesOpenVPNServerCreateJSONBodyCompression = "no"
	APIServicesOpenVPNServerCreateJSONBodyCompressionNoadapt  APIServicesOpenVPNServerCreateJSONBodyCompression = "noadapt"
	APIServicesOpenVPNServerCreateJSONBodyCompressionNone     APIServicesOpenVPNServerCreateJSONBodyCompression = "none"
	APIServicesOpenVPNServerCreateJSONBodyCompressionStub     APIServicesOpenVPNServerCreateJSONBodyCompression = "stub"
	APIServicesOpenVPNServerCreateJSONBodyCompressionStubV2   APIServicesOpenVPNServerCreateJSONBodyCompression = "stub-v2"
	APIServicesOpenVPNServerCreateJSONBodyCompressionYes      APIServicesOpenVPNServerCreateJSONBodyCompression = "yes"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyCreateGw.
const (
	APIServicesOpenVPNServerCreateJSONBodyCreateGwBoth   APIServicesOpenVPNServerCreateJSONBodyCreateGw = "both"
	APIServicesOpenVPNServerCreateJSONBodyCreateGwV4only APIServicesOpenVPNServerCreateJSONBodyCreateGw = "v4only"
	APIServicesOpenVPNServerCreateJSONBodyCreateGwV6only APIServicesOpenVPNServerCreateJSONBodyCreateGw = "v6only"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyDevMode.
const (
	APIServicesOpenVPNServerCreateJSONBodyDevModeTap APIServicesOpenVPNServerCreateJSONBodyDevMode = "tap"
	APIServicesOpenVPNServerCreateJSONBodyDevModeTun APIServicesOpenVPNServerCreateJSONBodyDevMode = "tun"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyDigest.
const (
	APIServicesOpenVPNServerCreateJSONBodyDigestBLAKE2b256 APIServicesOpenVPNServerCreateJSONBodyDigest = "BLAKE2b256"
	APIServicesOpenVPNServerCreateJSONBodyDigestBLAKE2b512 APIServicesOpenVPNServerCreateJSONBodyDigest = "BLAKE2b512"
	APIServicesOpenVPNServerCreateJSONBodyDigestMD4        APIServicesOpenVPNServerCreateJSONBodyDigest = "MD4"
	APIServicesOpenVPNServerCreateJSONBodyDigestMD5        APIServicesOpenVPNServerCreateJSONBodyDigest = "MD5"
	APIServicesOpenVPNServerCreateJSONBodyDigestMD5SHA1    APIServicesOpenVPNServerCreateJSONBodyDigest = "MD5-SHA1"
	APIServicesOpenVPNServerCreateJSONBodyDigestMDC2       APIServicesOpenVPNServerCreateJSONBodyDigest = "MDC2"
	APIServicesOpenVPNServerCreateJSONBodyDigestNone       APIServicesOpenVPNServerCreateJSONBodyDigest = "none"
	APIServicesOpenVPNServerCreateJSONBodyDigestRIPEMD160  APIServicesOpenVPNServerCreateJSONBodyDigest = "RIPEMD160"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHA1       APIServicesOpenVPNServerCreateJSONBodyDigest = "SHA1"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHA224     APIServicesOpenVPNServerCreateJSONBodyDigest = "SHA224"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHA256     APIServicesOpenVPNServerCreateJSONBodyDigest = "SHA256"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHA3224    APIServicesOpenVPNServerCreateJSONBodyDigest = "SHA3-224"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHA3256    APIServicesOpenVPNServerCreateJSONBodyDigest = "SHA3-256"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHA3384    APIServicesOpenVPNServerCreateJSONBodyDigest = "SHA3-384"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHA3512    APIServicesOpenVPNServerCreateJSONBodyDigest = "SHA3-512"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHA384     APIServicesOpenVPNServerCreateJSONBodyDigest = "SHA384"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHA512     APIServicesOpenVPNServerCreateJSONBodyDigest = "SHA512"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHA512224  APIServicesOpenVPNServerCreateJSONBodyDigest = "SHA512-224"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHA512256  APIServicesOpenVPNServerCreateJSONBodyDigest = "SHA512-256"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHAKE128   APIServicesOpenVPNServerCreateJSONBodyDigest = "SHAKE128"
	APIServicesOpenVPNServerCreateJSONBodyDigestSHAKE256   APIServicesOpenVPNServerCreateJSONBodyDigest = "SHAKE256"
	APIServicesOpenVPNServerCreateJSONBodyDigestSM3        APIServicesOpenVPNServerCreateJSONBodyDigest = "SM3"
	APIServicesOpenVPNServerCreateJSONBodyDigestWhirlpool  APIServicesOpenVPNServerCreateJSONBodyDigest = "whirlpool"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyEcdhCurve.
const (
	APIServicesOpenVPNServerCreateJSONBodyEcdhCurveNone       APIServicesOpenVPNServerCreateJSONBodyEcdhCurve = "none"
	APIServicesOpenVPNServerCreateJSONBodyEcdhCurvePrime256v1 APIServicesOpenVPNServerCreateJSONBodyEcdhCurve = "prime256v1"
	APIServicesOpenVPNServerCreateJSONBodyEcdhCurveSecp384r1  APIServicesOpenVPNServerCreateJSONBodyEcdhCurve = "secp384r1"
	APIServicesOpenVPNServerCreateJSONBodyEcdhCurveSecp521r1  APIServicesOpenVPNServerCreateJSONBodyEcdhCurve = "secp521r1"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyExitNotify.
const (
	APIServicesOpenVPNServerCreateJSONBodyExitNotifyEmpty APIServicesOpenVPNServerCreateJSONBodyExitNotify = ""
	APIServicesOpenVPNServerCreateJSONBodyExitNotifyNone  APIServicesOpenVPNServerCreateJSONBodyExitNotify = "none"
	APIServicesOpenVPNServerCreateJSONBodyExitNotifyOnce  APIServicesOpenVPNServerCreateJSONBodyExitNotify = "once"
	APIServicesOpenVPNServerCreateJSONBodyExitNotifyTwice APIServicesOpenVPNServerCreateJSONBodyExitNotify = "twice"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyMode.
const (
	APIServicesOpenVPNServerCreateJSONBodyModeP2pSharedKey  APIServicesOpenVPNServerCreateJSONBodyMode = "p2p_shared_key"
	APIServicesOpenVPNServerCreateJSONBodyModeP2pTls        APIServicesOpenVPNServerCreateJSONBodyMode = "p2p_tls"
	APIServicesOpenVPNServerCreateJSONBodyModeServerTls     APIServicesOpenVPNServerCreateJSONBodyMode = "server_tls"
	APIServicesOpenVPNServerCreateJSONBodyModeServerTlsUser APIServicesOpenVPNServerCreateJSONBodyMode = "server_tls_user"
	APIServicesOpenVPNServerCreateJSONBodyModeServerUser    APIServicesOpenVPNServerCreateJSONBodyMode = "server_user"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeType.
const (
	APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeTypeB APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeType = "b"
	APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeTypeH APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeType = "h"
	APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeTypeM APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeType = "m"
	APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeTypeP APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeType = "p"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyPingAction.
const (
	APIServicesOpenVPNServerCreateJSONBodyPingActionPingExit    APIServicesOpenVPNServerCreateJSONBodyPingAction = "ping_exit"
	APIServicesOpenVPNServerCreateJSONBodyPingActionPingRestart APIServicesOpenVPNServerCreateJSONBodyPingAction = "ping_restart"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyPingMethod.
const (
	APIServicesOpenVPNServerCreateJSONBodyPingMethodKeepalive APIServicesOpenVPNServerCreateJSONBodyPingMethod = "keepalive"
	APIServicesOpenVPNServerCreateJSONBodyPingMethodPing      APIServicesOpenVPNServerCreateJSONBodyPingMethod = "ping"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyProtocol.
const (
	APIServicesOpenVPNServerCreateJSONBodyProtocolTcp  APIServicesOpenVPNServerCreateJSONBodyProtocol = "tcp"
	APIServicesOpenVPNServerCreateJSONBodyProtocolTcp4 APIServicesOpenVPNServerCreateJSONBodyProtocol = "tcp4"
	APIServicesOpenVPNServerCreateJSONBodyProtocolTcp6 APIServicesOpenVPNServerCreateJSONBodyProtocol = "tcp6"
	APIServicesOpenVPNServerCreateJSONBodyProtocolUdp  APIServicesOpenVPNServerCreateJSONBodyProtocol = "udp"
	APIServicesOpenVPNServerCreateJSONBodyProtocolUdp4 APIServicesOpenVPNServerCreateJSONBodyProtocol = "udp4"
	APIServicesOpenVPNServerCreateJSONBodyProtocolUdp6 APIServicesOpenVPNServerCreateJSONBodyProtocol = "udp6"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyServerbridgeInterface.
const (
	APIServicesOpenVPNServerCreateJSONBodyServerbridgeInterfaceLan  APIServicesOpenVPNServerCreateJSONBodyServerbridgeInterface = "lan"
	APIServicesOpenVPNServerCreateJSONBodyServerbridgeInterfaceNone APIServicesOpenVPNServerCreateJSONBodyServerbridgeInterface = "none"
	APIServicesOpenVPNServerCreateJSONBodyServerbridgeInterfaceWan  APIServicesOpenVPNServerCreateJSONBodyServerbridgeInterface = "wan"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodySndrcvbuf.
const (
	APIServicesOpenVPNServerCreateJSONBodySndrcvbufDefault APIServicesOpenVPNServerCreateJSONBodySndrcvbuf = "default"
	APIServicesOpenVPNServerCreateJSONBodySndrcvbufN128KiB APIServicesOpenVPNServerCreateJSONBodySndrcvbuf = "128KiB"
	APIServicesOpenVPNServerCreateJSONBodySndrcvbufN1MiB   APIServicesOpenVPNServerCreateJSONBodySndrcvbuf = "1MiB"
	APIServicesOpenVPNServerCreateJSONBodySndrcvbufN256KiB APIServicesOpenVPNServerCreateJSONBodySndrcvbuf = "256KiB"
	APIServicesOpenVPNServerCreateJSONBodySndrcvbufN2MiB   APIServicesOpenVPNServerCreateJSONBodySndrcvbuf = "2MiB"
	APIServicesOpenVPNServerCreateJSONBodySndrcvbufN512KiB APIServicesOpenVPNServerCreateJSONBodySndrcvbuf = "512KiB"
	APIServicesOpenVPNServerCreateJSONBodySndrcvbufN64KiB  APIServicesOpenVPNServerCreateJSONBodySndrcvbuf = "64KiB"
	APIServicesOpenVPNServerCreateJSONBodySndrcvbufNone    APIServicesOpenVPNServerCreateJSONBodySndrcvbuf = "none"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyTlsType.
const (
	APIServicesOpenVPNServerCreateJSONBodyTlsTypeAuth  APIServicesOpenVPNServerCreateJSONBodyTlsType = "auth"
	APIServicesOpenVPNServerCreateJSONBodyTlsTypeCrypt APIServicesOpenVPNServerCreateJSONBodyTlsType = "crypt"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydir.
const (
	APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydirBothDirections APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydir = "both-directions"
	APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydirDefault        APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydir = "default"
	APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydirDirection0     APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydir = "direction-0"
	APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydirDirection1     APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydir = "direction-1"
)

// Defines values for APIServicesOpenVPNServerCreateJSONBodyTopology.
const (
	APIServicesOpenVPNServerCreateJSONBodyTopologyNet30  APIServicesOpenVPNServerCreateJSONBodyTopology = "net30"
	APIServicesOpenVPNServerCreateJSONBodyTopologySubnet APIServicesOpenVPNServerCreateJSONBodyTopology = "subnet"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyAllowCompression.
const (
	APIServicesOpenVPNServerUpdateJSONBodyAllowCompressionAsym APIServicesOpenVPNServerUpdateJSONBodyAllowCompression = "asym"
	APIServicesOpenVPNServerUpdateJSONBodyAllowCompressionNo   APIServicesOpenVPNServerUpdateJSONBodyAllowCompression = "no"
	APIServicesOpenVPNServerUpdateJSONBodyAllowCompressionYes  APIServicesOpenVPNServerUpdateJSONBodyAllowCompression = "yes"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyCertDepth.
const (
	APIServicesOpenVPNServerUpdateJSONBodyCertDepthFive  APIServicesOpenVPNServerUpdateJSONBodyCertDepth = "five"
	APIServicesOpenVPNServerUpdateJSONBodyCertDepthFour  APIServicesOpenVPNServerUpdateJSONBodyCertDepth = "four"
	APIServicesOpenVPNServerUpdateJSONBodyCertDepthNone  APIServicesOpenVPNServerUpdateJSONBodyCertDepth = "none"
	APIServicesOpenVPNServerUpdateJSONBodyCertDepthOne   APIServicesOpenVPNServerUpdateJSONBodyCertDepth = "one"
	APIServicesOpenVPNServerUpdateJSONBodyCertDepthThree APIServicesOpenVPNServerUpdateJSONBodyCertDepth = "three"
	APIServicesOpenVPNServerUpdateJSONBodyCertDepthTwo   APIServicesOpenVPNServerUpdateJSONBodyCertDepth = "two"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyCompression.
const (
	APIServicesOpenVPNServerUpdateJSONBodyCompressionAdaptive APIServicesOpenVPNServerUpdateJSONBodyCompression = "adaptive"
	APIServicesOpenVPNServerUpdateJSONBodyCompressionLz4      APIServicesOpenVPNServerUpdateJSONBodyCompression = "lz4"
	APIServicesOpenVPNServerUpdateJSONBodyCompressionLz4V2    APIServicesOpenVPNServerUpdateJSONBodyCompression = "lz4-v2"
	APIServicesOpenVPNServerUpdateJSONBodyCompressionLzo      APIServicesOpenVPNServerUpdateJSONBodyCompression = "lzo"
	APIServicesOpenVPNServerUpdateJSONBodyCompressionNo       APIServicesOpenVPNServerUpdateJSONBodyCompression = "no"
	APIServicesOpenVPNServerUpdateJSONBodyCompressionNoadapt  APIServicesOpenVPNServerUpdateJSONBodyCompression = "noadapt"
	APIServicesOpenVPNServerUpdateJSONBodyCompressionNone     APIServicesOpenVPNServerUpdateJSONBodyCompression = "none"
	APIServicesOpenVPNServerUpdateJSONBodyCompressionStub     APIServicesOpenVPNServerUpdateJSONBodyCompression = "stub"
	APIServicesOpenVPNServerUpdateJSONBodyCompressionStubV2   APIServicesOpenVPNServerUpdateJSONBodyCompression = "stub-v2"
	APIServicesOpenVPNServerUpdateJSONBodyCompressionYes      APIServicesOpenVPNServerUpdateJSONBodyCompression = "yes"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyCreateGw.
const (
	APIServicesOpenVPNServerUpdateJSONBodyCreateGwBoth   APIServicesOpenVPNServerUpdateJSONBodyCreateGw = "both"
	APIServicesOpenVPNServerUpdateJSONBodyCreateGwV4only APIServicesOpenVPNServerUpdateJSONBodyCreateGw = "v4only"
	APIServicesOpenVPNServerUpdateJSONBodyCreateGwV6only APIServicesOpenVPNServerUpdateJSONBodyCreateGw = "v6only"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyDevMode.
const (
	APIServicesOpenVPNServerUpdateJSONBodyDevModeTap APIServicesOpenVPNServerUpdateJSONBodyDevMode = "tap"
	APIServicesOpenVPNServerUpdateJSONBodyDevModeTun APIServicesOpenVPNServerUpdateJSONBodyDevMode = "tun"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyDigest.
const (
	APIServicesOpenVPNServerUpdateJSONBodyDigestBLAKE2b256 APIServicesOpenVPNServerUpdateJSONBodyDigest = "BLAKE2b256"
	APIServicesOpenVPNServerUpdateJSONBodyDigestBLAKE2b512 APIServicesOpenVPNServerUpdateJSONBodyDigest = "BLAKE2b512"
	APIServicesOpenVPNServerUpdateJSONBodyDigestMD4        APIServicesOpenVPNServerUpdateJSONBodyDigest = "MD4"
	APIServicesOpenVPNServerUpdateJSONBodyDigestMD5        APIServicesOpenVPNServerUpdateJSONBodyDigest = "MD5"
	APIServicesOpenVPNServerUpdateJSONBodyDigestMD5SHA1    APIServicesOpenVPNServerUpdateJSONBodyDigest = "MD5-SHA1"
	APIServicesOpenVPNServerUpdateJSONBodyDigestMDC2       APIServicesOpenVPNServerUpdateJSONBodyDigest = "MDC2"
	APIServicesOpenVPNServerUpdateJSONBodyDigestNone       APIServicesOpenVPNServerUpdateJSONBodyDigest = "none"
	APIServicesOpenVPNServerUpdateJSONBodyDigestRIPEMD160  APIServicesOpenVPNServerUpdateJSONBodyDigest = "RIPEMD160"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHA1       APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHA1"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHA224     APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHA224"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHA256     APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHA256"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHA3224    APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHA3-224"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHA3256    APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHA3-256"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHA3384    APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHA3-384"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHA3512    APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHA3-512"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHA384     APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHA384"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHA512     APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHA512"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHA512224  APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHA512-224"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHA512256  APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHA512-256"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHAKE128   APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHAKE128"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSHAKE256   APIServicesOpenVPNServerUpdateJSONBodyDigest = "SHAKE256"
	APIServicesOpenVPNServerUpdateJSONBodyDigestSM3        APIServicesOpenVPNServerUpdateJSONBodyDigest = "SM3"
	APIServicesOpenVPNServerUpdateJSONBodyDigestWhirlpool  APIServicesOpenVPNServerUpdateJSONBodyDigest = "whirlpool"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyEcdhCurve.
const (
	APIServicesOpenVPNServerUpdateJSONBodyEcdhCurveNone       APIServicesOpenVPNServerUpdateJSONBodyEcdhCurve = "none"
	APIServicesOpenVPNServerUpdateJSONBodyEcdhCurvePrime256v1 APIServicesOpenVPNServerUpdateJSONBodyEcdhCurve = "prime256v1"
	APIServicesOpenVPNServerUpdateJSONBodyEcdhCurveSecp384r1  APIServicesOpenVPNServerUpdateJSONBodyEcdhCurve = "secp384r1"
	APIServicesOpenVPNServerUpdateJSONBodyEcdhCurveSecp521r1  APIServicesOpenVPNServerUpdateJSONBodyEcdhCurve = "secp521r1"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyExitNotify.
const (
	APIServicesOpenVPNServerUpdateJSONBodyExitNotifyEmpty APIServicesOpenVPNServerUpdateJSONBodyExitNotify = ""
	APIServicesOpenVPNServerUpdateJSONBodyExitNotifyNone  APIServicesOpenVPNServerUpdateJSONBodyExitNotify = "none"
	APIServicesOpenVPNServerUpdateJSONBodyExitNotifyOnce  APIServicesOpenVPNServerUpdateJSONBodyExitNotify = "once"
	APIServicesOpenVPNServerUpdateJSONBodyExitNotifyTwice APIServicesOpenVPNServerUpdateJSONBodyExitNotify = "twice"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyMode.
const (
	APIServicesOpenVPNServerUpdateJSONBodyModeP2pSharedKey  APIServicesOpenVPNServerUpdateJSONBodyMode = "p2p_shared_key"
	APIServicesOpenVPNServerUpdateJSONBodyModeP2pTls        APIServicesOpenVPNServerUpdateJSONBodyMode = "p2p_tls"
	APIServicesOpenVPNServerUpdateJSONBodyModeServerTls     APIServicesOpenVPNServerUpdateJSONBodyMode = "server_tls"
	APIServicesOpenVPNServerUpdateJSONBodyModeServerTlsUser APIServicesOpenVPNServerUpdateJSONBodyMode = "server_tls_user"
	APIServicesOpenVPNServerUpdateJSONBodyModeServerUser    APIServicesOpenVPNServerUpdateJSONBodyMode = "server_user"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyNetbiosNodeType.
const (
	B APIServicesOpenVPNServerUpdateJSONBodyNetbiosNodeType = "b"
	H APIServicesOpenVPNServerUpdateJSONBodyNetbiosNodeType = "h"
	M APIServicesOpenVPNServerUpdateJSONBodyNetbiosNodeType = "m"
	P APIServicesOpenVPNServerUpdateJSONBodyNetbiosNodeType = "p"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyPingAction.
const (
	APIServicesOpenVPNServerUpdateJSONBodyPingActionPingExit    APIServicesOpenVPNServerUpdateJSONBodyPingAction = "ping_exit"
	APIServicesOpenVPNServerUpdateJSONBodyPingActionPingRestart APIServicesOpenVPNServerUpdateJSONBodyPingAction = "ping_restart"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyPingMethod.
const (
	APIServicesOpenVPNServerUpdateJSONBodyPingMethodKeepalive APIServicesOpenVPNServerUpdateJSONBodyPingMethod = "keepalive"
	APIServicesOpenVPNServerUpdateJSONBodyPingMethodPing      APIServicesOpenVPNServerUpdateJSONBodyPingMethod = "ping"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyProtocol.
const (
	APIServicesOpenVPNServerUpdateJSONBodyProtocolTcp  APIServicesOpenVPNServerUpdateJSONBodyProtocol = "tcp"
	APIServicesOpenVPNServerUpdateJSONBodyProtocolTcp4 APIServicesOpenVPNServerUpdateJSONBodyProtocol = "tcp4"
	APIServicesOpenVPNServerUpdateJSONBodyProtocolTcp6 APIServicesOpenVPNServerUpdateJSONBodyProtocol = "tcp6"
	APIServicesOpenVPNServerUpdateJSONBodyProtocolUdp  APIServicesOpenVPNServerUpdateJSONBodyProtocol = "udp"
	APIServicesOpenVPNServerUpdateJSONBodyProtocolUdp4 APIServicesOpenVPNServerUpdateJSONBodyProtocol = "udp4"
	APIServicesOpenVPNServerUpdateJSONBodyProtocolUdp6 APIServicesOpenVPNServerUpdateJSONBodyProtocol = "udp6"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyServerbridgeInterface.
const (
	APIServicesOpenVPNServerUpdateJSONBodyServerbridgeInterfaceLan  APIServicesOpenVPNServerUpdateJSONBodyServerbridgeInterface = "lan"
	APIServicesOpenVPNServerUpdateJSONBodyServerbridgeInterfaceNone APIServicesOpenVPNServerUpdateJSONBodyServerbridgeInterface = "none"
	APIServicesOpenVPNServerUpdateJSONBodyServerbridgeInterfaceWan  APIServicesOpenVPNServerUpdateJSONBodyServerbridgeInterface = "wan"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf.
const (
	APIServicesOpenVPNServerUpdateJSONBodySndrcvbufDefault APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf = "default"
	APIServicesOpenVPNServerUpdateJSONBodySndrcvbufN128KiB APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf = "128KiB"
	APIServicesOpenVPNServerUpdateJSONBodySndrcvbufN1MiB   APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf = "1MiB"
	APIServicesOpenVPNServerUpdateJSONBodySndrcvbufN256KiB APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf = "256KiB"
	APIServicesOpenVPNServerUpdateJSONBodySndrcvbufN2MiB   APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf = "2MiB"
	APIServicesOpenVPNServerUpdateJSONBodySndrcvbufN512KiB APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf = "512KiB"
	APIServicesOpenVPNServerUpdateJSONBodySndrcvbufN64KiB  APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf = "64KiB"
	APIServicesOpenVPNServerUpdateJSONBodySndrcvbufNone    APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf = "none"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyTlsType.
const (
	APIServicesOpenVPNServerUpdateJSONBodyTlsTypeAuth  APIServicesOpenVPNServerUpdateJSONBodyTlsType = "auth"
	APIServicesOpenVPNServerUpdateJSONBodyTlsTypeCrypt APIServicesOpenVPNServerUpdateJSONBodyTlsType = "crypt"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyTlsauthKeydir.
const (
	BothDirections APIServicesOpenVPNServerUpdateJSONBodyTlsauthKeydir = "both-directions"
	Default        APIServicesOpenVPNServerUpdateJSONBodyTlsauthKeydir = "default"
	Direction0     APIServicesOpenVPNServerUpdateJSONBodyTlsauthKeydir = "direction-0"
	Direction1     APIServicesOpenVPNServerUpdateJSONBodyTlsauthKeydir = "direction-1"
)

// Defines values for APIServicesOpenVPNServerUpdateJSONBodyTopology.
const (
	APIServicesOpenVPNServerUpdateJSONBodyTopologyNet30  APIServicesOpenVPNServerUpdateJSONBodyTopology = "net30"
	APIServicesOpenVPNServerUpdateJSONBodyTopologySubnet APIServicesOpenVPNServerUpdateJSONBodyTopology = "subnet"
)

// Defines values for APIServicesSSHdUpdateJSONBodySshdkeyonly.
const (
	Both     APIServicesSSHdUpdateJSONBodySshdkeyonly = "both"
	Disabled APIServicesSSHdUpdateJSONBodySshdkeyonly = "disabled"
	Enabled  APIServicesSSHdUpdateJSONBodySshdkeyonly = "enabled"
)

// Defines values for APIServicesUnboundAccessListCreateJSONBodyAclaction.
const (
	APIServicesUnboundAccessListCreateJSONBodyAclactionAllow          APIServicesUnboundAccessListCreateJSONBodyAclaction = "allow"
	APIServicesUnboundAccessListCreateJSONBodyAclactionAllowSnoop     APIServicesUnboundAccessListCreateJSONBodyAclaction = "allow snoop"
	APIServicesUnboundAccessListCreateJSONBodyAclactionDeny           APIServicesUnboundAccessListCreateJSONBodyAclaction = "deny"
	APIServicesUnboundAccessListCreateJSONBodyAclactionDenyNonlocal   APIServicesUnboundAccessListCreateJSONBodyAclaction = "deny nonlocal"
	APIServicesUnboundAccessListCreateJSONBodyAclactionRefuse         APIServicesUnboundAccessListCreateJSONBodyAclaction = "refuse"
	APIServicesUnboundAccessListCreateJSONBodyAclactionRefuseNonlocal APIServicesUnboundAccessListCreateJSONBodyAclaction = "refuse nonlocal"
)

// Defines values for APIServicesUnboundAccessListUpdateJSONBodyAclaction.
const (
	APIServicesUnboundAccessListUpdateJSONBodyAclactionAllow          APIServicesUnboundAccessListUpdateJSONBodyAclaction = "allow"
	APIServicesUnboundAccessListUpdateJSONBodyAclactionAllowSnoop     APIServicesUnboundAccessListUpdateJSONBodyAclaction = "allow snoop"
	APIServicesUnboundAccessListUpdateJSONBodyAclactionDeny           APIServicesUnboundAccessListUpdateJSONBodyAclaction = "deny"
	APIServicesUnboundAccessListUpdateJSONBodyAclactionDenyNonlocal   APIServicesUnboundAccessListUpdateJSONBodyAclaction = "deny nonlocal"
	APIServicesUnboundAccessListUpdateJSONBodyAclactionRefuse         APIServicesUnboundAccessListUpdateJSONBodyAclaction = "refuse"
	APIServicesUnboundAccessListUpdateJSONBodyAclactionRefuseNonlocal APIServicesUnboundAccessListUpdateJSONBodyAclaction = "refuse nonlocal"
)

// Defines values for APIStatusLogSettingsUpdateJSONBodyFilterdescriptions.
const (
	APIStatusLogSettingsUpdateJSONBodyFilterdescriptionsN0 APIStatusLogSettingsUpdateJSONBodyFilterdescriptions = 0
	APIStatusLogSettingsUpdateJSONBodyFilterdescriptionsN1 APIStatusLogSettingsUpdateJSONBodyFilterdescriptions = 1
	APIStatusLogSettingsUpdateJSONBodyFilterdescriptionsN2 APIStatusLogSettingsUpdateJSONBodyFilterdescriptions = 2
)

// Defines values for APIStatusLogSettingsUpdateJSONBodyFormat.
const (
	Rfc3164 APIStatusLogSettingsUpdateJSONBodyFormat = "rfc3164"
	Rfc5424 APIStatusLogSettingsUpdateJSONBodyFormat = "rfc5424"
)

// Defines values for APIStatusLogSettingsUpdateJSONBodyIpprotocol.
const (
	Ipv4 APIStatusLogSettingsUpdateJSONBodyIpprotocol = "ipv4"
	Ipv6 APIStatusLogSettingsUpdateJSONBodyIpprotocol = "ipv6"
)

// Defines values for APIStatusLogSettingsUpdateJSONBodyLogcompressiontype.
const (
	APIStatusLogSettingsUpdateJSONBodyLogcompressiontypeBzip2 APIStatusLogSettingsUpdateJSONBodyLogcompressiontype = "bzip2"
	APIStatusLogSettingsUpdateJSONBodyLogcompressiontypeGzip  APIStatusLogSettingsUpdateJSONBodyLogcompressiontype = "gzip"
	APIStatusLogSettingsUpdateJSONBodyLogcompressiontypeNone  APIStatusLogSettingsUpdateJSONBodyLogcompressiontype = "none"
	APIStatusLogSettingsUpdateJSONBodyLogcompressiontypeXz    APIStatusLogSettingsUpdateJSONBodyLogcompressiontype = "xz"
	APIStatusLogSettingsUpdateJSONBodyLogcompressiontypeZstd  APIStatusLogSettingsUpdateJSONBodyLogcompressiontype = "zstd"
)

// Defines values for APISystemAPIUpdateJSONBodyAuthmode.
const (
	APISystemAPIUpdateJSONBodyAuthmodeJwt   APISystemAPIUpdateJSONBodyAuthmode = "jwt"
	APISystemAPIUpdateJSONBodyAuthmodeLocal APISystemAPIUpdateJSONBodyAuthmode = "local"
	APISystemAPIUpdateJSONBodyAuthmodeToken APISystemAPIUpdateJSONBodyAuthmode = "token"
)

// Defines values for APISystemAPIUpdateJSONBodyKeybytes.
const (
	N16 APISystemAPIUpdateJSONBodyKeybytes = 16
	N32 APISystemAPIUpdateJSONBodyKeybytes = 32
	N64 APISystemAPIUpdateJSONBodyKeybytes = 64
)

// Defines values for APISystemAPIUpdateJSONBodyKeyhash.
const (
	APISystemAPIUpdateJSONBodyKeyhashMd5    APISystemAPIUpdateJSONBodyKeyhash = "md5"
	APISystemAPIUpdateJSONBodyKeyhashSha256 APISystemAPIUpdateJSONBodyKeyhash = "sha256"
	APISystemAPIUpdateJSONBodyKeyhashSha384 APISystemAPIUpdateJSONBodyKeyhash = "sha384"
	APISystemAPIUpdateJSONBodyKeyhashSha512 APISystemAPIUpdateJSONBodyKeyhash = "sha512"
)

// Defines values for APISystemCACreateJSONBodyDigestAlg.
const (
	APISystemCACreateJSONBodyDigestAlgSha1   APISystemCACreateJSONBodyDigestAlg = "sha1"
	APISystemCACreateJSONBodyDigestAlgSha224 APISystemCACreateJSONBodyDigestAlg = "sha224"
	APISystemCACreateJSONBodyDigestAlgSha256 APISystemCACreateJSONBodyDigestAlg = "sha256"
	APISystemCACreateJSONBodyDigestAlgSha384 APISystemCACreateJSONBodyDigestAlg = "sha384"
	APISystemCACreateJSONBodyDigestAlgSha512 APISystemCACreateJSONBodyDigestAlg = "sha512"
)

// Defines values for APISystemCACreateJSONBodyKeylen.
const (
	APISystemCACreateJSONBodyKeylenN1024  APISystemCACreateJSONBodyKeylen = 1024
	APISystemCACreateJSONBodyKeylenN15360 APISystemCACreateJSONBodyKeylen = 15360
	APISystemCACreateJSONBodyKeylenN16384 APISystemCACreateJSONBodyKeylen = 16384
	APISystemCACreateJSONBodyKeylenN2048  APISystemCACreateJSONBodyKeylen = 2048
	APISystemCACreateJSONBodyKeylenN3072  APISystemCACreateJSONBodyKeylen = 3072
	APISystemCACreateJSONBodyKeylenN4096  APISystemCACreateJSONBodyKeylen = 4096
	APISystemCACreateJSONBodyKeylenN6144  APISystemCACreateJSONBodyKeylen = 6144
	APISystemCACreateJSONBodyKeylenN7680  APISystemCACreateJSONBodyKeylen = 7680
	APISystemCACreateJSONBodyKeylenN8192  APISystemCACreateJSONBodyKeylen = 8192
)

// Defines values for APISystemCACreateJSONBodyKeytype.
const (
	APISystemCACreateJSONBodyKeytypeECDSA APISystemCACreateJSONBodyKeytype = "ECDSA"
	APISystemCACreateJSONBodyKeytypeRSA   APISystemCACreateJSONBodyKeytype = "RSA"
)

// Defines values for APISystemCACreateJSONBodyMethod.
const (
	APISystemCACreateJSONBodyMethodExisting     APISystemCACreateJSONBodyMethod = "existing"
	APISystemCACreateJSONBodyMethodImport       APISystemCACreateJSONBodyMethod = "import"
	APISystemCACreateJSONBodyMethodIntermediate APISystemCACreateJSONBodyMethod = "intermediate"
	APISystemCACreateJSONBodyMethodInternal     APISystemCACreateJSONBodyMethod = "internal"
)

// Defines values for APISystemCertificateCreateJSONBodyDigestAlg.
const (
	Sha1   APISystemCertificateCreateJSONBodyDigestAlg = "sha1"
	Sha224 APISystemCertificateCreateJSONBodyDigestAlg = "sha224"
	Sha256 APISystemCertificateCreateJSONBodyDigestAlg = "sha256"
	Sha384 APISystemCertificateCreateJSONBodyDigestAlg = "sha384"
	Sha512 APISystemCertificateCreateJSONBodyDigestAlg = "sha512"
)

// Defines values for APISystemCertificateCreateJSONBodyKeylen.
const (
	APISystemCertificateCreateJSONBodyKeylenN1024  APISystemCertificateCreateJSONBodyKeylen = 1024
	APISystemCertificateCreateJSONBodyKeylenN15360 APISystemCertificateCreateJSONBodyKeylen = 15360
	APISystemCertificateCreateJSONBodyKeylenN16384 APISystemCertificateCreateJSONBodyKeylen = 16384
	APISystemCertificateCreateJSONBodyKeylenN2048  APISystemCertificateCreateJSONBodyKeylen = 2048
	APISystemCertificateCreateJSONBodyKeylenN3072  APISystemCertificateCreateJSONBodyKeylen = 3072
	APISystemCertificateCreateJSONBodyKeylenN4096  APISystemCertificateCreateJSONBodyKeylen = 4096
	APISystemCertificateCreateJSONBodyKeylenN6144  APISystemCertificateCreateJSONBodyKeylen = 6144
	APISystemCertificateCreateJSONBodyKeylenN7680  APISystemCertificateCreateJSONBodyKeylen = 7680
	APISystemCertificateCreateJSONBodyKeylenN8192  APISystemCertificateCreateJSONBodyKeylen = 8192
)

// Defines values for APISystemCertificateCreateJSONBodyKeytype.
const (
	APISystemCertificateCreateJSONBodyKeytypeECDSA APISystemCertificateCreateJSONBodyKeytype = "ECDSA"
	APISystemCertificateCreateJSONBodyKeytypeRSA   APISystemCertificateCreateJSONBodyKeytype = "RSA"
)

// Defines values for APISystemCertificateCreateJSONBodyMethod.
const (
	APISystemCertificateCreateJSONBodyMethodExisting APISystemCertificateCreateJSONBodyMethod = "existing"
	APISystemCertificateCreateJSONBodyMethodImport   APISystemCertificateCreateJSONBodyMethod = "import"
	APISystemCertificateCreateJSONBodyMethodInternal APISystemCertificateCreateJSONBodyMethod = "internal"
)

// Defines values for APISystemCertificateCreateJSONBodyType.
const (
	Server APISystemCertificateCreateJSONBodyType = "server"
	User   APISystemCertificateCreateJSONBodyType = "user"
)

// Defines values for APISystemCRLCreateJSONBodyMethod.
const (
	Existing APISystemCRLCreateJSONBodyMethod = "existing"
	Internal APISystemCRLCreateJSONBodyMethod = "internal"
)

// Defines values for APISystemNotificationsEmailUpdateJSONBodyAuthenticationMechanism.
const (
	LOGIN APISystemNotificationsEmailUpdateJSONBodyAuthenticationMechanism = "LOGIN"
	PLAIN APISystemNotificationsEmailUpdateJSONBodyAuthenticationMechanism = "PLAIN"
)

// Defines values for APIUserAuthServerLDAPCreateJSONBodyLdapProtver.
const (
	N2 APIUserAuthServerLDAPCreateJSONBodyLdapProtver = 2
	N3 APIUserAuthServerLDAPCreateJSONBodyLdapProtver = 3
)

// Defines values for APIUserAuthServerLDAPCreateJSONBodyLdapScope.
const (
	One     APIUserAuthServerLDAPCreateJSONBodyLdapScope = "one"
	Subtree APIUserAuthServerLDAPCreateJSONBodyLdapScope = "subtree"
)

// Defines values for APIUserAuthServerLDAPCreateJSONBodyLdapUrltype.
const (
	Encrypted APIUserAuthServerLDAPCreateJSONBodyLdapUrltype = "encrypted"
	Standard  APIUserAuthServerLDAPCreateJSONBodyLdapUrltype = "standard"
	Starttls  APIUserAuthServerLDAPCreateJSONBodyLdapUrltype = "starttls"
)

// Defines values for APIUserAuthServerRADIUSCreateJSONBodyRadiusProtocol.
const (
	CHAPMD5  APIUserAuthServerRADIUSCreateJSONBodyRadiusProtocol = "CHAP_MD5"
	MSCHAPv1 APIUserAuthServerRADIUSCreateJSONBodyRadiusProtocol = "MSCHAPv1"
	MSCHAPv2 APIUserAuthServerRADIUSCreateJSONBodyRadiusProtocol = "MSCHAPv2"
	PAP      APIUserAuthServerRADIUSCreateJSONBodyRadiusProtocol = "PAP"
)

// Defines values for APIUserGroupCreateJSONBodyScope.
const (
	APIUserGroupCreateJSONBodyScopeLocal  APIUserGroupCreateJSONBodyScope = "local"
	APIUserGroupCreateJSONBodyScopeRemote APIUserGroupCreateJSONBodyScope = "remote"
)

// Defines values for APIUserGroupUpdateJSONBodyScope.
const (
	Local  APIUserGroupUpdateJSONBodyScope = "local"
	Remote APIUserGroupUpdateJSONBodyScope = "remote"
)

// Response defines model for Response.
type Response struct {
	// Code HTTP status code.
	Code *int `json:"code,omitempty"`

	// Data API response data.
	Data *Response_Data `json:"data,omitempty"`

	// Message API response message.
	Message *string `json:"message,omitempty"`

	// Return API response/error code.
	Return *int `json:"return,omitempty"`

	// Status HTTP status message.
	Status *string `json:"status,omitempty"`
}

// ResponseData0 defines model for .
type ResponseData0 = []interface{}

// ResponseData1 defines model for .
type ResponseData1 = map[string]interface{}

// Response_Data API response data.
type Response_Data struct {
	union json.RawMessage
}

// AuthenticationFailed defines model for AuthenticationFailed.
type AuthenticationFailed = Response

// Success defines model for Success.
type Success = Response

// APIDiagnosticsCommandPromptCreateJSONBody defines parameters for APIDiagnosticsCommandPromptCreate.
type APIDiagnosticsCommandPromptCreateJSONBody struct {
	// ShellCmd Shell command to execute on pfSense. Interactive commands are not supported and may result in the API being  unable to respond to the request.
	ShellCmd string `json:"shell_cmd"`
}

// APIFirewallAliasDeleteParams defines parameters for APIFirewallAliasDelete.
type APIFirewallAliasDeleteParams struct {
	// Id Name of alias to delete. This alias cannot be in use elsewhere in configuration.
	Id string `form:"id" json:"id"`

	// Apply Specify whether or not you would like this alias to be applied immediately, or simply written to the configuration to be applied later. If you are creating modifying multiple aliases at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	// _Note: currently this defaults to always reload the firewall filter after in order to remain backwards compatible with previous releases, this will be changed to not reload the filter by default in a future release._
	Apply *bool `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIFirewallAliasCreateJSONBody defines parameters for APIFirewallAliasCreate.
type APIFirewallAliasCreateJSONBody struct {
	// Address Host, network or port values to add to the alias.
	Address []string `json:"address"`

	// Apply Specify whether or not you would like this alias to be applied immediately, or simply written to the configuration to be applied later. If you are creating multiple aliases at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	// _Note: currently this defaults to always reload the firewall filter after in order to remain backwards compatible with previous releases, this will be changed to not reload the filter by default in a future release._
	Apply *bool `json:"apply,omitempty"`

	// Descr Description of alias.
	Descr *string `json:"descr,omitempty"`

	// Detail Descriptions for the `address` values. Descriptions must match the order the that they are specified in the `address` array. If you pass in less `detail` values than `address` values, a default auto-created detail will be applied to the remaining values.
	Detail *[]string `json:"detail,omitempty"`

	// Name Name of the new alias. _Only alpha-numeric and underscore characters are allowed, other characters will be replaced._
	Name string `json:"name"`

	// Type Type of alias.
	Type APIFirewallAliasCreateJSONBodyType `json:"type"`
}

// APIFirewallAliasCreateJSONBodyType defines parameters for APIFirewallAliasCreate.
type APIFirewallAliasCreateJSONBodyType string

// APIFirewallAliasUpdateJSONBody defines parameters for APIFirewallAliasUpdate.
type APIFirewallAliasUpdateJSONBody struct {
	// Address Host, network or port values to add to the alias. Existing values will be overwritten.
	Address *[]string `json:"address,omitempty"`

	// Apply Specify whether or not you would like this alias to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple aliases at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	// _Note: currently this defaults to always reload the firewall filter after in order to remain backwards compatible with previous releases, this will be changed to not reload the filter by default in a future release._
	Apply *bool `json:"apply,omitempty"`

	// Descr Description of alias.
	Descr *string `json:"descr,omitempty"`

	// Detail Descriptions for the `address` values. Descriptions must match the order the that they are specified in the `address` array. If you pass in less `detail` values than `address` values, a default auto-created detail will be applied to the remaining values. Existing values will be overwritten.
	Detail *[]string `json:"detail,omitempty"`

	// Id Name of the existing alias to update.
	Id string `json:"id"`

	// Name New name of the alias. _Only alpha-numeric and underscore characters are allowed, other characters will be replaced._
	Name *string `json:"name,omitempty"`

	// Type Type of alias.
	Type *APIFirewallAliasUpdateJSONBodyType `json:"type,omitempty"`
}

// APIFirewallAliasUpdateJSONBodyType defines parameters for APIFirewallAliasUpdate.
type APIFirewallAliasUpdateJSONBodyType string

// APIFirewallAliasAdvancedUpdateJSONBody defines parameters for APIFirewallAliasAdvancedUpdate.
type APIFirewallAliasAdvancedUpdateJSONBody struct {
	// Aliasesresolveinterval Interval (in seconds) at which hostnames in firewall aliases are updated.
	Aliasesresolveinterval *int `json:"aliasesresolveinterval,omitempty"`

	// Checkaliasesurlcert Enable or disable certificate verification when updating aliases via URL.
	Checkaliasesurlcert *bool `json:"checkaliasesurlcert,omitempty"`
}

// APIFirewallAliasEntryDeleteParams defines parameters for APIFirewallAliasEntryDelete.
type APIFirewallAliasEntryDeleteParams struct {
	// Name Name of alias to delete address values from.
	Name string `form:"name" json:"name"`

	// Address Host, network or port value to remove from the alias.
	Address string `form:"address" json:"address"`

	// Apply Specify whether or not you would like this alias change to be applied immediately, or simply written to the configuration to be applied later. When modifying multiple aliases it is best to set this to  false and apply the changes afterwards using the `/api/v1/firewall/apply`  endpoint.
	// _Note: currently this defaults to always reload the firewall filter after in order to remain backwards compatible with previous releases, this will be changed to not reload the filter by default in a future release._
	Apply *bool `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIFirewallAliasEntryCreateJSONBody defines parameters for APIFirewallAliasEntryCreate.
type APIFirewallAliasEntryCreateJSONBody struct {
	// Address Host, network or port values to add to the alias.
	Address *[]string `json:"address,omitempty"`

	// Apply Specify whether or not you would like this alias change to be applied immediately, or simply written to the configuration to be applied later. When modifying multiple aliases it is best to set this to  false and apply the changes afterwards using the `/api/v1/firewall/apply`  endpoint.
	// _Note: currently this defaults to always reload the firewall filter after in order to remain backwards compatible with previous releases, this will be changed to not reload the filter by default in a future release._
	Apply *bool `json:"apply,omitempty"`

	// Detail Descriptions for the `address` values. Descriptions must match the order the that they are specified in the `address` array. If you pass in less `detail` values than `address` values, a default auto-created detail will be applied to the remaining values.
	Detail *[]string `json:"detail,omitempty"`

	// Name Name of alias to add new address values to.
	Name string `json:"name"`
}

// APIFirewallApplyCreateJSONBody defines parameters for APIFirewallApplyCreate.
type APIFirewallApplyCreateJSONBody struct {
	// Async Apply firewall changes asynchronously. If set to `false`, the API will not respond until the firewall changes have been fully applied, this may cause excessive delays for large rulesets and in extreme cases cause the API request to timeout.
	Async *bool `json:"async,omitempty"`
}

// APIFirewallNATOneToOneDeleteParams defines parameters for APIFirewallNATOneToOneDelete.
type APIFirewallNATOneToOneDeleteParams struct {
	// Id ID of the mapping to delete. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`

	// Apply Specify whether or not you would like this deletion to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple mappings at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIFirewallNATOneToOneCreateJSONBody defines parameters for APIFirewallNATOneToOneCreate.
type APIFirewallNATOneToOneCreateJSONBody struct {
	// Apply Specify whether or not you would like this mapping to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple mappings at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description for the mapping.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this mapping.
	Disabled *bool `json:"disabled,omitempty"`

	// Dst Destination address of the mapping. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the destination address, you may prefix the value with `!`.
	Dst string `json:"dst"`

	// External External IPv4 or IPv6 address to map traffic to.
	External string `json:"external"`

	// Interface Interface the mapping will apply to. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `json:"interface"`

	// Natreflection NAT reflection mode to use for this rule. Leave unspecified to use system default.
	Natreflection *APIFirewallNATOneToOneCreateJSONBodyNatreflection `json:"natreflection,omitempty"`

	// Nobinat Exclude the address from a later, more general rule.
	Nobinat *bool `json:"nobinat,omitempty"`

	// Src Source address of the mapping. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the source address, you may prefix the value with `!`.
	Src string `json:"src"`

	// Top Place this firewall rule at the top of the access control list.
	Top *bool `json:"top,omitempty"`
}

// APIFirewallNATOneToOneCreateJSONBodyNatreflection defines parameters for APIFirewallNATOneToOneCreate.
type APIFirewallNATOneToOneCreateJSONBodyNatreflection string

// APIFirewallNATOneToOneUpdateJSONBody defines parameters for APIFirewallNATOneToOneUpdate.
type APIFirewallNATOneToOneUpdateJSONBody struct {
	// Apply Specify whether or not you would like this mapping to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple mappings at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description for the mapping.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this mapping.
	Disabled *bool `json:"disabled,omitempty"`

	// Dst Destination address of the mapping. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the destination address, you may prefix the value with `!`.
	Dst *string `json:"dst,omitempty"`

	// External External IPv4 or IPv6 address to map traffic to.
	External *string `json:"external,omitempty"`

	// Id ID of the mapping to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// Interface Interface the mapping will apply to. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface *string `json:"interface,omitempty"`

	// Natreflection NAT reflection mode to use for this rule. Leave unspecified to use system default.
	Natreflection *APIFirewallNATOneToOneUpdateJSONBodyNatreflection `json:"natreflection,omitempty"`

	// Nobinat Exclude the address from a later, more general rule.
	Nobinat *bool `json:"nobinat,omitempty"`

	// Src Source address of the mapping. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the source address, you may prefix the value with `!`.
	Src *string `json:"src,omitempty"`

	// Top Place this firewall rule at the top of the access control list.
	Top *bool `json:"top,omitempty"`
}

// APIFirewallNATOneToOneUpdateJSONBodyNatreflection defines parameters for APIFirewallNATOneToOneUpdate.
type APIFirewallNATOneToOneUpdateJSONBodyNatreflection string

// APIFirewallNATOutboundUpdateJSONBody defines parameters for APIFirewallNATOutboundUpdate.
type APIFirewallNATOutboundUpdateJSONBody struct {
	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple mappings at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	// _Note: currently this defaults to always reload the firewall filter after in order to remain backwards compatible with previous releases, this will be changed to not reload the filter by default in a future release._
	Apply *bool `json:"apply,omitempty"`

	// Mode Set outbound NAT mode.
	Mode *APIFirewallNATOutboundUpdateJSONBodyMode `json:"mode,omitempty"`
}

// APIFirewallNATOutboundUpdateJSONBodyMode defines parameters for APIFirewallNATOutboundUpdate.
type APIFirewallNATOutboundUpdateJSONBodyMode string

// APIFirewallNATOutboundMappingDeleteParams defines parameters for APIFirewallNATOutboundMappingDelete.
type APIFirewallNATOutboundMappingDeleteParams struct {
	// Id ID of the outbound NAT mapping to delete. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`

	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple mappings at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIFirewallNATOutboundMappingCreateJSONBody defines parameters for APIFirewallNATOutboundMappingCreate.
type APIFirewallNATOutboundMappingCreateJSONBody struct {
	// Apply Specify whether or not you would like this mapping to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple mappings at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description of this mapping.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this mapping.
	Disabled *bool `json:"disabled,omitempty"`

	// Dst Destination address of the mapping. This may be a single IP, network CIDR, alias name or `any`. To negate the context of the  address, you may prefix the address with `!`
	Dst string `json:"dst"`

	// Dstport TCP and/or UDP destination port or port range to apply to this mapping. You may specify `any` to match any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Dstport *string `json:"dstport,omitempty"`

	// Interface Set which interface the mapping will apply to. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the physical interface id (e.g. igb0).
	Interface string `json:"interface"`

	// Natport External TCP and/or UDP source port or range used for remapping the original source port on connections  matching the rule.
	Natport *string `json:"natport,omitempty"`

	// Nonat Do not NAT traffic matching this mapping.
	Nonat *bool `json:"nonat,omitempty"`

	// Poolopts Outbound NAT pool option for load balancing. This is only applicable if the `target` is a subnet that  contains more than 1 IP address.
	Poolopts *APIFirewallNATOutboundMappingCreateJSONBodyPoolopts `json:"poolopts,omitempty"`

	// Protocol Transfer protocol the mapping will apply to.
	Protocol APIFirewallNATOutboundMappingCreateJSONBodyProtocol `json:"protocol"`

	// SourceHashKey Custom key hash to use when utilizing the `source-hash` NAT pool option. Value must start with `0x` following a 32 digit hex value. If this field is not specified, a random key hash will be generated. This parameter is only available when `poolopts` is set to `source-hash`.
	SourceHashKey *string `json:"source_hash_key,omitempty"`

	// Src Set the source address of the firewall rule. This must be an IP, CIDR, alias or `any`.
	Src string `json:"src"`

	// Srcport TCP and/or UDP source port, port range or port alias to apply to this mapping. You may specify `any` to match any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Srcport *string `json:"srcport,omitempty"`

	// Staticnatport Enable use of a static NAT port.
	Staticnatport *bool `json:"staticnatport,omitempty"`

	// Target External IP to map this traffic to. This may be an IP address, IP subnet, alias, or empty string to use the Interface address.
	Target string `json:"target"`

	// Top Place this mapping at the top of the access control list.
	Top *bool `json:"top,omitempty"`
}

// APIFirewallNATOutboundMappingCreateJSONBodyPoolopts defines parameters for APIFirewallNATOutboundMappingCreate.
type APIFirewallNATOutboundMappingCreateJSONBodyPoolopts string

// APIFirewallNATOutboundMappingCreateJSONBodyProtocol defines parameters for APIFirewallNATOutboundMappingCreate.
type APIFirewallNATOutboundMappingCreateJSONBodyProtocol string

// APIFirewallNATOutboundMappingUpdateJSONBody defines parameters for APIFirewallNATOutboundMappingUpdate.
type APIFirewallNATOutboundMappingUpdateJSONBody struct {
	// Apply Specify whether or not you would like this mapping to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple mappings at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description of this mapping.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this mapping.
	Disabled *bool `json:"disabled,omitempty"`

	// Dst Destination address of the mapping. This may be a single IP, network CIDR, alias name or `any`. To negate the context of the  address, you may prefix the address with `!`
	Dst *string `json:"dst,omitempty"`

	// Dstport TCP and/or UDP destination port or port range to apply to this mapping. You may specify `any` to match any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Dstport *string `json:"dstport,omitempty"`

	// Id ID of the outbound NAT mapping to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// Interface Set which interface the mapping will apply to. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the physical interface id (e.g. igb0).
	Interface *string `json:"interface,omitempty"`

	// Natport External TCP and/or UDP source port or range used for remapping the original source port on connections  matching the rule.
	Natport *string `json:"natport,omitempty"`

	// Nonat Do not NAT traffic matching this mapping.
	Nonat *bool `json:"nonat,omitempty"`

	// Poolopts Outbound NAT pool option for load balancing. This is only applicable if the `target` is a subnet that  contains more than 1 IP address.
	Poolopts *APIFirewallNATOutboundMappingUpdateJSONBodyPoolopts `json:"poolopts,omitempty"`

	// Protocol Transfer protocol the mapping will apply to.
	Protocol *APIFirewallNATOutboundMappingUpdateJSONBodyProtocol `json:"protocol,omitempty"`

	// SourceHashKey Custom key hash to use when utilizing the `source-hash` NAT pool option. Value must start with `0x` following a 32 digit hex value. If this field is not specified, a random key hash will be generated. This parameter is only available when `poolopts` is set to `source-hash`.
	SourceHashKey *string `json:"source_hash_key,omitempty"`

	// Src Set the source address of the firewall rule. This must be an IP, CIDR, alias or `any`.
	Src *string `json:"src,omitempty"`

	// Srcport TCP and/or UDP source port, port range or port alias to apply to this mapping. You may specify `any` to match any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Srcport *string `json:"srcport,omitempty"`

	// Staticnatport Enable use of a static NAT port.
	Staticnatport *bool `json:"staticnatport,omitempty"`

	// Target External IP to map this traffic to. This may be an IP address, IP subnet, alias, or empty string to use the Interface address.
	Target *string `json:"target,omitempty"`

	// Top Place this mapping at the top of the access control list.
	Top *bool `json:"top,omitempty"`
}

// APIFirewallNATOutboundMappingUpdateJSONBodyPoolopts defines parameters for APIFirewallNATOutboundMappingUpdate.
type APIFirewallNATOutboundMappingUpdateJSONBodyPoolopts string

// APIFirewallNATOutboundMappingUpdateJSONBodyProtocol defines parameters for APIFirewallNATOutboundMappingUpdate.
type APIFirewallNATOutboundMappingUpdateJSONBodyProtocol string

// APIFirewallNATOutboundPortForwardDeleteParams defines parameters for APIFirewallNATOutboundPortForwardDelete.
type APIFirewallNATOutboundPortForwardDeleteParams struct {
	// Id ID of the port forward rule to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`

	// Apply Specify whether or not you would like this rule to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple rules at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIFirewallNATOutboundPortForwardCreateJSONBody defines parameters for APIFirewallNATOutboundPortForwardCreate.
type APIFirewallNATOutboundPortForwardCreateJSONBody struct {
	// Apply Specify whether or not you would like this rule to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple rules at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description for the rule.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this rule.
	Disabled *bool `json:"disabled,omitempty"`

	// Dst Destination address of the port forward rule. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the destination address, you may prefix the value with `!`.
	Dst string `json:"dst"`

	// Dstport TCP and/or UDP destination port, port range or port alias to apply to this rule. You may specify `any` to match any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Dstport *string `json:"dstport,omitempty"`

	// Interface Interface the rule will apply to. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `json:"interface"`

	// LocalPort TCP and/or UDP port, port range, or port alias to forward traffic to on the `target`. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	LocalPort *string `json:"local-port,omitempty"`

	// Natreflection NAT reflection mode to use for this rule. Leave unspecified to use system default.
	Natreflection *APIFirewallNATOutboundPortForwardCreateJSONBodyNatreflection `json:"natreflection,omitempty"`

	// Nordr Disable redirection for traffic matching this rule.
	Nordr *bool `json:"nordr,omitempty"`

	// Nosync Prevent this rule from automatically syncing to other CARP members.
	Nosync *bool `json:"nosync,omitempty"`

	// Protocol Transfer protocol this rule will apply to.
	Protocol APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol `json:"protocol"`

	// Src Source address of the port forward rule. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the source address, you may prefix the value with `!`.
	Src string `json:"src"`

	// Srcport TCP and/or UDP source port, port range or port alias to apply to this rule. You may specify `any` to match any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Srcport *string `json:"srcport,omitempty"`

	// Target IP address or alias to forward traffic to.
	Target string `json:"target"`

	// Top Place this firewall rule at the top of the access control list.
	Top *bool `json:"top,omitempty"`
}

// APIFirewallNATOutboundPortForwardCreateJSONBodyNatreflection defines parameters for APIFirewallNATOutboundPortForwardCreate.
type APIFirewallNATOutboundPortForwardCreateJSONBodyNatreflection string

// APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol defines parameters for APIFirewallNATOutboundPortForwardCreate.
type APIFirewallNATOutboundPortForwardCreateJSONBodyProtocol string

// APIFirewallNATOutboundPortForwardUpdateJSONBody defines parameters for APIFirewallNATOutboundPortForwardUpdate.
type APIFirewallNATOutboundPortForwardUpdateJSONBody struct {
	// Apply Specify whether or not you would like this rule to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple rules at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description for the rule.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this rule.
	Disabled *bool `json:"disabled,omitempty"`

	// Dst Destination address of the port forward rule. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the destination address, you may prefix the value with `!`.
	Dst *string `json:"dst,omitempty"`

	// Dstport TCP and/or UDP destination port, port range or port alias to apply to this rule. You may specify `any` to match any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Dstport *string `json:"dstport,omitempty"`

	// Id ID of the port forward rule to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// Interface Interface the rule will apply to. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface *string `json:"interface,omitempty"`

	// LocalPort TCP and/or UDP port, port range, or port alias to forward traffic to on the `target`. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	LocalPort *string `json:"local-port,omitempty"`

	// Natreflection NAT reflection mode to use for this rule.
	Natreflection *APIFirewallNATOutboundPortForwardUpdateJSONBodyNatreflection `json:"natreflection,omitempty"`

	// Nordr Disable redirection for traffic matching this rule.
	Nordr *bool `json:"nordr,omitempty"`

	// Nosync Prevent this rule from automatically syncing to other CARP members.
	Nosync *bool `json:"nosync,omitempty"`

	// Protocol Transfer protocol this rule will apply to.
	Protocol *APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol `json:"protocol,omitempty"`

	// Src Source address of the port forward rule. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the source address, you may prefix the value with `!`.
	Src *string `json:"src,omitempty"`

	// Srcport TCP and/or UDP source port, port range or port alias to apply to this rule. You may specify `any` to match any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Srcport *string `json:"srcport,omitempty"`

	// Target IP address or alias to forward traffic to.
	Target *string `json:"target,omitempty"`

	// Top Place this firewall rule at the top of the access control list.
	Top *bool `json:"top,omitempty"`
}

// APIFirewallNATOutboundPortForwardUpdateJSONBodyNatreflection defines parameters for APIFirewallNATOutboundPortForwardUpdate.
type APIFirewallNATOutboundPortForwardUpdateJSONBodyNatreflection string

// APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol defines parameters for APIFirewallNATOutboundPortForwardUpdate.
type APIFirewallNATOutboundPortForwardUpdateJSONBodyProtocol string

// APIFirewallRuleDeleteParams defines parameters for APIFirewallRuleDelete.
type APIFirewallRuleDeleteParams struct {
	// Tracker Tracker ID of the rule to delete.
	Tracker int `form:"tracker" json:"tracker"`

	// Apply Specify whether or not you would like this rule deletion to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple rules at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIFirewallRuleCreateJSONBody defines parameters for APIFirewallRuleCreate.
type APIFirewallRuleCreateJSONBody struct {
	// Ackqueue Acknowledge traffic shaper queue to apply to this rule. This must be an existing traffic shaper queue and cannot match the `defaultqueue` value.
	Ackqueue *string `json:"ackqueue,omitempty"`

	// Apply Specify whether or not you would like this rule to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple rules at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Defaultqueue Default traffic shaper queue to apply to this rule. This must be an existing traffic shaper queue name. This field is required when an `ackqueue` value is provided.
	Defaultqueue *string `json:"defaultqueue,omitempty"`

	// Descr Description for the rule.
	Descr *string `json:"descr,omitempty"`

	// Direction Direction of floating firewall rule. This parameter is only avilable when `floating` is set to `true`.
	Direction *APIFirewallRuleCreateJSONBodyDirection `json:"direction,omitempty"`

	// Disabled Disable the rule.
	Disabled *bool `json:"disabled,omitempty"`

	// Dnpipe Traffic shaper limiter (in) queue for this rule. This must be an existing traffic shaper limiter or queue. This field is required if a `pdnpipe` value is provided.
	Dnpipe *string `json:"dnpipe,omitempty"`

	// Dst Destination address of the firewall rule. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the destination address, you may prefix the value with `!`.
	Dst string `json:"dst"`

	// Dstport TCP and/or UDP destination port, port range or port alias to apply to this rule. You may specify `any` to match any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Dstport *string `json:"dstport,omitempty"`

	// Floating Set this rule as a floating firewall rule.
	Floating *bool `json:"floating,omitempty"`

	// Gateway Name of an existing gateway traffic will route over upon match. Do not specify this parameter to assume the default gateway. The gateway specified must be of the same IP type set in `ipprotocol`.
	Gateway *string `json:"gateway,omitempty"`

	// Icmptype ICMP subtypes of the firewall rule. This parameter is only available when `protocol` is set to `icmp`. If this parameter is not specified, all ICMP subtypes will be assumed.
	Icmptype *[]APIFirewallRuleCreateJSONBodyIcmptype `json:"icmptype,omitempty"`

	// Interface Interface this rule will apply to. You may specify either the interface's descriptive name, the pfSense  interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0). If `floating` is enabled, multiple interfaces may be specified.
	Interface []string `json:"interface"`

	// Ipprotocol IP protocol(s) this rule will apply to.
	Ipprotocol APIFirewallRuleCreateJSONBodyIpprotocol `json:"ipprotocol"`

	// Log Enable logging of traffic matching this rule.
	Log *bool `json:"log,omitempty"`

	// Pdnpipe Traffic shaper limiter (out) queue for this rule. This must be an existing traffic shaper limiter or queue. This value cannot match the `dnpipe` value and must be a child queue if `dnpipe` is a child queue, or a parent limiter if `dnpipe` is a parent limiter.
	Pdnpipe *string `json:"pdnpipe,omitempty"`

	// Protocol Transfer protocol this rule will apply to.
	Protocol APIFirewallRuleCreateJSONBodyProtocol `json:"protocol"`

	// Quick Apply action immediately upon match. This field is only available for `floating` rules.
	Quick *bool `json:"quick,omitempty"`

	// Sched Firewall schedule to apply to this rule. This must be an existing firewall schedule name.
	Sched *string `json:"sched,omitempty"`

	// Src Source address of the firewall rule. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the source address, you may prefix the value with `!`.
	Src string `json:"src"`

	// Srcport TCP and/or UDP source port, port range or port alias to apply to this rule. You may specify `any` to match any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Srcport *string `json:"srcport,omitempty"`

	// Statetype State type to use when this rule is matched.
	Statetype *APIFirewallRuleCreateJSONBodyStatetype `json:"statetype,omitempty"`

	// Tcpflags1 TCP flags (set). Values specified must also be specified in `tcpflags2`.
	Tcpflags1 *[]APIFirewallRuleCreateJSONBodyTcpflags1 `json:"tcpflags1,omitempty"`

	// Tcpflags2 TCP flags (out of).
	Tcpflags2 *[]APIFirewallRuleCreateJSONBodyTcpflags2 `json:"tcpflags2,omitempty"`

	// TcpflagsAny Allow all TCP flags. This field is only relevant for TCP rules and will remove any existing values in `tcpflags1` and `tcpflags2`.
	TcpflagsAny *bool `json:"tcpflags_any,omitempty"`

	// Top Place this firewall rule at the top of the access control list.
	Top *bool `json:"top,omitempty"`

	// Type Firewall rule type.
	Type APIFirewallRuleCreateJSONBodyType `json:"type"`
}

// APIFirewallRuleCreateJSONBodyDirection defines parameters for APIFirewallRuleCreate.
type APIFirewallRuleCreateJSONBodyDirection string

// APIFirewallRuleCreateJSONBodyIcmptype defines parameters for APIFirewallRuleCreate.
type APIFirewallRuleCreateJSONBodyIcmptype string

// APIFirewallRuleCreateJSONBodyIpprotocol defines parameters for APIFirewallRuleCreate.
type APIFirewallRuleCreateJSONBodyIpprotocol string

// APIFirewallRuleCreateJSONBodyProtocol defines parameters for APIFirewallRuleCreate.
type APIFirewallRuleCreateJSONBodyProtocol string

// APIFirewallRuleCreateJSONBodyStatetype defines parameters for APIFirewallRuleCreate.
type APIFirewallRuleCreateJSONBodyStatetype string

// APIFirewallRuleCreateJSONBodyTcpflags1 defines parameters for APIFirewallRuleCreate.
type APIFirewallRuleCreateJSONBodyTcpflags1 string

// APIFirewallRuleCreateJSONBodyTcpflags2 defines parameters for APIFirewallRuleCreate.
type APIFirewallRuleCreateJSONBodyTcpflags2 string

// APIFirewallRuleCreateJSONBodyType defines parameters for APIFirewallRuleCreate.
type APIFirewallRuleCreateJSONBodyType string

// APIFirewallRuleUpdateJSONBody defines parameters for APIFirewallRuleUpdate.
type APIFirewallRuleUpdateJSONBody struct {
	// Ackqueue Acknowledge traffic shaper queue to apply to this rule. This must be an existing traffic shaper queue and cannot match the `defaultqueue` value.
	Ackqueue *string `json:"ackqueue,omitempty"`

	// Apply Specify whether or not you would like this rule to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple rules at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Defaultqueue Default traffic shaper queue to apply to this rule. This must be an existing traffic shaper queue name. This field is required when an `ackqueue` value is provided.
	Defaultqueue *string `json:"defaultqueue,omitempty"`

	// Descr Description for the rule.
	Descr *string `json:"descr,omitempty"`

	// Direction Direction of floating firewall rule. This parameter is only avilable when `floating` is set to `true`.
	Direction *APIFirewallRuleUpdateJSONBodyDirection `json:"direction,omitempty"`

	// Disabled Disable the rule.
	Disabled *bool `json:"disabled,omitempty"`

	// Dnpipe Traffic shaper limiter (in) queue for this rule. This must be an existing traffic shaper limiter or queue. This field is required if a `pdnpipe` value is provided.
	Dnpipe *string `json:"dnpipe,omitempty"`

	// Dst Destination address of the firewall rule. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the destination address, you may prefix the value with `!`.
	Dst *string `json:"dst,omitempty"`

	// Dstport TCP and/or UDP destination port, port range or port alias to apply to this rule. You may specify `any` to match any destination port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Dstport *string `json:"dstport,omitempty"`

	// Floating Set this rule as a floating firewall rule.
	Floating *bool `json:"floating,omitempty"`

	// Gateway Name of an existing gateway traffic will route over upon match. Do not specify this parameter to assume the default gateway. The gateway specified must be of the same IP type set in `ipprotocol`.
	Gateway *string `json:"gateway,omitempty"`

	// Icmptype ICMP subtypes of the firewall rule. This parameter is only available when `protocol` is set to `icmp`. If this parameter is not specified, all ICMP subtypes will be assumed.
	Icmptype *[]APIFirewallRuleUpdateJSONBodyIcmptype `json:"icmptype,omitempty"`

	// Interface Interface this rule will apply to. You may specify either the interface's descriptive name, the pfSense  interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0). If `floating` is enabled, multiple interfaces may be specified.
	Interface *[]string `json:"interface,omitempty"`

	// Ipprotocol IP protocol(s) this rule will apply to.
	Ipprotocol *APIFirewallRuleUpdateJSONBodyIpprotocol `json:"ipprotocol,omitempty"`

	// Log Enable logging of traffic matching this rule.
	Log *bool `json:"log,omitempty"`

	// Pdnpipe Traffic shaper limiter (out) queue for this rule. This must be an existing traffic shaper limiter or queue. This value cannot match the `dnpipe` value and must be a child queue if `dnpipe` is a child queue, or a parent limiter if `dnpipe` is a parent limiter.
	Pdnpipe *string `json:"pdnpipe,omitempty"`

	// Protocol Transfer protocol this rule will apply to.
	Protocol *APIFirewallRuleUpdateJSONBodyProtocol `json:"protocol,omitempty"`

	// Quick Apply action immediately upon match. This field is only available for `floating` rules.
	Quick *bool `json:"quick,omitempty"`

	// Sched Firewall schedule to apply to this rule. This must be an existing firewall schedule name.
	Sched *string `json:"sched,omitempty"`

	// Src Source address of the firewall rule. This may be a single IP, network CIDR, alias name, or interface. When specifying an interface, you may use the real interface ID (e.g. igb0), the descriptive interface name, or the pfSense ID (e.g. wan, lan, optx). To use only the  interface's assigned address, add `ip` to the end of the interface name otherwise  the entire interface's subnet is implied. To negate the context of the source address, you may prefix the value with `!`.
	Src *string `json:"src,omitempty"`

	// Srcport TCP and/or UDP source port, port range or port alias to apply to this rule. You may specify `any` to match any source port. This parameter is required when `protocol` is set to `tcp`, `udp`, or `tcp/udp`.
	Srcport *string `json:"srcport,omitempty"`

	// Statetype State type to use when this rule is matched.
	Statetype *APIFirewallRuleUpdateJSONBodyStatetype `json:"statetype,omitempty"`

	// Tcpflags1 TCP flags (set). Values specified must also be specified in `tcpflags2`.
	Tcpflags1 *[]APIFirewallRuleUpdateJSONBodyTcpflags1 `json:"tcpflags1,omitempty"`

	// Tcpflags2 TCP flags (out of).
	Tcpflags2 *[]APIFirewallRuleUpdateJSONBodyTcpflags2 `json:"tcpflags2,omitempty"`

	// TcpflagsAny Allow all TCP flags. This field is only relevant for TCP rules and will remove any existing values in `tcpflags1` and `tcpflags2`.
	TcpflagsAny *bool `json:"tcpflags_any,omitempty"`

	// Top Place this firewall rule at the top of the access control list.
	Top *bool `json:"top,omitempty"`

	// Tracker Tracker ID of the rule to update.
	Tracker int `json:"tracker"`

	// Type Firewall rule type.
	Type *APIFirewallRuleUpdateJSONBodyType `json:"type,omitempty"`
}

// APIFirewallRuleUpdateJSONBodyDirection defines parameters for APIFirewallRuleUpdate.
type APIFirewallRuleUpdateJSONBodyDirection string

// APIFirewallRuleUpdateJSONBodyIcmptype defines parameters for APIFirewallRuleUpdate.
type APIFirewallRuleUpdateJSONBodyIcmptype string

// APIFirewallRuleUpdateJSONBodyIpprotocol defines parameters for APIFirewallRuleUpdate.
type APIFirewallRuleUpdateJSONBodyIpprotocol string

// APIFirewallRuleUpdateJSONBodyProtocol defines parameters for APIFirewallRuleUpdate.
type APIFirewallRuleUpdateJSONBodyProtocol string

// APIFirewallRuleUpdateJSONBodyStatetype defines parameters for APIFirewallRuleUpdate.
type APIFirewallRuleUpdateJSONBodyStatetype string

// APIFirewallRuleUpdateJSONBodyTcpflags1 defines parameters for APIFirewallRuleUpdate.
type APIFirewallRuleUpdateJSONBodyTcpflags1 string

// APIFirewallRuleUpdateJSONBodyTcpflags2 defines parameters for APIFirewallRuleUpdate.
type APIFirewallRuleUpdateJSONBodyTcpflags2 string

// APIFirewallRuleUpdateJSONBodyType defines parameters for APIFirewallRuleUpdate.
type APIFirewallRuleUpdateJSONBodyType string

// APIFirewallRuleFlushUpdateJSONBody defines parameters for APIFirewallRuleFlushUpdate.
type APIFirewallRuleFlushUpdateJSONBody struct {
	// Apply Specify whether or not you would like these firewall rules to be applied immediately, or simply written to the configuration to be applied later using the /api/v1/firewall/apply endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Rules Firewall rule objects to replace existing firewall rules with. Each object within this array can use any properties available to the /api/v1/firewall/rule endpoint.
	Rules []map[string]interface{} `json:"rules"`
}

// APIFirewallRuleSortUpdateJSONBody defines parameters for APIFirewallRuleSortUpdate.
type APIFirewallRuleSortUpdateJSONBody struct {
	// Apply Specify whether or not the firewall filter should be reloaded after sorting. If `true`, the firewall filter will be immediately reloaded after sorting. If `false`, the sorted configuration will be written but not applied and a separate call to /api/v1/firewall/apply will be needed to apply changes. This field has no effect when `dry_run` is set to `true`.
	Apply *bool `json:"apply,omitempty"`

	// DryRun Specify whether or not the API should write the requested sorting to configuration. If `true`, the API will not write the sorted configuration, only return a representation of what the sort will look like. This is helpful when you are unsure if a particular sort will cause issues. If `false`, the sorted firewall rules will be written to configuration.
	DryRun *bool `json:"dry_run,omitempty"`

	// Field Specify the firewall rule field to sort by. This field must be present on at least one firewall rule for any sorting to occur. In most cases, this will be set to `descr` to sort firewall rules by their descriptions.
	Field string `json:"field"`

	// Option Specify sorting option to use when sorting rules. See [https://www.php.net/manual/en/function.array-multisort.php](https://www.php.net/manual/en/function.array-multisort.php) for more information.
	Option *APIFirewallRuleSortUpdateJSONBodyOption `json:"option,omitempty"`
}

// APIFirewallRuleSortUpdateJSONBodyOption defines parameters for APIFirewallRuleSortUpdate.
type APIFirewallRuleSortUpdateJSONBodyOption string

// APIFirewallScheduleDeleteParams defines parameters for APIFirewallScheduleDelete.
type APIFirewallScheduleDeleteParams struct {
	// Name Name of the existing firewall schedule to delete.
	Name string `form:"name" json:"name"`
}

// APIFirewallScheduleCreateJSONBody defines parameters for APIFirewallScheduleCreate.
type APIFirewallScheduleCreateJSONBody struct {
	// Descr Description for this firewall schedule.
	Descr *string `json:"descr,omitempty"`

	// Name Name of the firewall schedule. This value must be between 1 and 32 characters, and can only contain alphanumerics, underscores and hyphens. This value must be unique from all other firewall schedules.
	Name string `json:"name"`

	// Timerange Array of time range objects for this schedule. Each object must contain fields as specified in the /api/v1/firewall/schedule/time_range endpoint. At least 1 time range object must be specified.
	Timerange []struct {
		Day        *string `json:"day,omitempty"`
		Month      *string `json:"month,omitempty"`
		Position   *string `json:"position,omitempty"`
		Rangedescr *string `json:"rangedescr,omitempty"`
	} `json:"timerange"`
}

// APIFirewallScheduleUpdateJSONBody defines parameters for APIFirewallScheduleUpdate.
type APIFirewallScheduleUpdateJSONBody struct {
	// Descr Description for this firewall schedule.
	Descr *string `json:"descr,omitempty"`

	// Name Name of the existing firewall schedule to update.
	Name string `json:"name"`

	// Timerange Array of time range objects for this schedule. Each object must contain fields as specified in the /api/v1/firewall/schedule/time_range endpoint. At least 1 time range object must be specified. Any existing values will be overwritten.
	Timerange *[]struct {
		Day        *string `json:"day,omitempty"`
		Month      *string `json:"month,omitempty"`
		Position   *string `json:"position,omitempty"`
		Rangedescr *string `json:"rangedescr,omitempty"`
	} `json:"timerange,omitempty"`
}

// APIFirewallScheduleTimeRangeDeleteParams defines parameters for APIFirewallScheduleTimeRangeDelete.
type APIFirewallScheduleTimeRangeDeleteParams struct {
	// Name Name of the existing schedule to delete this time range from.
	Name string `form:"name" json:"name"`

	// Id Specify the ID of the time range to delete. This will be the configuration array index of the `timerange` object within the `schedule` object. Refer to the 'Obtaining Object IDs' section  in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`
}

// APIFirewallScheduleTimeRangeCreateJSONBody defines parameters for APIFirewallScheduleTimeRangeCreate.
type APIFirewallScheduleTimeRangeCreateJSONBody struct {
	// Day Comma-separated list of days the schedule will be enabled for. This will directly correspond with each value in the `month` field. For example, to enable this schedule on March 1st, and August 26th, the `month` field should be formatted as `"3,8"` and the `day` field should be formatted as `"1,26"`. This parameter is required if a `position` value was not specified. This parameter has no effect if the `position` field was specified.
	Day *string `json:"day,omitempty"`

	// Hour Hour range this schedule will be enabled at. This must be two 24-hour time strings formatted as either HH:MM or H:MM separated by `-` (e.g. `9:00-17:00`). The first time range must be less than the second time range. The minutes portion of the time range must be either `00`, `15`, `30`, `45`, or `59`.
	Hour string `json:"hour"`

	// Month Comma-separated list of months the schedule will be enabled on. This will directly correspond with each value in the `day` field. For example, to enable this schedule on March 1st, and August 26th, the `month` field should be formatted as `"3,8"` and the `day` field should be formatted as `"1,26"`. This parameter is required if a `position` value was not specified. This parameter has no effect if the `position` field was specified.
	Month *string `json:"month,omitempty"`

	// Name Name of the existing schedule to add this time range to.
	Name string `json:"name"`

	// Position Comma-separated list of week days the schedule will be enabled on. Options are `1` for Monday, `2` for Tuesday, `3` for Wednesday, `4` for Thursday, `5` for Friday, `6` for Saturday, and `7` for Sunday.
	Position *string `json:"position,omitempty"`

	// Rangedescr Description for this time range.
	Rangedescr *string `json:"rangedescr,omitempty"`
}

// APIFirewallStatesDeleteParams defines parameters for APIFirewallStatesDelete.
type APIFirewallStatesDeleteParams struct {
	// Source Source IP address or CIDR of the firewall states to kill. This parameter is required unless `reset` is set to `true`.
	Source *string `form:"source,omitempty" json:"source,omitempty"`

	// Destination Destination IP address or CIDR of the firewall states to kill. This field has no effect when `reset` is set to `true`.
	Destination *string `form:"destination,omitempty" json:"destination,omitempty"`

	// Reset Reset the entire firewall states table instead of specific states. If `true`, all firewall states will be killed and the `source` and `destination` fields will have no effect. Defaults to `false`. _Note: setting this field to `true` when the `async` field is set to `false` OR the `sleep` field is set too low may prevent the API from sending a response._
	Reset *bool `form:"reset,omitempty" json:"reset,omitempty"`

	// Async Kill states in the background. In most cases, this is required to prevent the state that allows the API to respond from being killed prematurely.
	Async *bool `form:"async,omitempty" json:"async,omitempty"`

	// Sleep Amount of time (in seconds) to wait before killing the targeted firewall states. Only applicable when `async` is set to `true`.
	Sleep *int `form:"sleep,omitempty" json:"sleep,omitempty"`
}

// APIFirewallStatesSizeUpdateJSONBody defines parameters for APIFirewallStatesSizeUpdate.
type APIFirewallStatesSizeUpdateJSONBody struct {
	// Maximumstates Set the maximum number of firewall state entries. Specify a numeric value with a minimum of `10`, or the string `default` to revert to the system default size.
	Maximumstates string `json:"maximumstates"`
}

// APIFirewallTrafficShaperDeleteParams defines parameters for APIFirewallTrafficShaperDelete.
type APIFirewallTrafficShaperDeleteParams struct {
	// Interface Interface of the traffic shaper policy to delete. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `form:"interface" json:"interface"`

	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple firewall items at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIFirewallTrafficShaperCreateJSONBody defines parameters for APIFirewallTrafficShaperCreate.
type APIFirewallTrafficShaperCreateJSONBody struct {
	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple firewall items at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Bandwidth Bandwidth limit of this traffic shaper. This must be a numeric value of `1` or greater. If you have set the `bandwidthtype` to `%`, this value must be `100` or less.
	Bandwidth int `json:"bandwidth"`

	// Bandwidthtype Bandwidth type to use when setting the bandwidth. Choices are `%` for percentage based bandwidth, `b` for bits, `Kb` for kilobits, `Mb` for megabits, and `Gb` for gigabits.
	Bandwidthtype APIFirewallTrafficShaperCreateJSONBodyBandwidthtype `json:"bandwidthtype"`

	// Enabled Enable this traffic shaper policy.
	Enabled *bool `json:"enabled,omitempty"`

	// Interface Interface the traffic shaper policy will apply to. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `json:"interface"`

	// Qlimit Queue limit value for this traffic shaper policy. Do not specify this field to assume no limits.
	Qlimit *int `json:"qlimit,omitempty"`

	// Scheduler Scheduler type for this traffic shaper.
	Scheduler APIFirewallTrafficShaperCreateJSONBodyScheduler `json:"scheduler"`

	// Tbrconfig TBR size for this traffic shaper.
	Tbrconfig *int `json:"tbrconfig,omitempty"`
}

// APIFirewallTrafficShaperCreateJSONBodyBandwidthtype defines parameters for APIFirewallTrafficShaperCreate.
type APIFirewallTrafficShaperCreateJSONBodyBandwidthtype string

// APIFirewallTrafficShaperCreateJSONBodyScheduler defines parameters for APIFirewallTrafficShaperCreate.
type APIFirewallTrafficShaperCreateJSONBodyScheduler string

// APIFirewallTrafficShaperUpdateJSONBody defines parameters for APIFirewallTrafficShaperUpdate.
type APIFirewallTrafficShaperUpdateJSONBody struct {
	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple firewall items at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Bandwidth Bandwidth limit of this traffic shaper. This must be a numeric value of `1` or greater. If you have set the `bandwidthtype` to `%`, this value must be `100` or less. This parameter is required when a new `bandwidthtype` value is specified.
	Bandwidth *int `json:"bandwidth,omitempty"`

	// Bandwidthtype Bandwidth type to use when setting the bandwidth. Choices are `%` for percentage based bandwidth, `b` for bits, `Kb` for kilobits, `Mb` for megabits, and `Gb` for gigabits. If this value is updated, a new `bandwidth` value will also be required.
	Bandwidthtype *APIFirewallTrafficShaperUpdateJSONBodyBandwidthtype `json:"bandwidthtype,omitempty"`

	// Enabled Enable this traffic shaper policy.
	Enabled *bool `json:"enabled,omitempty"`

	// Interface Interface of the traffic shaper policy to update. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `json:"interface"`

	// Qlimit Queue limit value for this traffic shaper policy. Do not specify this field to assume no limits.
	Qlimit *int `json:"qlimit,omitempty"`

	// Scheduler Scheduler type for this traffic shaper.
	Scheduler *APIFirewallTrafficShaperUpdateJSONBodyScheduler `json:"scheduler,omitempty"`

	// Tbrconfig TBR size for this traffic shaper.
	Tbrconfig *int `json:"tbrconfig,omitempty"`
}

// APIFirewallTrafficShaperUpdateJSONBodyBandwidthtype defines parameters for APIFirewallTrafficShaperUpdate.
type APIFirewallTrafficShaperUpdateJSONBodyBandwidthtype string

// APIFirewallTrafficShaperUpdateJSONBodyScheduler defines parameters for APIFirewallTrafficShaperUpdate.
type APIFirewallTrafficShaperUpdateJSONBodyScheduler string

// APIFirewallTrafficShaperLimiterDeleteParams defines parameters for APIFirewallTrafficShaperLimiterDelete.
type APIFirewallTrafficShaperLimiterDeleteParams struct {
	// Name Name of the limiter to delete.
	Name string `form:"name" json:"name"`

	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple firewall items at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *string `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIFirewallTrafficShaperLimiterCreateJSONBody defines parameters for APIFirewallTrafficShaperLimiterCreate.
type APIFirewallTrafficShaperLimiterCreateJSONBody struct {
	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple firewall items at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Aqm Queue Management Algorithm for this limiter to use.
	Aqm APIFirewallTrafficShaperLimiterCreateJSONBodyAqm `json:"aqm"`

	// Bandwidth Bandwidth objects to assign to this limiter. Each object will require fields as specified by the /api/v1/firewall/traffic_shaper/limiter/bandwidth endpoint documentation. At least one bandwidth object must be specified to create the limiter.
	Bandwidth []struct {
		Bw      *int    `json:"bw,omitempty"`
		Bwscale *string `json:"bwscale,omitempty"`
		Bwsched *string `json:"bwsched,omitempty"`
	} `json:"bandwidth"`

	// Buckets Buckets for this limiter.
	Buckets *int `json:"buckets,omitempty"`

	// Delay Delay value for this limiter.
	Delay *int `json:"delay,omitempty"`

	// Description Description for this limiter.
	Description *string `json:"description,omitempty"`

	// Ecn Enable Explicit Congestion Notification (ECN). Not every AQM and/or scheduler supports ECN.
	Ecn *bool `json:"ecn,omitempty"`

	// Enabled Enable this limiter.
	Enabled *bool `json:"enabled,omitempty"`

	// Mask Limiter address mask type.
	Mask *APIFirewallTrafficShaperLimiterCreateJSONBodyMask `json:"mask,omitempty"`

	// Maskbits IPv4 subnet bitmask to apply the limiter to. This parameter is only available when `mask` is set to `srcaddress` or `dstaddress`.
	Maskbits *int `json:"maskbits,omitempty"`

	// Maskbitsv6 IPv6 subnet bitmask to apply the limiter to. This parameter is only available when `mask` is set to `srcaddress` or `dstaddress`.
	Maskbitsv6 *int `json:"maskbitsv6,omitempty"`

	// Name Name for this limiter. This value must only contain alphanumerics, underscore and/or hyphens, must be 32 characters or less, and must be unique from all other limiters Including child queues.
	Name string `json:"name"`

	// ParamCodelInterval CoDel interval parameter for this limiter. This parameter is only available when `aqm` is set to `codel`.
	ParamCodelInterval *int `json:"param_codel_interval,omitempty"`

	// ParamCodelTarget CoDel target parameter for this limiter. This parameter is only available when `aqm` is set to `codel`.
	ParamCodelTarget *int `json:"param_codel_target,omitempty"`

	// ParamFqCodelFlow Specify the FQ_CoDel flow parameter for this limiter. This parameter is only available when `sched` is set to `fq_codel`.
	ParamFqCodelFlow *int `json:"param_fq_codel_flow,omitempty"`

	// ParamFqCodelInterval FQ_CoDel interval parameter for this limiter. This parameter is only available when `sched` is set to `fq_codel`.
	ParamFqCodelInterval *int `json:"param_fq_codel_interval,omitempty"`

	// ParamFqCodelLimit FQ_CoDel limit parameter for this limiter. This parameter is only available when `sched` is set to `fq_codel`.
	ParamFqCodelLimit *int `json:"param_fq_codel_limit,omitempty"`

	// ParamFqCodelQuantum FQ_CoDel quantum parameter for this limiter. This parameter is only available when `sched` is set to `fq_codel`.
	ParamFqCodelQuantum *int `json:"param_fq_codel_quantum,omitempty"`

	// ParamFqCodelTarget FQ_CoDel target parameter for this limiter. This parameter is only available when `sched` is set to `fq_codel`.
	ParamFqCodelTarget *int `json:"param_fq_codel_target,omitempty"`

	// ParamFqPieAlpha FQ_PIE alpha parameter for this limiter. This parameter is only available when `sched` is set to `fq_pie`.
	ParamFqPieAlpha *int `json:"param_fq_pie_alpha,omitempty"`

	// ParamFqPieBeta FQ_PIE beta parameter for this limiter. This parameter is only available when `sched` is set to `fq_pie`.
	ParamFqPieBeta *int `json:"param_fq_pie_beta,omitempty"`

	// ParamFqPieMaxBurst FQ_PIE max burst parameter for this limiter. This parameter is only available when `sched` is set to `fq_pie`.
	ParamFqPieMaxBurst *int `json:"param_fq_pie_max_burst,omitempty"`

	// ParamFqPieMaxEcnth FQ_PIE max ecnth parameter for this limiter. This parameter is only available when `sched` is set to `fq_pie`.
	ParamFqPieMaxEcnth *int `json:"param_fq_pie_max_ecnth,omitempty"`

	// ParamFqPieTarget FQ_PIE target parameter for this limiter. This parameter is only available when `sched` is set to `fq_pie`.
	ParamFqPieTarget *int `json:"param_fq_pie_target,omitempty"`

	// ParamFqPieTupdate FQ_PIE tupdate parameter for this limiter. This parameter is only available when `sched` is set to `fq_pie`.
	ParamFqPieTupdate *int `json:"param_fq_pie_tupdate,omitempty"`

	// ParamGredMaxP GRED max_p parameter for this limiter. This parameter is only available when `aqm` is set to `gred`.
	ParamGredMaxP *int `json:"param_gred_max_p,omitempty"`

	// ParamGredMaxTh GRED max_th parameter for this limiter. This parameter is only available when `aqm` is set to `gred`.
	ParamGredMaxTh *int `json:"param_gred_max_th,omitempty"`

	// ParamGredMinTh GRED min_th parameter for this limiter. This parameter is only available when `aqm` is set to `gred`.
	ParamGredMinTh *int `json:"param_gred_min_th,omitempty"`

	// ParamGredWQ GRED w_q parameter for this limiter. This parameter is only available when `aqm` is set to `gred`.
	ParamGredWQ *int `json:"param_gred_w_q,omitempty"`

	// ParamPieAlpha PIE alpha parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
	ParamPieAlpha *int `json:"param_pie_alpha,omitempty"`

	// ParamPieBeta PIE beta parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
	ParamPieBeta *int `json:"param_pie_beta,omitempty"`

	// ParamPieMaxBurst PIE max burst parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
	ParamPieMaxBurst *int `json:"param_pie_max_burst,omitempty"`

	// ParamPieMaxEcnth PIE max ecnth parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
	ParamPieMaxEcnth *int `json:"param_pie_max_ecnth,omitempty"`

	// ParamPieTarget PIE target parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
	ParamPieTarget *int `json:"param_pie_target,omitempty"`

	// ParamPieTupdate PIE tupdate parameter for this limiter. This parameter is only available when `aqm` is set to `pie`.
	ParamPieTupdate *int `json:"param_pie_tupdate,omitempty"`

	// ParamRedMaxP RED max_p parameter for this limiter. This parameter is only available when `aqm` is set to `red`.
	ParamRedMaxP *int `json:"param_red_max_p,omitempty"`

	// ParamRedMaxTh RED max_th parameter for this limiter. This parameter is only available when `aqm` is set to `red`.
	ParamRedMaxTh *int `json:"param_red_max_th,omitempty"`

	// ParamRedMinTh RED min_th parameter for this limiter. This parameter is only available when `aqm` is set to `red`.
	ParamRedMinTh *int `json:"param_red_min_th,omitempty"`

	// ParamRedWQ RED w_q parameter for this limiter. This parameter is only available when `aqm` is set to `red`.
	ParamRedWQ *int `json:"param_red_w_q,omitempty"`

	// Plr Packet loss rate value for this limiter.
	Plr *float32 `json:"plr,omitempty"`

	// Qlimit Queue limit value for this limiter.
	Qlimit *int `json:"qlimit,omitempty"`

	// Sched Scheduler type for this limiter to use.
	Sched APIFirewallTrafficShaperLimiterCreateJSONBodySched `json:"sched"`
}

// APIFirewallTrafficShaperLimiterCreateJSONBodyAqm defines parameters for APIFirewallTrafficShaperLimiterCreate.
type APIFirewallTrafficShaperLimiterCreateJSONBodyAqm string

// APIFirewallTrafficShaperLimiterCreateJSONBodyMask defines parameters for APIFirewallTrafficShaperLimiterCreate.
type APIFirewallTrafficShaperLimiterCreateJSONBodyMask string

// APIFirewallTrafficShaperLimiterCreateJSONBodySched defines parameters for APIFirewallTrafficShaperLimiterCreate.
type APIFirewallTrafficShaperLimiterCreateJSONBodySched string

// APIFirewallTrafficShaperLimiterBandwidthDeleteParams defines parameters for APIFirewallTrafficShaperLimiterBandwidthDelete.
type APIFirewallTrafficShaperLimiterBandwidthDeleteParams struct {
	// Name Name of the parent limiter to delete this bandwidth object from.
	Name string `form:"name" json:"name"`

	// Id Specify the ID of the bandwidth object to delete. The ID will be the array index of the object to delete within the limiter's bandwith-items array. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`

	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple firewall items at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIFirewallTrafficShaperLimiterBandwidthCreateJSONBody defines parameters for APIFirewallTrafficShaperLimiterBandwidthCreate.
type APIFirewallTrafficShaperLimiterBandwidthCreateJSONBody struct {
	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple firewall items at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Bw Amount of bandwidth allotted to the parent limiter.
	Bw int `json:"bw"`

	// Bwscale Bandwidth scale type.
	Bwscale APIFirewallTrafficShaperLimiterBandwidthCreateJSONBodyBwscale `json:"bwscale"`

	// Bwsched Assign a schedule for this bandwidth setting. This must be an existing firewall schedule name.
	Bwsched *string `json:"bwsched,omitempty"`

	// Name Name of the existing parent limiter to add this bandwidth object to.
	Name string `json:"name"`
}

// APIFirewallTrafficShaperLimiterBandwidthCreateJSONBodyBwscale defines parameters for APIFirewallTrafficShaperLimiterBandwidthCreate.
type APIFirewallTrafficShaperLimiterBandwidthCreateJSONBodyBwscale string

// APIFirewallTrafficShaperLimiterQueueDeleteParams defines parameters for APIFirewallTrafficShaperLimiterQueueDelete.
type APIFirewallTrafficShaperLimiterQueueDeleteParams struct {
	// Limiter Name of the parent limiter to delete this queue from.
	Limiter string `form:"limiter" json:"limiter"`

	// Name Name of the queue to delete.
	Name string `form:"name" json:"name"`

	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple firewall items at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *string `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIFirewallTrafficShaperLimiterQueueCreateJSONBody defines parameters for APIFirewallTrafficShaperLimiterQueueCreate.
type APIFirewallTrafficShaperLimiterQueueCreateJSONBody struct {
	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple firewall items at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Aqm Queue Management Algorithm for this limiter queue to use.
	Aqm APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqm `json:"aqm"`

	// Buckets Buckets for this limiter queue.
	Buckets *int `json:"buckets,omitempty"`

	// Description Description for this limiter queue.
	Description *string `json:"description,omitempty"`

	// Ecn Enable Explicit Congestion Notification (ECN). This parameter is only available when `aqm` is set  to `codel`, `pie`, `red` or `gred`.
	Ecn *bool `json:"ecn,omitempty"`

	// Enabled Enable this limiter queue.
	Enabled *bool `json:"enabled,omitempty"`

	// Limiter Name of the parent limiter to add this queue to.
	Limiter string `json:"limiter"`

	// Mask Limiter address mask type.
	Mask *APIFirewallTrafficShaperLimiterQueueCreateJSONBodyMask `json:"mask,omitempty"`

	// Maskbits IPv4 subnet bitmask to apply the limiter queue to. This parameter is only available when `mask` is set to `srcaddress` or `dstaddress`.
	Maskbits *int `json:"maskbits,omitempty"`

	// Maskbitsv6 IPv6 subnet bitmask to apply the limiter queue to. This parameter is only available when `mask` is set to `srcaddress` or `dstaddress`.
	Maskbitsv6 *int `json:"maskbitsv6,omitempty"`

	// Name Name for this limiter queue. This value must only contain alphanumerics, underscore and/or hyphens, must be 32 characters or less, and must be unique from all other limiters including child queues.
	Name string `json:"name"`

	// ParamCodelInterval CoDel interval parameter for this limiter queue. This parameter is only available when `aqm` is set to `codel`.
	ParamCodelInterval *int `json:"param_codel_interval,omitempty"`

	// ParamCodelTarget CoDel target parameter for this limiter queue. This parameter is only available when `aqm` is set to `codel`.
	ParamCodelTarget *int `json:"param_codel_target,omitempty"`

	// ParamGredMaxP GRED max_p parameter for this limiter queue. This parameter is only available when `aqm` is set to `gred`.
	ParamGredMaxP *int `json:"param_gred_max_p,omitempty"`

	// ParamGredMaxTh GRED max_th parameter for this limiter queue. This parameter is only available when `aqm` is set to `gred`.
	ParamGredMaxTh *int `json:"param_gred_max_th,omitempty"`

	// ParamGredMinTh GRED min_th parameter for this limiter queue. This parameter is only available when `aqm` is set to `gred`.
	ParamGredMinTh *int `json:"param_gred_min_th,omitempty"`

	// ParamGredWQ GRED w_q parameter for this limiter queue. This parameter is only available when `aqm` is set to `gred`.
	ParamGredWQ *int `json:"param_gred_w_q,omitempty"`

	// ParamPieAlpha PIE alpha parameter for this limiter queue. This parameter is only available when `aqm` is set to `pie`.
	ParamPieAlpha *int `json:"param_pie_alpha,omitempty"`

	// ParamPieBeta PIE beta parameter for this limiter queue. This parameter is only available when `aqm` is set to `pie`.
	ParamPieBeta *int `json:"param_pie_beta,omitempty"`

	// ParamPieMaxBurst PIE max burst parameter for this limiter queue. This parameter is only available when `aqm` is set to `pie`.
	ParamPieMaxBurst *int `json:"param_pie_max_burst,omitempty"`

	// ParamPieMaxEcnth PIE max ecnth parameter for this limiter queue. This parameter is only available when `aqm` is set to `pie`.
	ParamPieMaxEcnth *int `json:"param_pie_max_ecnth,omitempty"`

	// ParamPieTarget PIE target parameter for this limiter queue. This parameter is only available when `aqm` is set to `pie`.
	ParamPieTarget *int `json:"param_pie_target,omitempty"`

	// ParamPieTupdate Specify the PIE tupdate parameter for this limiter queue. This parameter is only available when `aqm` is set to `pie`.
	ParamPieTupdate *int `json:"param_pie_tupdate,omitempty"`

	// ParamRedMaxP RED max_p parameter for this limiter queue. This parameter is only available when `aqm` is set to `red`.
	ParamRedMaxP *int `json:"param_red_max_p,omitempty"`

	// ParamRedMaxTh RED max_th parameter for this limiter queue. This parameter is only available when `aqm` is set to `red`.
	ParamRedMaxTh *int `json:"param_red_max_th,omitempty"`

	// ParamRedMinTh RED min_th parameter for this limiter queue. This parameter is only available when `aqm` is set to `red`.
	ParamRedMinTh *int `json:"param_red_min_th,omitempty"`

	// ParamRedWQ RED w_q parameter for this limiter queue. This parameter is only available when `aqm` is set to `red`.
	ParamRedWQ *int `json:"param_red_w_q,omitempty"`

	// Plr Packet loss rate value for this limiter queue.
	Plr *float32 `json:"plr,omitempty"`

	// Qlimit Queue limit value for this limiter queue.
	Qlimit *int `json:"qlimit,omitempty"`

	// Weight Weight value of this limiter queue.
	Weight *int `json:"weight,omitempty"`
}

// APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqm defines parameters for APIFirewallTrafficShaperLimiterQueueCreate.
type APIFirewallTrafficShaperLimiterQueueCreateJSONBodyAqm string

// APIFirewallTrafficShaperLimiterQueueCreateJSONBodyMask defines parameters for APIFirewallTrafficShaperLimiterQueueCreate.
type APIFirewallTrafficShaperLimiterQueueCreateJSONBodyMask string

// APIFirewallTrafficShaperQueueDeleteParams defines parameters for APIFirewallTrafficShaperQueueDelete.
type APIFirewallTrafficShaperQueueDeleteParams struct {
	// Interface Parent interface to delete the traffic shaper queue from. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `form:"interface" json:"interface"`

	// Name Name of the queue to delete. This must be an existing queue name configured on the parent traffic shaper.
	Name string `form:"name" json:"name"`
}

// APIFirewallTrafficShaperQueueCreateJSONBody defines parameters for APIFirewallTrafficShaperQueueCreate.
type APIFirewallTrafficShaperQueueCreateJSONBody struct {
	// Apply Specify whether or not you would like this queue to be applied immediately, or simply written to the configuration to be applied later. If you are modifying multiple firewall items at once it is best to set this to false and apply the changes afterwards using the `/api/v1/firewall/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Bandwidth Bandwidth limits of this traffic shaper. This must be a numeric value of `1` or greater. If you have set the `bandwidthtype` to `%`, this value must be `100` or less. This parameter is only available when the parent traffic shaper's `scheduler` value is set to `HFSC`,  `CBQ`, or `FAIRQ`. The sum of this value and all other child queues  must be less than the parent traffic shaper's `bandwidth` value.
	Bandwidth *int `json:"bandwidth,omitempty"`

	// Bandwidthtype Bandwidth type to use when setting the `bandwidth` value. Choices are `%` for percentage based bandwidth, `b` for bits, `Kb` for kilobits, `Mb` for megabits, and `Gb` for gigabits. This parameter is only available when the parent traffic shaper's `scheduler` value is  set to `HFSC`, `CBQ`, or `FAIRQ`.
	Bandwidthtype *APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtype `json:"bandwidthtype,omitempty"`

	// Borrow Allow queue to borrow bandwidth from other queues when available. This parameter is only available when the parent traffic shaper's  `scheduler` value is set to `CBQ`.
	Borrow *bool `json:"borrow,omitempty"`

	// Buckets Bandwidth buckets value for this queue. This parameter is only available when the parent traffic shaper's `scheduler` value is set to `FAIRQ`.
	Buckets *string `json:"buckets,omitempty"`

	// Codel Set the Codel Active Queue option for this queue.
	Codel *bool `json:"codel,omitempty"`

	// Default Set queue as the default for the parent interface.
	Default *bool `json:"default,omitempty"`

	// Description Description for this queue.
	Description *string `json:"description,omitempty"`

	// Ecn Set the Explicit Congestion Notification option for this queue.
	Ecn *bool `json:"ecn,omitempty"`

	// Enabled Enable this traffic queue.
	Enabled *bool `json:"enabled,omitempty"`

	// Hogs Bandwidth hogs value for this queue. This parameter is only available when the parent traffic shaper's `scheduler` value is set to `FAIRQ`.
	Hogs *string `json:"hogs,omitempty"`

	// Interface Parent interface to create the traffic shaper queue for. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `json:"interface"`

	// Linkshare Enable the linkshare (shared bandwidth) option for this queue.  This parameter is only available when the parent traffic shaper's  `scheduler` value is set to `HFSC`.
	Linkshare *bool `json:"linkshare,omitempty"`

	// Linkshare1 First linkshare value (m1). This value must be a bandwidth formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is only available when the parent traffic shaper's `scheduler` value is set to `HFSC` and the `linkshare` value is set to `true`.
	Linkshare1 *string `json:"linkshare1,omitempty"`

	// Linkshare2 Second linkshare value (d). This value must be an integer of 1 or greater. This value is required if a `linkshare1` value was specified. This parameter is only available when the parent traffic shaper's `scheduler` value is set to `HFSC` and the `linkshare` value is set to `true`.
	Linkshare2 *int `json:"linkshare2,omitempty"`

	// Linkshare3 Third linkshare value (m2). This value must be a bandwidth formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is only available when the parent traffic shaper's `scheduler` is set to `HFSC` and the `linkshare` value is enabled. This parameter is required if the`linkshare` value is enabled.
	Linkshare3 *string `json:"linkshare3,omitempty"`

	// Name Name for this queue. This name's length must be 15 characters or less, and unique from all other queues on the parent interface.
	Name string `json:"name"`

	// Priority Priority of this queue. This parameter is only available when the parent's `scheduler` value is set to `FAIRQ`, `CBQ` or `PRIQ`.
	Priority *int `json:"priority,omitempty"`

	// Qlimit Specify the queue limit value for this queue. If set, this must be a value of `1` or greater. Do not specify this parameter to assume no limits.
	Qlimit *int `json:"qlimit,omitempty"`

	// Realtime Enable the realtime (minimum bandwidth) option for this queue. This parameter is only available when parent traffic shaper's `scheduler`  is set to `HFSC`.
	Realtime *bool `json:"realtime,omitempty"`

	// Realtime1 First realtime value (m1). This value must be a bandwidth formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is only available when the parent traffic shaper's `scheduler` is  set to `HFSC` and the `realtime` value is set to `true`.
	Realtime1 *string `json:"realtime1,omitempty"`

	// Realtime2 Second realtime value (d). This value must be an integer of 1 or greater. This parameter is required if a `realtime1` value  was specified. This parameter is only available when the parent  traffic shaper's `scheduler` value is set to `HFSC` and the `realtime` value is set to `true`.
	Realtime2 *int `json:"realtime2,omitempty"`

	// Realtime3 Third realtime value (m2). This value must be a bandwidth formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is  only required when the parent traffic shaper's `scheduler` value is set to `HFSC` and the `realtime` value is set to `true`.
	Realtime3 *string `json:"realtime3,omitempty"`

	// Red Set the Random Early Detection option for this queue.
	Red *bool `json:"red,omitempty"`

	// Rio Set the Random Early Detection In and Out option for this queue.
	Rio *bool `json:"rio,omitempty"`

	// Upperlimit Enable the upperlimit (max bandwidth) option for this queue. This parameter is only available when the parent's traffic  shaper's `scheduler` value is set to `HFSC`.
	Upperlimit *bool `json:"upperlimit,omitempty"`

	// Upperlimit1 First upper limit value (m1). This value must be a bandwidth formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter is only available when the parent traffic shaper's `scheduler` value is set to `HFSC` and `upperlimit` value is set to `true`.
	Upperlimit1 *string `json:"upperlimit1,omitempty"`

	// Upperlimit2 Second upper limit value (d). This value must be an integer of `1` or greater. This value is required if an `upperlimit1` value  was specified. This parameter is only available when the parent  traffic shaper's `scheduler` value is set to `HFSC` and `upperlimit`  value is set to `true`.
	Upperlimit2 *int `json:"upperlimit2,omitempty"`

	// Upperlimit3 Third upper limit value (m2). This value must be a bandwidth formatted string (e.g. `100Mb`, `1Gb`, etc.). This parameter  is only available when the parent traffic shaper's `scheduler`  value is set to `HFSC` and `upperlimit` value is set to `true`.  This parameter is required if the`upperlimit` value is set to `true`.
	Upperlimit3 *string `json:"upperlimit3,omitempty"`
}

// APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtype defines parameters for APIFirewallTrafficShaperQueueCreate.
type APIFirewallTrafficShaperQueueCreateJSONBodyBandwidthtype string

// APIFirewallVirtualIPDeleteParams defines parameters for APIFirewallVirtualIPDelete.
type APIFirewallVirtualIPDeleteParams struct {
	// Id ID of the virtual IP to delete. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`
}

// APIFirewallVirtualIPCreateJSONBody defines parameters for APIFirewallVirtualIPCreate.
type APIFirewallVirtualIPCreateJSONBody struct {
	// Advbase Advertisement base for the CARP virtual IP. This parameter is only available when `type` is set to `carp`.
	Advbase *int `json:"advbase,omitempty"`

	// Advskew Advertisement skew for the new CARP virtual IP. This parameter is only available when `type` is set to `carp`.
	Advskew *int `json:"advskew,omitempty"`

	// Descr Description of the virtual IP.
	Descr *string `json:"descr,omitempty"`

	// Interface Interface that will be assigned the virtual IP. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `json:"interface"`

	// Mode Set the virtual IP mode.
	Mode APIFirewallVirtualIPCreateJSONBodyMode `json:"mode"`

	// Noexpand Disable IP expansion for the virtual IP address. This parameter is only available when `type` is set to  `proxyarp` or `other`.
	Noexpand *bool `json:"noexpand,omitempty"`

	// Password Password for CARP virtual IP. This parameter is required when `type` is set to `carp`.
	Password *string `json:"password,omitempty"`

	// Subnet IP or CIDR of the virtual IP.
	Subnet string `json:"subnet"`

	// Vhid VHID for the CARP virtual IP. Only available for `carp` mode. Leave unspecified to automatically detect the next available VHID. This parameter is only available when `type` is set to `carp`.
	Vhid *int `json:"vhid,omitempty"`
}

// APIFirewallVirtualIPCreateJSONBodyMode defines parameters for APIFirewallVirtualIPCreate.
type APIFirewallVirtualIPCreateJSONBodyMode string

// APIFirewallVirtualIPUpdateJSONBody defines parameters for APIFirewallVirtualIPUpdate.
type APIFirewallVirtualIPUpdateJSONBody struct {
	// Advbase Advertisement base for the CARP virtual IP. This parameter is only available when `type` is set to `carp`.
	Advbase *int `json:"advbase,omitempty"`

	// Advskew Advertisement skew for the new CARP virtual IP. This parameter is only available when `type` is set to `carp`.
	Advskew *int `json:"advskew,omitempty"`

	// Descr Description of the virtual IP.
	Descr *string `json:"descr,omitempty"`

	// Id ID of the virtual IP to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// Interface Interface that will be assigned the virtual IP. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface *string `json:"interface,omitempty"`

	// Mode Set the virtual IP mode.
	Mode *APIFirewallVirtualIPUpdateJSONBodyMode `json:"mode,omitempty"`

	// Noexpand Disable IP expansion for the virtual IP address. This parameter is only available when `type` is set to  `proxyarp` or `other`.
	Noexpand *bool `json:"noexpand,omitempty"`

	// Password Password for CARP virtual IP. This parameter is required when `type` is set to `carp` and no password is set.
	Password *string `json:"password,omitempty"`

	// Subnet IP or CIDR of the virtual IP.
	Subnet *string `json:"subnet,omitempty"`

	// Vhid VHID for the CARP virtual IP. Only available for `carp` mode. Leave unspecified to automatically detect the next available VHID. This parameter is only available when `type` is set to `carp`.
	Vhid *int `json:"vhid,omitempty"`
}

// APIFirewallVirtualIPUpdateJSONBodyMode defines parameters for APIFirewallVirtualIPUpdate.
type APIFirewallVirtualIPUpdateJSONBodyMode string

// APIInterfaceDeleteParams defines parameters for APIInterfaceDelete.
type APIInterfaceDeleteParams struct {
	// If Interface ID of interface to delete. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the physical interface id (e.g. igb0).
	If string `form:"if" json:"if"`
}

// APIInterfaceCreateJSONBody defines parameters for APIInterfaceCreate.
type APIInterfaceCreateJSONBody struct {
	// AdvDhcpConfigAdvanced Enable the IPv4 DHCP advanced configuration options. This enables the DHCP options: `adv_dhcp_send_options`, `adv_dhcp_request_options`, `adv_dhcp_required_options`, `adv_dhcp_option_modifiers`. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpConfigAdvanced *bool `json:"adv_dhcp_config_advanced,omitempty"`

	// AdvDhcpConfigFileOverride Enable local DHCP configuration file override. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpConfigFileOverride *bool `json:"adv_dhcp_config_file_override,omitempty"`

	// AdvDhcpConfigFileOverrideFile Set the custom DHCP configuration file's absolute path. This file must exist beforehand. This parameter is only available when `type` is set to `dhcp` and  `adv_dhcp_config_file_override` is set to `true`.
	AdvDhcpConfigFileOverrideFile *string `json:"adv_dhcp_config_file_override_file,omitempty"`

	// AdvDhcpOptionModifiers Set a custom IPv4 option modifier. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
	AdvDhcpOptionModifiers *string `json:"adv_dhcp_option_modifiers,omitempty"`

	// AdvDhcpPtBackoffCutoff Set the IPv4 DHCP protocol backoff cutoff interval. Must be numeric value greater than 1. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtBackoffCutoff *int `json:"adv_dhcp_pt_backoff_cutoff,omitempty"`

	// AdvDhcpPtInitialInterval Set the IPv4 DHCP protocol initial interval. Must be numeric value greater than 1. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtInitialInterval *int `json:"adv_dhcp_pt_initial_interval,omitempty"`

	// AdvDhcpPtReboot Set the IPv4 DHCP protocol reboot interval. Must be numeric value greater than 1. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtReboot *int `json:"adv_dhcp_pt_reboot,omitempty"`

	// AdvDhcpPtRetry Set the IPv4 DHCP protocol retry interval. Must be numeric value greater than 1. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtRetry *int `json:"adv_dhcp_pt_retry,omitempty"`

	// AdvDhcpPtSelectTimeout Set the IPv4 DHCP protocol select timeout interval. Must be numeric value greater than 0. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtSelectTimeout *int `json:"adv_dhcp_pt_select_timeout,omitempty"`

	// AdvDhcpPtTimeout Set the IPv4 DHCP protocol timeout interval. Must be numeric value greater than 1. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtTimeout *int `json:"adv_dhcp_pt_timeout,omitempty"`

	// AdvDhcpRequestOptions Set a custom IPv4 request option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
	AdvDhcpRequestOptions *string `json:"adv_dhcp_request_options,omitempty"`

	// AdvDhcpRequiredOptions Set a custom IPv4 required option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
	AdvDhcpRequiredOptions *string `json:"adv_dhcp_required_options,omitempty"`

	// AdvDhcpSendOptions Set a custom IPv4 send option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
	AdvDhcpSendOptions *string `json:"adv_dhcp_send_options,omitempty"`

	// AliasAddress Set the IPv4 DHCP address alias. The value in this field is used as a fixed alias IPv4 address by the DHCP  client. This parameter is only available when `type` is set to `dhcp`.
	AliasAddress *string `json:"alias-address,omitempty"`

	// AliasSubnet Set the IPv4 DHCP address aliases subnet. This parameter is only available when `type` is set to `dhcp`.
	AliasSubnet *int `json:"alias-subnet,omitempty"`

	// Apply Specify whether or not you would like this interface to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are creating multiple interfaces at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/interface/apply` endpoint. Otherwise, If you are only creating a single interface, you may set this true to apply it immediately.
	Apply *bool `json:"apply,omitempty"`

	// Blockbogons Block bogon networks from routing over this interface.
	Blockbogons *bool `json:"blockbogons,omitempty"`

	// Blockpriv Block RFC1918 traffic from routing over this interface.
	Blockpriv *bool `json:"blockpriv,omitempty"`

	// Descr Descriptive name for the new interface.
	Descr string `json:"descr"`

	// Dhcpcvpt Set the DHCP VLAN priority. This parameter is only available when `type` is set to `dhcp` and `dhcpvlanenable` is set to `true`.
	Dhcpcvpt *APIInterfaceCreateJSONBodyDhcpcvpt `json:"dhcpcvpt,omitempty"`

	// Dhcphostname Assign IPv4 DHCP hostname. This parameter is only available when `type` is set to `dhcp`.
	Dhcphostname *string `json:"dhcphostname,omitempty"`

	// Dhcprejectfrom Assign IPv4 DHCP rejected servers by IP. This parameter is only available when `type` is set to `dhcp`.
	Dhcprejectfrom *[]string `json:"dhcprejectfrom,omitempty"`

	// Dhcpvlanenable Enable DHCP VLAN prioritization. This parameter is only available when `type` is set to `dhcp`.
	Dhcpvlanenable *bool `json:"dhcpvlanenable,omitempty"`

	// Enable Enable interface upon creation.
	Enable *bool `json:"enable,omitempty"`

	// Gateway Name of upstream IPv4 gateway for this interface. This is only necessary on WAN/UPLINK interfaces. This parameter is only available when `type` is set to `staticv4`.
	Gateway *string `json:"gateway,omitempty"`

	// Gateway6rd Set the 6RD interface IPv4 gateway address. This parameter is only required when `type6` is set to `6rd`
	Gateway6rd *string `json:"gateway-6rd,omitempty"`

	// Gatewayv6 Name of upstream IPv6 gateway for this interface. This is only necessary for WAN/UPLINK interfaces. This parameter is only available when `type6` is set to `staticv6`.
	Gatewayv6 *string `json:"gatewayv6,omitempty"`

	// If Real interface ID to configure.
	If string `json:"if"`

	// Ipaddr Interface's static IPv4 address. Required if `type` is set to `staticv4`.
	Ipaddr *string `json:"ipaddr,omitempty"`

	// Ipaddrv6 Interface's static IPv6 address. Required if `type6` is set to `staticv6`.
	Ipaddrv6 *string `json:"ipaddrv6,omitempty"`

	// Ipv6usev4iface Allow IPv6 to use IPv4 uplink connection.
	Ipv6usev4iface *bool `json:"ipv6usev4iface,omitempty"`

	// Media Speed/duplex setting for this interface. Options are dependent on physical interface capabilities.
	Media *string `json:"media,omitempty"`

	// Mss MSS for this interface.
	Mss *string `json:"mss,omitempty"`

	// Mtu MTU for this interface. If a VLAN interface, this value must be greater than parent.
	Mtu *int `json:"mtu,omitempty"`

	// Prefix6rd Set the 6RD IPv6 prefix assigned by the ISP. This parameter is only required when `type6` is set to `6rd`
	Prefix6rd *string `json:"prefix-6rd,omitempty"`

	// Prefix6rdV4plen Set the 6RD IPv4 prefix length. This is typically assigned by the ISP. This parameter is only available when `type6` is set to `6rd`.
	Prefix6rdV4plen *int `json:"prefix-6rd-v4plen,omitempty"`

	// Spoofmac Custom MAC address to assign to the interface.
	Spoofmac *string `json:"spoofmac,omitempty"`

	// Subnet Interface's static IPv4 address's subnet bitmask. Required if `type` is set to `staticv4`.
	Subnet *int `json:"subnet,omitempty"`

	// Subnetv6 Interface's static IPv6 address's subnet bitmask. Required if `type6` is set to `staticv6`.
	Subnetv6 *string `json:"subnetv6,omitempty"`

	// Track6Interface Set the Track6 dynamic IPv6 interface. This must be a dynamically configured IPv6 interface. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the physical interface id (e.g. igb0). This parameter is only required with `type6` is set to `track6`
	Track6Interface *string `json:"track6-interface,omitempty"`

	// Track6PrefixIdHex Set the IPv6 prefix ID. The value in this field is the (Delegated) IPv6 prefix ID. This determines the configurable network ID based on the dynamic IPv6 connection. The default value is 0. This parameter is only available when `type6` is set to `track6`
	Track6PrefixIdHex *int `json:"track6-prefix-id-hex,omitempty"`

	// Type IPv4 configuration type.
	Type *APIInterfaceCreateJSONBodyType `json:"type,omitempty"`

	// Type6 IPv6 configuration type.
	Type6 *APIInterfaceCreateJSONBodyType6 `json:"type6,omitempty"`
}

// APIInterfaceCreateJSONBodyDhcpcvpt defines parameters for APIInterfaceCreate.
type APIInterfaceCreateJSONBodyDhcpcvpt int

// APIInterfaceCreateJSONBodyType defines parameters for APIInterfaceCreate.
type APIInterfaceCreateJSONBodyType string

// APIInterfaceCreateJSONBodyType6 defines parameters for APIInterfaceCreate.
type APIInterfaceCreateJSONBodyType6 string

// APIInterfaceUpdateJSONBody defines parameters for APIInterfaceUpdate.
type APIInterfaceUpdateJSONBody struct {
	// AdvDhcpConfigAdvanced Enable the IPv4 DHCP advanced configuration options. This enables the DHCP options: `adv_dhcp_send_options`, `adv_dhcp_request_options`, `adv_dhcp_required_options`, `adv_dhcp_option_modifiers`. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpConfigAdvanced *bool `json:"adv_dhcp_config_advanced,omitempty"`

	// AdvDhcpConfigFileOverride Enable local DHCP configuration file override. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpConfigFileOverride *bool `json:"adv_dhcp_config_file_override,omitempty"`

	// AdvDhcpConfigFileOverrideFile Set the custom DHCP configuration file's absolute path. This file must exist beforehand. This parameter is only available when `type` is set to `dhcp` and  `adv_dhcp_config_file_override` is set to `true`.
	AdvDhcpConfigFileOverrideFile *string `json:"adv_dhcp_config_file_override_file,omitempty"`

	// AdvDhcpOptionModifiers Set a custom IPv4 option modifier. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
	AdvDhcpOptionModifiers *string `json:"adv_dhcp_option_modifiers,omitempty"`

	// AdvDhcpPtBackoffCutoff Set the IPv4 DHCP protocol backoff cutoff interval. Must be numeric value greater than 1. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtBackoffCutoff *int `json:"adv_dhcp_pt_backoff_cutoff,omitempty"`

	// AdvDhcpPtInitialInterval Set the IPv4 DHCP protocol initial interval. Must be numeric value greater than 1. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtInitialInterval *int `json:"adv_dhcp_pt_initial_interval,omitempty"`

	// AdvDhcpPtReboot Set the IPv4 DHCP protocol reboot interval. Must be numeric value greater than 1. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtReboot *int `json:"adv_dhcp_pt_reboot,omitempty"`

	// AdvDhcpPtRetry Set the IPv4 DHCP protocol retry interval. Must be numeric value greater than 1. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtRetry *int `json:"adv_dhcp_pt_retry,omitempty"`

	// AdvDhcpPtSelectTimeout Set the IPv4 DHCP protocol select timeout interval. Must be numeric value greater than 0. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtSelectTimeout *int `json:"adv_dhcp_pt_select_timeout,omitempty"`

	// AdvDhcpPtTimeout Set the IPv4 DHCP protocol timeout interval. Must be numeric value greater than 1. This parameter is only available when `type` is set to `dhcp`.
	AdvDhcpPtTimeout *int `json:"adv_dhcp_pt_timeout,omitempty"`

	// AdvDhcpRequestOptions Set a custom IPv4 request option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
	AdvDhcpRequestOptions *string `json:"adv_dhcp_request_options,omitempty"`

	// AdvDhcpRequiredOptions Set a custom IPv4 required option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
	AdvDhcpRequiredOptions *string `json:"adv_dhcp_required_options,omitempty"`

	// AdvDhcpSendOptions Set a custom IPv4 send option. This parameter is only available when `type` is set to `dhcp` and `adv_dhcp_config_advanced` is set to `true`.
	AdvDhcpSendOptions *string `json:"adv_dhcp_send_options,omitempty"`

	// AliasAddress Set the IPv4 DHCP address alias. The value in this field is used as a fixed alias IPv4 address by the DHCP  client. This parameter is only available when `type` is set to `dhcp`.
	AliasAddress *string `json:"alias-address,omitempty"`

	// AliasSubnet Set the IPv4 DHCP address aliases subnet. This parameter is only available when `type` is set to `dhcp`.
	AliasSubnet *int `json:"alias-subnet,omitempty"`

	// Apply Specify whether or not you would like this interface to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are creating multiple interfaces at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/interface/apply` endpoint. Otherwise, If you are only creating a single interface, you may set this true to apply it immediately.
	Apply *bool `json:"apply,omitempty"`

	// Blockbogons Block bogon networks from routing over this interface.
	Blockbogons *bool `json:"blockbogons,omitempty"`

	// Blockpriv Block RFC1918 traffic from routing over this interface.
	Blockpriv *bool `json:"blockpriv,omitempty"`

	// Descr Descriptive name for the interface.
	Descr *string `json:"descr,omitempty"`

	// Dhcpcvpt Set the DHCP VLAN priority. This parameter is only available when `type` is set to `dhcp` and `dhcpvlanenable` is set to `true`.
	Dhcpcvpt *APIInterfaceUpdateJSONBodyDhcpcvpt `json:"dhcpcvpt,omitempty"`

	// Dhcphostname Assign IPv4 DHCP hostname. This parameter is only available when `type` is set to `dhcp`.
	Dhcphostname *string `json:"dhcphostname,omitempty"`

	// Dhcprejectfrom Assign IPv4 DHCP rejected servers by IP. This parameter is only available when `type` is set to `dhcp`.
	Dhcprejectfrom *[]string `json:"dhcprejectfrom,omitempty"`

	// Dhcpvlanenable Enable DHCP VLAN prioritization. This parameter is only available when `type` is set to `dhcp`.
	Dhcpvlanenable *bool `json:"dhcpvlanenable,omitempty"`

	// Enable Enable or disable interface upon update.
	Enable *bool `json:"enable,omitempty"`

	// Gateway Name of upstream IPv4 gateway for this interface. This is only necessary on WAN/UPLINK interfaces. This parameter is only available when `type` is set to `staticv4`.
	Gateway *string `json:"gateway,omitempty"`

	// Gateway6rd Set the 6RD interface IPv4 gateway address. This parameter is only required when `type6` is set to `6rd`
	Gateway6rd *string `json:"gateway-6rd,omitempty"`

	// Gatewayv6 Name of upstream IPv6 gateway for this interface. This is only necessary for WAN/UPLINK interfaces. This parameter is only available when `type6` is set to `staticv6`.
	Gatewayv6 *string `json:"gatewayv6,omitempty"`

	// Id Interface ID to update. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the physical interface id (e.g. igb0).
	Id string `json:"id"`

	// If Real interface ID to assign this configuration to.
	If *string `json:"if,omitempty"`

	// Ipaddr Interface's static IPv4 address. Required if `type` is set to `staticv4`.
	Ipaddr *string `json:"ipaddr,omitempty"`

	// Ipaddrv6 Interface's static IPv6 address. Required if `type6` is set to `staticv6`.
	Ipaddrv6 *string `json:"ipaddrv6,omitempty"`

	// Ipv6usev4iface Allow IPv6 to use IPv4 uplink connection.
	Ipv6usev4iface *bool `json:"ipv6usev4iface,omitempty"`

	// Media Speed/duplex setting for this interface. Options are dependent on physical interface capabilities.
	Media *string `json:"media,omitempty"`

	// Mss MSS for this interface.
	Mss *string `json:"mss,omitempty"`

	// Mtu MTU for this interface. If a VLAN interface, this value must be greater than parent.
	Mtu *int `json:"mtu,omitempty"`

	// Prefix6rd Set the 6RD IPv6 prefix assigned by the ISP. This parameter is only required when `type6` is set to `6rd`
	Prefix6rd *string `json:"prefix-6rd,omitempty"`

	// Prefix6rdV4plen Set the 6RD IPv4 prefix length. This is typically assigned by the ISP. This parameter is only available when `type6` is set to `6rd`.
	Prefix6rdV4plen *int `json:"prefix-6rd-v4plen,omitempty"`

	// Spoofmac Custom MAC address to assign to the interface.
	Spoofmac *string `json:"spoofmac,omitempty"`

	// Subnet Interface's static IPv4 address's subnet bitmask. Required if `type` is set to `staticv4`.
	Subnet *int `json:"subnet,omitempty"`

	// Subnetv6 Interface's static IPv6 address's subnet bitmask. Required if `type6` is set to `staticv6`.
	Subnetv6 *string `json:"subnetv6,omitempty"`

	// Track6Interface Set the Track6 dynamic IPv6 interface. This must be a dynamically configured IPv6 interface. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the physical interface id (e.g. igb0). This parameter is only required with `type6` is set to `track6`
	Track6Interface *string `json:"track6-interface,omitempty"`

	// Track6PrefixIdHex Set the IPv6 prefix ID. The value in this field is the (Delegated) IPv6 prefix ID. This determines the configurable network ID based on the dynamic IPv6 connection. The default value is 0. This parameter is only available when `type6` is set to `track6`
	Track6PrefixIdHex *int `json:"track6-prefix-id-hex,omitempty"`

	// Type IPv4 configuration type. This parameter may be required in order to update specific parameters. For example, this parameter must be set to `staticv4` in order to update the `gateway` parameter.
	Type *APIInterfaceUpdateJSONBodyType `json:"type,omitempty"`

	// Type6 IPv6 configuration type. This parameter may be required in order to update specific parameters. For example, this parameter must be set to `staticv6` in order to update the `gatewayv6` parameter.
	Type6 *APIInterfaceUpdateJSONBodyType6 `json:"type6,omitempty"`
}

// APIInterfaceUpdateJSONBodyDhcpcvpt defines parameters for APIInterfaceUpdate.
type APIInterfaceUpdateJSONBodyDhcpcvpt int

// APIInterfaceUpdateJSONBodyType defines parameters for APIInterfaceUpdate.
type APIInterfaceUpdateJSONBodyType string

// APIInterfaceUpdateJSONBodyType6 defines parameters for APIInterfaceUpdate.
type APIInterfaceUpdateJSONBodyType6 string

// APIInterfaceApplyCreateJSONBody defines parameters for APIInterfaceApplyCreate.
type APIInterfaceApplyCreateJSONBody struct {
	// Async Apply pending interface changes in the background. This is sometimes necessary to prevent gateway timeouts when many interfaces are being applied. The status of the interface application can be polled with a GET request to the /api/v1/interface/apply endpoint.
	Async *bool `json:"async,omitempty"`
}

// APIInterfaceBridgeDeleteParams defines parameters for APIInterfaceBridgeDelete.
type APIInterfaceBridgeDeleteParams struct {
	// Id Bridge ID of bridge to delete. Bridges cannot be deleted while in use. _Note: This uses the `bridgeif` value (e.g. bridge0, bridge2, etc.) NOT the configuration array index like other objects._
	Id string `form:"id" json:"id"`
}

// APIInterfaceBridgeCreateJSONBody defines parameters for APIInterfaceBridgeCreate.
type APIInterfaceBridgeCreateJSONBody struct {
	// Descr Description for the new bridge.
	Descr *string `json:"descr,omitempty"`

	// Members Interface members to add to this bridge. This can be the physical interface ID (e.g. em0), the pfSense interface ID (e.g. wan, lan, optx) or the interface description (e.g. WAN, LAN).
	Members []string `json:"members"`
}

// APIInterfaceBridgeUpdateJSONBody defines parameters for APIInterfaceBridgeUpdate.
type APIInterfaceBridgeUpdateJSONBody struct {
	// Descr New description for the bridge.
	Descr *string `json:"descr,omitempty"`

	// Id Bridge ID of bridge to update. _Note: This uses the `bridgeif` value (e.g. bridge0, bridge2, etc.) NOT the configuration array index like other objects._
	Id string `json:"id"`

	// Members Interface members to assign to this bridge. This can be the physical interface ID (e.g. em0), the pfSense interface ID (e.g. wan, lan, optx) or the interface description (e.g. WAN, LAN). Any existing values will be overwritten.
	Members *[]string `json:"members,omitempty"`
}

// APIInterfaceGroupDeleteParams defines parameters for APIInterfaceGroupDelete.
type APIInterfaceGroupDeleteParams struct {
	// Id Group ID of group to delete.
	Id string `form:"id" json:"id"`
}

// APIInterfaceGroupCreateJSONBody defines parameters for APIInterfaceGroupCreate.
type APIInterfaceGroupCreateJSONBody struct {
	// Descr Description for the new interface gropup.
	Descr *string `json:"descr,omitempty"`

	// Ifname Name of the new interface group.
	Ifname string `json:"ifname"`

	// Members Interface members to add to this group. This can be the physical interface ID (e.g. em0), the pfSense interface ID (e.g. wan, lan, optx) or the interface description (e.g. WAN, LAN).
	Members *[]string `json:"members,omitempty"`
}

// APIInterfaceGroupUpdateJSONBody defines parameters for APIInterfaceGroupUpdate.
type APIInterfaceGroupUpdateJSONBody struct {
	// Descr New description for the interface group.
	Descr *string `json:"descr,omitempty"`

	// Id Group ID of interface group to update.
	Id string `json:"id"`

	// Members Interface members to assign to this group. This can be the physical interface ID (e.g. em0), the pfSense interface ID (e.g. wan, lan, optx) or the interface description (e.g. WAN, LAN). Any existing values will be overwritten.
	Members *[]string `json:"members,omitempty"`
}

// APIInterfaceVLANDeleteParams defines parameters for APIInterfaceVLANDelete.
type APIInterfaceVLANDeleteParams struct {
	// Id ID associated with the VLAN to Delete. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`
}

// APIInterfaceVLANCreateJSONBody defines parameters for APIInterfaceVLANCreate.
type APIInterfaceVLANCreateJSONBody struct {
	// Descr Description of the new VLAN interface.
	Descr *string `json:"descr,omitempty"`

	// If Parent interface to add the new VLAN to.
	If string `json:"if"`

	// Pcp 802.1q VLAN priority.
	Pcp *int `json:"pcp,omitempty"`

	// Tag VLAN tag to add to the parent interface.
	Tag int `json:"tag"`
}

// APIInterfaceVLANUpdateJSONBody defines parameters for APIInterfaceVLANUpdate.
type APIInterfaceVLANUpdateJSONBody struct {
	// Descr Description of the new VLAN interface.
	Descr *string `json:"descr,omitempty"`

	// Id ID associated with the VLAN to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// If Parent interface to change the VLAN to.
	If *string `json:"if,omitempty"`

	// Pcp 802.1q VLAN priority.
	Pcp *int `json:"pcp,omitempty"`

	// Tag VLAN tag to change on the parent interface.
	Tag *int `json:"tag,omitempty"`
}

// APIRoutingGatewayDeleteParams defines parameters for APIRoutingGatewayDelete.
type APIRoutingGatewayDeleteParams struct {
	// Id ID of the gateway to delete. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`
}

// APIRoutingGatewayCreateJSONBody defines parameters for APIRoutingGatewayCreate.
type APIRoutingGatewayCreateJSONBody struct {
	// ActionDisable Disable any action taken on gateway events for this gateway. This will consider the gateway as always up.
	ActionDisable *bool `json:"action_disable,omitempty"`

	// AlertInterval Time interval (in milliseconds) which alert conditions will be checked. This value must be greater than or equal to the `interval` value.
	AlertInterval *int `json:"alert_interval,omitempty"`

	// Apply Specify whether or not you would like this gateway to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are creating multiple gateways at once it is best to set this to false and apply the changes afterwards using the `/api/v1/routing/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// DataPayload Data payload to send in ICMP packets sent to the gateway monitor IP.
	DataPayload *int `json:"data_payload,omitempty"`

	// Descr Description for this gateway.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this gateway.
	Disabled *bool `json:"disabled,omitempty"`

	// ForceDown Force this gateway to always be considered down.
	ForceDown *bool `json:"force_down,omitempty"`

	// Gateway IP address of the gateway. This value must be a valid IPv4 address if  `ipprotocol` is set to `inet`, or a valid IPv6  address if `ipprotocol` is set to `inet6`.
	Gateway string `json:"gateway"`

	// Interface Interface the gateway will apply to. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `json:"interface"`

	// Interval How often (in milliseconds) gateway monitor ICMP probes will be sent.
	Interval *int `json:"interval,omitempty"`

	// Ipprotocol IP protocol this gateway will apply to.
	Ipprotocol APIRoutingGatewayCreateJSONBodyIpprotocol `json:"ipprotocol"`

	// Latencyhigh High threshold (in milliseconds) for latency. Any packet that exceeds this threshold will trigger a major latency gateway event. This value must be greater than the `latencylow` value.
	Latencyhigh *int `json:"latencyhigh,omitempty"`

	// Latencylow Low threshold (in milliseconds) for latency. Any packet that exceeds this threshold will trigger a minor latency gateway event.
	Latencylow *int `json:"latencylow,omitempty"`

	// LossInterval How long (in milliseconds) the gateway monitor will wait for response packets before considering the packet lost. This value must be greater than or equal to the `latencyhigh` value.
	LossInterval *int `json:"loss_interval,omitempty"`

	// Losshigh High threshold (in %) for packet loss. If total packet loss exceeds this percentage, a major packet loss gateway event will be triggered. This value must be greater than the `losslow` value.
	Losshigh *int `json:"losshigh,omitempty"`

	// Losslow Low threshold (in %) for packet loss. If total packet loss exceeds this percentage, a minor packet loss gateway event will be triggered.
	Losslow *int `json:"losslow,omitempty"`

	// Monitor IP address used to monitor this gateway. This is only necessary if the `gateway` IP does not accept ICMP probes. Defaults to the `gateway` value.
	Monitor *string `json:"monitor,omitempty"`

	// MonitorDisable Disable gateway monitoring for this gateway.
	MonitorDisable *bool `json:"monitor_disable,omitempty"`

	// Name Descriptive name for this gateway. This name must be unique, and can only contain alphanumeric characters and underscores.
	Name string `json:"name"`

	// TimePeriod Time period (in milliseconds) for gateway monitor metrics to be averaged. This value must be greater than  twice the `interval` value plus the `loss_interval` value.
	TimePeriod *int `json:"time_period,omitempty"`

	// Weight Gateway's weight when utilizing gateway load balancing within a gateway group.
	Weight *int `json:"weight,omitempty"`
}

// APIRoutingGatewayCreateJSONBodyIpprotocol defines parameters for APIRoutingGatewayCreate.
type APIRoutingGatewayCreateJSONBodyIpprotocol string

// APIRoutingGatewayUpdateJSONBody defines parameters for APIRoutingGatewayUpdate.
type APIRoutingGatewayUpdateJSONBody struct {
	// ActionDisable Disable any action taken on gateway events for this gateway. This will consider the gateway as always up.
	ActionDisable *bool `json:"action_disable,omitempty"`

	// AlertInterval Time interval (in milliseconds) which alert conditions will be checked. This value must be greater than or equal to the `interval` value.
	AlertInterval *int `json:"alert_interval,omitempty"`

	// Apply Specify whether or not you would like this gateway to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are creating multiple gateways at once it is best to set this to false and apply the changes afterwards using the `/api/v1/routing/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// DataPayload Data payload to send in ICMP packets sent to the gateway monitor IP.
	DataPayload *int `json:"data_payload,omitempty"`

	// Descr Description for this gateway.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this gateway.
	Disabled *bool `json:"disabled,omitempty"`

	// ForceDown Force this gateway to always be considered down.
	ForceDown *bool `json:"force_down,omitempty"`

	// Gateway IP address of the gateway. This value must be a valid IPv4 address if  `ipprotocol` is set to `inet`, or a valid IPv6  address if `ipprotocol` is set to `inet6`.
	Gateway *string `json:"gateway,omitempty"`

	// Id ID of the gateway to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// Interface Interface the gateway will apply to. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface *string `json:"interface,omitempty"`

	// Interval How often (in milliseconds) gateway monitor ICMP probes will be sent.
	Interval *int `json:"interval,omitempty"`

	// Ipprotocol IP protocol this gateway will apply to.
	Ipprotocol *APIRoutingGatewayUpdateJSONBodyIpprotocol `json:"ipprotocol,omitempty"`

	// Latencyhigh High threshold (in milliseconds) for latency. Any packet that exceeds this threshold will trigger a major latency gateway event. This value must be greater than the `latencylow` value.
	Latencyhigh *int `json:"latencyhigh,omitempty"`

	// Latencylow Low threshold (in milliseconds) for latency. Any packet that exceeds this threshold will trigger a minor latency gateway event.
	Latencylow *int `json:"latencylow,omitempty"`

	// LossInterval How long (in milliseconds) the gateway monitor will wait for response packets before considering the packet lost. This value must be greater than or equal to the `latencyhigh` value.
	LossInterval *int `json:"loss_interval,omitempty"`

	// Losshigh High threshold (in %) for packet loss. If total packet loss exceeds this percentage, a major packet loss gateway event will be triggered. This value must be greater than the `losslow` value.
	Losshigh *int `json:"losshigh,omitempty"`

	// Losslow Low threshold (in %) for packet loss. If total packet loss exceeds this percentage, a minor packet loss gateway event will be triggered.
	Losslow *int `json:"losslow,omitempty"`

	// Monitor IP address used to monitor this gateway. This is only necessary if the `gateway` IP does not accept ICMP probes. Defaults to the `gateway` value.
	Monitor *string `json:"monitor,omitempty"`

	// MonitorDisable Disable gateway monitoring for this gateway.
	MonitorDisable *bool `json:"monitor_disable,omitempty"`

	// Name Descriptive name for this gateway. This name must be unique, and can only contain alphanumeric characters and underscores.
	Name *string `json:"name,omitempty"`

	// TimePeriod Time period (in milliseconds) for gateway monitor metrics to be averaged. This value must be greater than  twice the `interval` value plus the `loss_interval` value.
	TimePeriod *int `json:"time_period,omitempty"`

	// Weight Gateway's weight when utilizing gateway load balancing within a gateway group.
	Weight *int `json:"weight,omitempty"`
}

// APIRoutingGatewayUpdateJSONBodyIpprotocol defines parameters for APIRoutingGatewayUpdate.
type APIRoutingGatewayUpdateJSONBodyIpprotocol string

// APIRoutingGatewayDefaultUpdateJSONBody defines parameters for APIRoutingGatewayDefaultUpdate.
type APIRoutingGatewayDefaultUpdateJSONBody struct {
	// Apply Specify whether or not you would like this change to be applied immediately, or simply written to the configuration to be applied later. If set to `false` you must apply the changes afterwards using the `/api/v1/routing/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Defaultgw4 Set the IPv4 default gateway. This must be an existing IPv4 gateway name, `automatic` for automatic gateway selection, or `none` for no default gateway selection for IPv4.
	Defaultgw4 *string `json:"defaultgw4,omitempty"`

	// Defaultgw6 Set the IPv6 default gateway. This must be an existing IPv6 gateway name, `automatic` for automatic gateway selection, or `none` for no default gateway selection for IPv6.
	Defaultgw6 *string `json:"defaultgw6,omitempty"`
}

// APIRoutingStaticRouteDeleteParams defines parameters for APIRoutingStaticRouteDelete.
type APIRoutingStaticRouteDeleteParams struct {
	// Id ID of the static route to delete. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`
}

// APIRoutingStaticRouteCreateJSONBody defines parameters for APIRoutingStaticRouteCreate.
type APIRoutingStaticRouteCreateJSONBody struct {
	// Apply Specify whether or not you would like this route to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are creating multiple routes at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/routing/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description for this route.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this route.
	Disabled *bool `json:"disabled,omitempty"`

	// Gateway Name of the gateway traffic matching this route will use.
	Gateway string `json:"gateway"`

	// Network IPv4 CIDR, IPv6 CIDR or network alias this route will apply to.
	Network string `json:"network"`
}

// APIRoutingStaticRouteUpdateJSONBody defines parameters for APIRoutingStaticRouteUpdate.
type APIRoutingStaticRouteUpdateJSONBody struct {
	// Apply Specify whether or not you would like this route to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are creating multiple routes at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/routing/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description for this route.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this route.
	Disabled *bool `json:"disabled,omitempty"`

	// Gateway Name of the gateway traffic matching this route will use.
	Gateway *string `json:"gateway,omitempty"`

	// Id ID of the static route to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// Network IPv4 CIDR, IPv6 CIDR or network alias this route will apply to.
	Network *string `json:"network,omitempty"`
}

// APIServicesDHCPdUpdateJSONBody defines parameters for APIServicesDHCPdUpdate.
type APIServicesDHCPdUpdateJSONBody struct {
	// Defaultleasetime Default DHCP lease time. This must be a value of `60` or greater and must be less than `maxleasetime`. This field can be unset to the system default by passing in an empty string.
	Defaultleasetime *APIServicesDHCPdUpdateJSONBody_Defaultleasetime `json:"defaultleasetime,omitempty"`

	// Denyunknown Deny unknown MAC addresses. If true, you must specify MAC addresses in the `mac_allow` field or add a static DHCP entry to receive DHCP requests.
	Denyunknown *bool `json:"denyunknown,omitempty"`

	// Dnsserver DNS servers to hand out in DHCP leases.
	Dnsserver *[]string `json:"dnsserver,omitempty"`

	// Domain Domain name to include in DHCP leass. This must be a valid domain name or an empty string to assume the system default.
	Domain *string `json:"domain,omitempty"`

	// Domainsearchlist Search domains to include in DHCP leases. Each entry must be a valid domain name.
	Domainsearchlist *[]string `json:"domainsearchlist,omitempty"`

	// Enable Enable the DHCP server for this interface.
	Enable *bool `json:"enable,omitempty"`

	// Gateway Gateway to hand out in DHCP leases. This value must be a valid IPv4 address within the interface's subnet. This field can be unset to the system default by passing in an empty string.
	Gateway *string `json:"gateway,omitempty"`

	// Ignorebootp Ignore BOOTP requests.
	Ignorebootp *bool `json:"ignorebootp,omitempty"`

	// Interface Interface of DHCP server configuration to update. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0). This interface must host a static IPv4 subnet that has more than one available within the subnet.
	Interface string `json:"interface"`

	// MacAllow MAC addresses allowed to register DHCP leases.
	MacAllow *[]string `json:"mac_allow,omitempty"`

	// MacDeny MAC addresses denied from registering DHCP leases.
	MacDeny *[]string `json:"mac_deny,omitempty"`

	// Maxleasetime Maximum DHCP lease time. This must be a value of `60` or greater and must be greater than `defaultleasetime`. This field can be unset to the system default by passing in an empty string.
	Maxleasetime *APIServicesDHCPdUpdateJSONBody_Maxleasetime `json:"maxleasetime,omitempty"`

	// Numberoptions Set DHCP options. This must be an array of option objects. See documentation for the /api/v1/services/dhcpd/options endpoint to object fields. To unset DHCP options, pass in an empty array.
	Numberoptions *struct {
		Number *int                                                `json:"number,omitempty"`
		Type   *string                                             `json:"type,omitempty"`
		Value  *APIServicesDHCPdUpdateJSONBody_Numberoptions_Value `json:"value,omitempty"`
	} `json:"numberoptions,omitempty"`

	// RangeFrom DHCP pool's starting IPv4 address. This must be an available address within the interface's subnet and be less than the `range_to` value. This field is required if no `range_from` value has been set previously.
	RangeFrom *string `json:"range_from,omitempty"`

	// RangeTo DHCP pool's ending IPv4 address. This must be an available address within the interface's subnet and be greater than the `range_from` value. This field is required if no `range_to` has been set previously.
	RangeTo *string `json:"range_to,omitempty"`

	// Staticarp Create a static ARP entry for DHCP leases on this interface.
	Staticarp *bool `json:"staticarp,omitempty"`
}

// APIServicesDHCPdUpdateJSONBodyDefaultleasetime0 defines parameters for APIServicesDHCPdUpdate.
type APIServicesDHCPdUpdateJSONBodyDefaultleasetime0 = string

// APIServicesDHCPdUpdateJSONBodyDefaultleasetime1 defines parameters for APIServicesDHCPdUpdate.
type APIServicesDHCPdUpdateJSONBodyDefaultleasetime1 = int

// APIServicesDHCPdUpdateJSONBody_Defaultleasetime defines parameters for APIServicesDHCPdUpdate.
type APIServicesDHCPdUpdateJSONBody_Defaultleasetime struct {
	union json.RawMessage
}

// APIServicesDHCPdUpdateJSONBodyMaxleasetime0 defines parameters for APIServicesDHCPdUpdate.
type APIServicesDHCPdUpdateJSONBodyMaxleasetime0 = string

// APIServicesDHCPdUpdateJSONBodyMaxleasetime1 defines parameters for APIServicesDHCPdUpdate.
type APIServicesDHCPdUpdateJSONBodyMaxleasetime1 = int

// APIServicesDHCPdUpdateJSONBody_Maxleasetime defines parameters for APIServicesDHCPdUpdate.
type APIServicesDHCPdUpdateJSONBody_Maxleasetime struct {
	union json.RawMessage
}

// APIServicesDHCPdUpdateJSONBodyNumberoptionsValue0 defines parameters for APIServicesDHCPdUpdate.
type APIServicesDHCPdUpdateJSONBodyNumberoptionsValue0 = string

// APIServicesDHCPdUpdateJSONBodyNumberoptionsValue1 defines parameters for APIServicesDHCPdUpdate.
type APIServicesDHCPdUpdateJSONBodyNumberoptionsValue1 = int

// APIServicesDHCPdUpdateJSONBodyNumberoptionsValue2 defines parameters for APIServicesDHCPdUpdate.
type APIServicesDHCPdUpdateJSONBodyNumberoptionsValue2 = bool

// APIServicesDHCPdUpdateJSONBody_Numberoptions_Value defines parameters for APIServicesDHCPdUpdate.
type APIServicesDHCPdUpdateJSONBody_Numberoptions_Value struct {
	union json.RawMessage
}

// APIServicesDHCPdOptionsCreateJSONBody defines parameters for APIServicesDHCPdOptionsCreate.
type APIServicesDHCPdOptionsCreateJSONBody struct {
	// Interface Interface to create the DHCP option for. You may specify either the interface's descriptive name, the pfSense ID (wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `json:"interface"`

	// Number DHCP option number to set. This must be a value between 1 and 254.
	Number int `json:"number"`

	// Type DHCP option type.
	Type APIServicesDHCPdOptionsCreateJSONBodyType `json:"type"`

	// Value DHCP option's value. If `type` is set to `text`, this field must be string that does not contain quotations marks. If `type` is set to `string`, this field must be string enclosed in quotes or is a hexadecimal value. If `type` is set to `boolean`, this value must be `true` or `false` as a boolean OR `true`, `false`, `on` or `off` as a string. If `type` is set to `unsigned integer 8`, this field must be an integer between `1` and `255`. If `type` is set to `unsigned integer 16`, this field must be an integer between `1` and `65535`. If `type` is set to `unsigned integer 32`, this field must be an integer between `1` and `4294967295`. If `type` is set to `signed integer 8`, this field must be an integer between `-128` and `127`. If `type` is set to `signed integer 16`, this field must be an integer between `-32768` and `32767`. If `type` is set to `signed integer 32`, this field must be an integer between `-2147483648` and `2147483647`. If `type` is set to `ip-address`, this field must be a string containing a valid IPv4 address or hostname.
	Value APIServicesDHCPdOptionsCreateJSONBody_Value `json:"value"`
}

// APIServicesDHCPdOptionsCreateJSONBodyType defines parameters for APIServicesDHCPdOptionsCreate.
type APIServicesDHCPdOptionsCreateJSONBodyType string

// APIServicesDHCPdOptionsCreateJSONBodyValue0 defines parameters for APIServicesDHCPdOptionsCreate.
type APIServicesDHCPdOptionsCreateJSONBodyValue0 = string

// APIServicesDHCPdOptionsCreateJSONBodyValue1 defines parameters for APIServicesDHCPdOptionsCreate.
type APIServicesDHCPdOptionsCreateJSONBodyValue1 = int

// APIServicesDHCPdOptionsCreateJSONBodyValue2 defines parameters for APIServicesDHCPdOptionsCreate.
type APIServicesDHCPdOptionsCreateJSONBodyValue2 = bool

// APIServicesDHCPdOptionsCreateJSONBody_Value defines parameters for APIServicesDHCPdOptionsCreate.
type APIServicesDHCPdOptionsCreateJSONBody_Value struct {
	union json.RawMessage
}

// APIServicesDHCPdStaticMappingDeleteParams defines parameters for APIServicesDHCPdStaticMappingDelete.
type APIServicesDHCPdStaticMappingDeleteParams struct {
	// Id ID of the static mapping to delete. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`

	// Interface Interface of the static mapping to delete. You may specify either the interface's descriptive name, the pfSense interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `form:"interface" json:"interface"`
}

// APIServicesDHCPdStaticMappingReadParams defines parameters for APIServicesDHCPdStaticMappingRead.
type APIServicesDHCPdStaticMappingReadParams struct {
	// Interface Interface to read static mappings from. You may specify either the interface's descriptive name, the pfSense interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `form:"interface" json:"interface"`
}

// APIServicesDHCPdStaticMappingCreateJSONBody defines parameters for APIServicesDHCPdStaticMappingCreate.
type APIServicesDHCPdStaticMappingCreateJSONBody struct {
	// ArpTableStaticEntry Create a static ARP entry for this static mapping.
	ArpTableStaticEntry *bool `json:"arp_table_static_entry,omitempty"`

	// Cid Set a client identifier.
	Cid *string `json:"cid,omitempty"`

	// Descr Description for this mapping.
	Descr *string `json:"descr,omitempty"`

	// Dnsserver DNS servers to assign this client. Each value must be a valid IPv4 address.
	Dnsserver *[]string `json:"dnsserver,omitempty"`

	// Domain Domain for this host.
	Domain *string `json:"domain,omitempty"`

	// Domainsearchlist Search domains to assign to this host. Each value must be a valid domain name.
	Domainsearchlist *[]string `json:"domainsearchlist,omitempty"`

	// Gateway Gateway to assign this host. This value must be a valid IPv4 address within the interface's subnet.
	Gateway *string `json:"gateway,omitempty"`

	// Hostname Hostname for this host.
	Hostname *string `json:"hostname,omitempty"`

	// Interface Interface to assign this static mapping to. You may specify either the interface's descriptive name, the pfSense interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `json:"interface"`

	// Ipaddr IPv4 address the MAC address will be assigned.
	Ipaddr string `json:"ipaddr"`

	// Mac MAC address of the host this mapping will apply to.
	Mac string `json:"mac"`
}

// APIServicesDHCPdStaticMappingUpdateJSONBody defines parameters for APIServicesDHCPdStaticMappingUpdate.
type APIServicesDHCPdStaticMappingUpdateJSONBody struct {
	// ArpTableStaticEntry Create a static ARP entry for this static mapping.
	ArpTableStaticEntry *bool `json:"arp_table_static_entry,omitempty"`

	// Cid Set a client identifier.
	Cid *string `json:"cid,omitempty"`

	// Descr Description for this mapping.
	Descr *string `json:"descr,omitempty"`

	// Dnsserver DNS servers to assign this client. Each value must be a valid IPv4 address.
	Dnsserver *[]string `json:"dnsserver,omitempty"`

	// Domain Domain for this host.
	Domain *string `json:"domain,omitempty"`

	// Domainsearchlist Search domains to assign to this host. Each value must be a valid domain name.
	Domainsearchlist *[]string `json:"domainsearchlist,omitempty"`

	// Gateway Gateway to assign this host. This value must be a valid IPv4 address within the interface's subnet. You  may pass in an empty string to revert to the default gateway.
	Gateway *string `json:"gateway,omitempty"`

	// Hostname Hostname for this host.
	Hostname *string `json:"hostname,omitempty"`

	// Id ID of the static mapping to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// Interface Interface of the static mapping to update. You may specify either the interface's descriptive name, the pfSense interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `json:"interface"`

	// Ipaddr IPv4 address the MAC address will be assigned.
	Ipaddr *string `json:"ipaddr,omitempty"`

	// Mac MAC address of the host this mapping will apply to.
	Mac *string `json:"mac,omitempty"`
}

// APIServicesDnsmasqHostOverrideDeleteParams defines parameters for APIServicesDnsmasqHostOverrideDelete.
type APIServicesDnsmasqHostOverrideDeleteParams struct {
	// Id ID of the host override to delete. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`

	// Apply Specify whether or not you would like this host override to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are modifying multiple host overrides at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/services/dnsmasq/apply` endpoint.
	Apply *bool `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIServicesDnsmasqHostOverrideCreateJSONBody defines parameters for APIServicesDnsmasqHostOverrideCreate.
type APIServicesDnsmasqHostOverrideCreateJSONBody struct {
	// Aliases Host override aliases to associate with this host override. For more information on alias object fields, see documentation for /api/v1/services/dnsmasq/host_override/alias.
	Aliases *[]map[string]interface{} `json:"aliases,omitempty"`

	// Apply Specify whether or not you would like this host override to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are modifying multiple host overrides at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/services/dnsmasq/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description of the host override.
	Descr *string `json:"descr,omitempty"`

	// Domain Domain of the host override.
	Domain string `json:"domain"`

	// Host Hostname of the host override.
	Host string `json:"host"`

	// Ip IPv4 or IPv6 of the host override.
	Ip string `json:"ip"`
}

// APIServicesDnsmasqHostOverrideUpdateJSONBody defines parameters for APIServicesDnsmasqHostOverrideUpdate.
type APIServicesDnsmasqHostOverrideUpdateJSONBody struct {
	// Aliases Host override aliases to associate with this host override. For more information on alias object fields, see documentation for /api/v1/services/dnsmasq/host_override/alias. Existing entries will be overwritten.
	Aliases *[]map[string]interface{} `json:"aliases,omitempty"`

	// Apply Specify whether or not you would like this host override to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are modifying multiple host overrides at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/services/dnsmasq/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description of the host override.
	Descr *string `json:"descr,omitempty"`

	// Domain Domain of the host override.
	Domain *string `json:"domain,omitempty"`

	// Host Hostname of the host override.
	Host *string `json:"host,omitempty"`

	// Id ID of the host override to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// Ip IPv4 or IPv6 of the host override.
	Ip *string `json:"ip,omitempty"`
}

// APIServicesDnsmasqHostOverrideAliasCreateJSONBody defines parameters for APIServicesDnsmasqHostOverrideAliasCreate.
type APIServicesDnsmasqHostOverrideAliasCreateJSONBody struct {
	// Apply Specify whether or not you would like this host override alias to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are creating multiple host override aliases at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/services/dnsmasq/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Description Description for the alias.
	Description *string `json:"description,omitempty"`

	// Domain Domain of the alias
	Domain string `json:"domain"`

	// Host Hostname of the alias.
	Host string `json:"host"`

	// Id ID of the host override to apply this alias to. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`
}

// APIServicesIPsecApplyCreateJSONBody defines parameters for APIServicesIPsecApplyCreate.
type APIServicesIPsecApplyCreateJSONBody struct {
	// Initiate Initiate all tunnels (phase 1 and 2) with the newly applied configuration. This field is only available on pfSense 2.6+ and pfSense Plus 22.05+.
	Initiate *bool `json:"initiate,omitempty"`
}

// APIServicesIPsecPhase1DeleteParams defines parameters for APIServicesIPsecPhase1Delete.
type APIServicesIPsecPhase1DeleteParams struct {
	// Ikeid IKE ID of the phase 1 entry to delete.
	Ikeid string `form:"ikeid" json:"ikeid"`
}

// APIServicesIPsecPhase1CreateJSONBody defines parameters for APIServicesIPsecPhase1Create.
type APIServicesIPsecPhase1CreateJSONBody struct {
	// Apply Apply the IPsec configuration immediately after writing this configuration. If you are making multiple IPsec modifications, it is typically best to set this value to `false` and call the /api/v1/services/ipsec/apply endpoint once you are ready to apply the configuration.
	Apply *bool `json:"apply,omitempty"`

	// AuthenticationMethod Authentication method used for this IPsec phase 1 entry.
	AuthenticationMethod APIServicesIPsecPhase1CreateJSONBodyAuthenticationMethod `json:"authentication_method"`

	// Caref Certificate authority to use for authentication between peers. This field is required if `authentication_method` is set to `cert`. This value must be an existing certificate authority object's `refid`.
	Caref *string `json:"caref,omitempty"`

	// Certref Certificate to use for authentication between peers. This field is required if `authentication_method` is set to `cert`. This value must be an existing certificate object's `refid`.
	Certref *string `json:"certref,omitempty"`

	// Closeaction Option to to control the behavior when the remote peer unexpectedly closes a child SA (P2). Options for this field are set by pfSense itself. These options may vary based on your pfSense version.
	Closeaction *APIServicesIPsecPhase1CreateJSONBodyCloseaction `json:"closeaction,omitempty"`

	// Descr Description for this IPsec phase 1 entry.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this IPsec phase 1 entry.
	Disabled *bool `json:"disabled,omitempty"`

	// DpdDelay Delay between sending peer acknowledgement messages.
	DpdDelay *int `json:"dpd_delay,omitempty"`

	// DpdEnable Enable dead-peer detection for this IPsec phase 1 entry.
	DpdEnable *bool `json:"dpd_enable,omitempty"`

	// DpdMaxfail Number of consecutive failures allowed before disconnecting.
	DpdMaxfail *int `json:"dpd_maxfail,omitempty"`

	// Encryption Encryption options available to this IPsec phase 1 entry. This must be a list of encryption objects. For more information on encryption object fields, see documentation for the /api/v1/services/ipsec/phase1/encryption endpoint.
	Encryption []map[string]interface{} `json:"encryption"`

	// GwDuplicates Allow phase 1 entries with duplicate `remote-gateway` values.
	GwDuplicates *bool `json:"gw_duplicates,omitempty"`

	// Ikeport Port used by IKE. This value cannot match the value set in `nattport`.
	Ikeport *int `json:"ikeport,omitempty"`

	// Iketype IKE version this IPsec phase 1 entry will use.
	Iketype APIServicesIPsecPhase1CreateJSONBodyIketype `json:"iketype"`

	// Interface Interface to enable this IPsec phase1 entry on. You may specify either the interface's descriptive name, the pfSense interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface string `json:"interface"`

	// Lifetime Hard IKE SA life time, in seconds, after which the IKE SA will be expired. This value must be greater than `rekey_time` and `reauth_time`.
	Lifetime *int `json:"lifetime,omitempty"`

	// Mobike Enable the use of MOBIKE.
	Mobike *bool `json:"mobike,omitempty"`

	// Mode IKE mode to use for this IPsec phase 1 entry. This field is not available if `iketype` is set to `ikev2`.
	Mode *APIServicesIPsecPhase1CreateJSONBodyMode `json:"mode,omitempty"`

	// MyidData Identifier value for the local (my) side of the IPsec connection. This field is required unless `myid_type` is set to `myaddress`.
	MyidData *string `json:"myid_data,omitempty"`

	// MyidType Identifier for the local (my) side of the IPsec connection. Options for this field are set by pfSense itself. These options may vary based on your pfSense version.
	MyidType APIServicesIPsecPhase1CreateJSONBodyMyidType `json:"myid_type"`

	// Nattport Port used by NAT-T. This value cannot match the value set in `ikeport`.
	Nattport *int `json:"nattport,omitempty"`

	// Nattraversal Enables the use of NAT-T which can help with clients that are behind restrictive firewalls.
	Nattraversal *APIServicesIPsecPhase1CreateJSONBodyNattraversal `json:"nattraversal,omitempty"`

	// PeeridData Identifier value for the peer (remote) side of the IPsec connection. This field is required unless `peerid_type` is set to `peeraddress`.
	PeeridData *string `json:"peerid_data,omitempty"`

	// PeeridType Identifier for the peer (remote) side of the IPsec connection. Options for this field are set by pfSense itself. These options may vary based on your pfSense version.
	PeeridType APIServicesIPsecPhase1CreateJSONBodyPeeridType `json:"peerid_type"`

	// PreSharedKey Pre-shared key to use for authentication between peers. This field is required if `authentication_method` is set to `pre_shared_key`.
	PreSharedKey *string `json:"pre-shared-key,omitempty"`

	// PrfselectEnable Enable the use of pseudo-random function selection.
	PrfselectEnable *bool `json:"prfselect_enable,omitempty"`

	// Protocol IP protocol this IPsec phase 1 entry will use.
	Protocol APIServicesIPsecPhase1CreateJSONBodyProtocol `json:"protocol"`

	// RandTime Random value up to this amount will be subtracted from `rekey_time`/`reauth_time` to avoid simultaneous renegotiation. This value must be less than the `lifetime` value. If not specified, this field will default to 10% of the `lifetime` value.
	RandTime *int `json:"rand_time,omitempty"`

	// ReauthTime Time, in seconds, before an IKE SA is torn down and recreated from scratch, including authentication. This value must be less than the `lifetime` value. If not specified, this field will default to 90% of the `lifetime` value.
	ReauthTime *int `json:"reauth_time,omitempty"`

	// RekeyTime Time, in seconds, before an IKE SA establishes new keys. This value must be less than the `lifetime` value. If not specified, this field will default to 90% of the `lifetime` value.
	RekeyTime *int `json:"rekey_time,omitempty"`

	// RemoteGateway IP address or hostname of the remote IPsec gateway.
	RemoteGateway string `json:"remote-gateway"`

	// Splitconn Enable split connections between multiple IPsec phase 2 entries.
	Splitconn *bool `json:"splitconn,omitempty"`

	// Startaction Option to force specific initiation/responder behavior for child SA (P2) entries. Options for this field are set by pfSense itself. These options may vary based on your pfSense version. This field is not supported on pfSense 2.5.1 or pfSense 2.5.0.
	Startaction *APIServicesIPsecPhase1CreateJSONBodyStartaction `json:"startaction,omitempty"`
}

// APIServicesIPsecPhase1CreateJSONBodyAuthenticationMethod defines parameters for APIServicesIPsecPhase1Create.
type APIServicesIPsecPhase1CreateJSONBodyAuthenticationMethod string

// APIServicesIPsecPhase1CreateJSONBodyCloseaction defines parameters for APIServicesIPsecPhase1Create.
type APIServicesIPsecPhase1CreateJSONBodyCloseaction string

// APIServicesIPsecPhase1CreateJSONBodyIketype defines parameters for APIServicesIPsecPhase1Create.
type APIServicesIPsecPhase1CreateJSONBodyIketype string

// APIServicesIPsecPhase1CreateJSONBodyMode defines parameters for APIServicesIPsecPhase1Create.
type APIServicesIPsecPhase1CreateJSONBodyMode string

// APIServicesIPsecPhase1CreateJSONBodyMyidType defines parameters for APIServicesIPsecPhase1Create.
type APIServicesIPsecPhase1CreateJSONBodyMyidType string

// APIServicesIPsecPhase1CreateJSONBodyNattraversal defines parameters for APIServicesIPsecPhase1Create.
type APIServicesIPsecPhase1CreateJSONBodyNattraversal string

// APIServicesIPsecPhase1CreateJSONBodyPeeridType defines parameters for APIServicesIPsecPhase1Create.
type APIServicesIPsecPhase1CreateJSONBodyPeeridType string

// APIServicesIPsecPhase1CreateJSONBodyProtocol defines parameters for APIServicesIPsecPhase1Create.
type APIServicesIPsecPhase1CreateJSONBodyProtocol string

// APIServicesIPsecPhase1CreateJSONBodyStartaction defines parameters for APIServicesIPsecPhase1Create.
type APIServicesIPsecPhase1CreateJSONBodyStartaction string

// APIServicesIPsecPhase1UpdateJSONBody defines parameters for APIServicesIPsecPhase1Update.
type APIServicesIPsecPhase1UpdateJSONBody struct {
	// Apply Apply the IPsec configuration immediately after writing this configuration. If you are making multiple IPsec modifications, it is typically best to set this value to `false` and call the /api/v1/services/ipsec/apply endpoint once you are ready to apply the configuration.
	Apply *bool `json:"apply,omitempty"`

	// AuthenticationMethod Authentication method used for this IPsec phase 1 entry.
	AuthenticationMethod *APIServicesIPsecPhase1UpdateJSONBodyAuthenticationMethod `json:"authentication_method,omitempty"`

	// Caref Certificate authority to use for authentication between peers. This field is required if `authentication_method` is changed to `cert`. This value must be an existing certificate authority object's `refid`.
	Caref *string `json:"caref,omitempty"`

	// Certref Certificate to use for authentication between peers. This field is required if `authentication_method` is changed to `cert`. This value must be an existing certificate object's `refid`.
	Certref *string `json:"certref,omitempty"`

	// Closeaction Option to to control the behavior when the remote peer unexpectedly closes a child SA (P2). Options for this field are set by pfSense itself. These options may vary based on your pfSense version.
	Closeaction *APIServicesIPsecPhase1UpdateJSONBodyCloseaction `json:"closeaction,omitempty"`

	// Descr Description for this IPsec phase 1 entry.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this IPsec phase 1 entry.
	Disabled *bool `json:"disabled,omitempty"`

	// DpdDelay Delay between sending peer acknowledgement messages.
	DpdDelay *int `json:"dpd_delay,omitempty"`

	// DpdEnable Enable dead-peer detection for this IPsec phase 1 entry.
	DpdEnable *bool `json:"dpd_enable,omitempty"`

	// DpdMaxfail Number of consecutive failures allowed before disconnecting.
	DpdMaxfail *int `json:"dpd_maxfail,omitempty"`

	// Encryption Encryption options available to this IPsec phase 1 entry. This must be a list of encryption objects. For more information on encryption object fields, see documentation for the /api/v1/services/ipsec/phase1/encryption endpoint.
	Encryption *[]map[string]interface{} `json:"encryption,omitempty"`

	// GwDuplicates Allow phase 1 entries with duplicate `remote-gateway` values.
	GwDuplicates *bool `json:"gw_duplicates,omitempty"`

	// Ikeid IKE ID of the phase 1 entry to delete.
	Ikeid int `json:"ikeid"`

	// Ikeport Port used by IKE. This value cannot match the value set in `nattport`.
	Ikeport *int `json:"ikeport,omitempty"`

	// Iketype IKE version this IPsec phase 1 entry will use.
	Iketype *APIServicesIPsecPhase1UpdateJSONBodyIketype `json:"iketype,omitempty"`

	// Interface Interface to enable this IPsec phase1 entry on. You may specify either the interface's descriptive name, the pfSense interface ID (e.g. wan, lan, optx), or the real interface ID (e.g. igb0).
	Interface *string `json:"interface,omitempty"`

	// Lifetime Hard IKE SA life time, in seconds, after which the IKE SA will be expired. This value must be greater than `rekey_time` and `reauth_time`.
	Lifetime *int `json:"lifetime,omitempty"`

	// Mobike Enable the use of MOBIKE.
	Mobike *bool `json:"mobike,omitempty"`

	// Mode IKE mode to use for this IPsec phase 1 entry. This field is not available if `iketype` is set to `ikev2`.
	Mode *APIServicesIPsecPhase1UpdateJSONBodyMode `json:"mode,omitempty"`

	// MyidData Identifier value for the local (my) side of the IPsec connection.
	MyidData *string `json:"myid_data,omitempty"`

	// MyidType Identifier for the local (my) side of the IPsec connection. Options for this field are set by pfSense itself. These options may vary based on your pfSense version.
	MyidType *APIServicesIPsecPhase1UpdateJSONBodyMyidType `json:"myid_type,omitempty"`

	// Nattport Port used by NAT-T. This value cannot match the value set in `ikeport`.
	Nattport *int `json:"nattport,omitempty"`

	// Nattraversal Enables the use of NAT-T which can help with clients that are behind restrictive firewalls.
	Nattraversal *APIServicesIPsecPhase1UpdateJSONBodyNattraversal `json:"nattraversal,omitempty"`

	// PeeridData Identifier value for the peer (remote) side of the IPsec connection.
	PeeridData *string `json:"peerid_data,omitempty"`

	// PeeridType Identifier for the peer (remote) side of the IPsec connection. Options for this field are set by pfSense itself. These options may vary based on your pfSense version.
	PeeridType *APIServicesIPsecPhase1UpdateJSONBodyPeeridType `json:"peerid_type,omitempty"`

	// PreSharedKey Pre-shared key to use for authentication between peers. This field is required if `authentication_method` is set to `pre_shared_key`.
	PreSharedKey *string `json:"pre-shared-key,omitempty"`

	// PrfselectEnable Enable the use of pseudo-random function selection.
	PrfselectEnable *bool `json:"prfselect_enable,omitempty"`

	// Protocol IP protocol this IPsec phase 1 entry will use.
	Protocol *APIServicesIPsecPhase1UpdateJSONBodyProtocol `json:"protocol,omitempty"`

	// RandTime Random value up to this amount will be subtracted from `rekey_time`/`reauth_time` to avoid simultaneous renegotiation. This value must be less than the `lifetime` value.
	RandTime *int `json:"rand_time,omitempty"`

	// ReauthTime Time, in seconds, before an IKE SA is torn down and recreated from scratch, including authentication. This value must be less than the `lifetime` value.
	ReauthTime *int `json:"reauth_time,omitempty"`

	// RekeyTime Time, in seconds, before an IKE SA establishes new keys. This value must be less than the `lifetime` value.
	RekeyTime *int `json:"rekey_time,omitempty"`

	// RemoteGateway IP address or hostname of the remote IPsec gateway.
	RemoteGateway *string `json:"remote-gateway,omitempty"`

	// Splitconn Enable split connections between multiple IPsec phase 2 entries.
	Splitconn *bool `json:"splitconn,omitempty"`

	// Startaction Option to force specific initiation/responder behavior for child SA (P2) entries. Options for this field are set by pfSense itself. These options may vary based on your pfSense version. This field is not supported on pfSense 2.5.1 or pfSense 2.5.0.
	Startaction *APIServicesIPsecPhase1UpdateJSONBodyStartaction `json:"startaction,omitempty"`
}

// APIServicesIPsecPhase1UpdateJSONBodyAuthenticationMethod defines parameters for APIServicesIPsecPhase1Update.
type APIServicesIPsecPhase1UpdateJSONBodyAuthenticationMethod string

// APIServicesIPsecPhase1UpdateJSONBodyCloseaction defines parameters for APIServicesIPsecPhase1Update.
type APIServicesIPsecPhase1UpdateJSONBodyCloseaction string

// APIServicesIPsecPhase1UpdateJSONBodyIketype defines parameters for APIServicesIPsecPhase1Update.
type APIServicesIPsecPhase1UpdateJSONBodyIketype string

// APIServicesIPsecPhase1UpdateJSONBodyMode defines parameters for APIServicesIPsecPhase1Update.
type APIServicesIPsecPhase1UpdateJSONBodyMode string

// APIServicesIPsecPhase1UpdateJSONBodyMyidType defines parameters for APIServicesIPsecPhase1Update.
type APIServicesIPsecPhase1UpdateJSONBodyMyidType string

// APIServicesIPsecPhase1UpdateJSONBodyNattraversal defines parameters for APIServicesIPsecPhase1Update.
type APIServicesIPsecPhase1UpdateJSONBodyNattraversal string

// APIServicesIPsecPhase1UpdateJSONBodyPeeridType defines parameters for APIServicesIPsecPhase1Update.
type APIServicesIPsecPhase1UpdateJSONBodyPeeridType string

// APIServicesIPsecPhase1UpdateJSONBodyProtocol defines parameters for APIServicesIPsecPhase1Update.
type APIServicesIPsecPhase1UpdateJSONBodyProtocol string

// APIServicesIPsecPhase1UpdateJSONBodyStartaction defines parameters for APIServicesIPsecPhase1Update.
type APIServicesIPsecPhase1UpdateJSONBodyStartaction string

// APIServicesIPsecPhase1EncryptionCreateJSONBody defines parameters for APIServicesIPsecPhase1EncryptionCreate.
type APIServicesIPsecPhase1EncryptionCreateJSONBody struct {
	// Dhgroup Diffie-Hellman group to use. Options for this field are set by pfSense itself and may vary based on your version of pfSense.
	Dhgroup APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup `json:"dhgroup"`

	// EncryptionAlgorithm 'Encryption algorithm to use. Options for this field are set by pfSense itself and may vary based on your version of pfSense. Options are:
	// `{ "name": "aes","keylen": 128 }`, `{ "name": "aes","keylen": 192 }`, `{ "name": "aes","keylen": 256 }`, `{ "name": "aes128gcm","keylen": 64 }`, `{ "name": "aes128gcm","keylen": 96 }`, `{ "name": "aes128gcm","keylen": 128 }`, `{ "name": "aes192gcm","keylen": 64 }`, `{ "name": "aes192gcm","keylen": 96 }`, `{ "name": "aes192gcm","keylen": 128 }`, `{ "name": "aes256gcm","keylen": 64 }`, `{ "name": "aes256gcm","keylen": 96 }`, `{ "name": "aes256gcm","keylen": 128 }`, `{ "name": "blowfish","keylen": 128 }`, `{ "name": "blowfish","keylen": 192 }`, `{ "name": "blowfish","keylen": 256 }`, `{ "name": "3des" }`, `{ "name": "cast128" }`
	EncryptionAlgorithm map[string]interface{} `json:"encryption-algorithm"`

	// HashAlgorithm Hashing algorithm to use. Options for this field are set by pfSense itself and may vary based on your version of pfSense.
	HashAlgorithm APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithm `json:"hash-algorithm"`

	// Ikeid IKE ID of the existing IPsec phase 1 entry to add this encryption item to.
	Ikeid int `json:"ikeid"`

	// PrfAlgorithm PRF algorithm group to use. Options for this field are set by pfSense itself and may vary based on your version of pfSense. This field is required if the parent phase 1 entry has `prfselect_enable` enabled.
	PrfAlgorithm *APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithm `json:"prf_algorithm,omitempty"`
}

// APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup defines parameters for APIServicesIPsecPhase1EncryptionCreate.
type APIServicesIPsecPhase1EncryptionCreateJSONBodyDhgroup int

// APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithm defines parameters for APIServicesIPsecPhase1EncryptionCreate.
type APIServicesIPsecPhase1EncryptionCreateJSONBodyHashAlgorithm string

// APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithm defines parameters for APIServicesIPsecPhase1EncryptionCreate.
type APIServicesIPsecPhase1EncryptionCreateJSONBodyPrfAlgorithm string

// APIServicesIPsecPhase2DeleteParams defines parameters for APIServicesIPsecPhase2Delete.
type APIServicesIPsecPhase2DeleteParams struct {
	// Uniqid Unique ID of the phase 2 entry to delete.
	Uniqid string `form:"uniqid" json:"uniqid"`
}

// APIServicesIPsecPhase2CreateJSONBody defines parameters for APIServicesIPsecPhase2Create.
type APIServicesIPsecPhase2CreateJSONBody struct {
	// Apply Apply the IPsec configuration immediately after writing this configuration. If you are making multiple IPsec modifications, it is typically best to set this value to `false` and call the /api/v1/services/ipsec/apply endpoint once you are ready to apply the configuration.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description for this IPsec phase 2 entry.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this IPsec phase 2 entry.
	Disabled *bool `json:"disabled,omitempty"`

	// EncryptionAlgorithmOption Encryption algorithms available to this IPsec phase 2 entry. This must be a list of encryption objects. For more information on encryption object fields, see documentation for the /api/v1/services/ipsec/phase1/encryption endpoint's `encryption-algorithm` field.
	EncryptionAlgorithmOption *[]map[string]interface{} `json:"encryption-algorithm-option,omitempty"`

	// HashAlgorithmOption Hash algorithms supported by this IPsec phase 2 entry.
	HashAlgorithmOption []APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOption `json:"hash-algorithm-option"`

	// Ikeid IKE ID of the parent phase 1 entry to link this phase 2 entry to.
	Ikeid *int `json:"ikeid,omitempty"`

	// Keepalive Enable keep alive for this IPsec phase 2 entry.
	Keepalive *bool `json:"keepalive,omitempty"`

	// Lifetime Hard child SA life time, in seconds, after which the child SA will be expired. This value must be greater than `rekey_time`.
	Lifetime *int `json:"lifetime,omitempty"`

	// Localid Local network parameters. This field is not available if `mode` is set to `transport`.
	Localid *struct {
		// Address Address portion of local network. This must be a valid IPv4 or IPv6 address (depending on the specified `mode`).
		Address *string `json:"address,omitempty"`

		// Netbits Subnet bit count of the local network. This field is only available when `type` is set to `network`.
		Netbits *int `json:"netbits,omitempty"`

		// Type Local ID type. This sets the scope of the local network. Options are `address` for a single IP address, `network` for a subnet or an existing interface.
		Type *string `json:"type,omitempty"`
	} `json:"localid,omitempty"`

	// Mode IPsec phase2 tunnel mode to use.
	Mode APIServicesIPsecPhase2CreateJSONBodyMode `json:"mode"`

	// Natlocalid NAT/BINAT translation parameters. This field is not available if `mode` is set to `transport` or `vti`.
	Natlocalid *struct {
		// Address Address portion of NAT network. This must be a valid IPv4 or IPv6 address (depending on the specified `mode`).
		Address *string `json:"address,omitempty"`

		// Netbits Subnet bit count of the NAT network. This field is only available when `type` is set to `network`.
		Netbits *int `json:"netbits,omitempty"`

		// Type NAT ID type. This sets the scope of the NAT network. Options are `address` for a single IP address, `network` for a subnet or an existing interface.
		Type *string `json:"type,omitempty"`
	} `json:"natlocalid,omitempty"`

	// Pfsgroup PFS group this IPsec phase 2 entry will use.
	Pfsgroup APIServicesIPsecPhase2CreateJSONBodyPfsgroup `json:"pfsgroup"`

	// Pinghost IP address to send ICMP echo requests inside the tunnel.
	Pinghost *string `json:"pinghost,omitempty"`

	// Protocol IPsec phase 2 protocol to use.
	Protocol APIServicesIPsecPhase2CreateJSONBodyProtocol `json:"protocol"`

	// RandTime Random value up to this amount will be subtracted from `rekey_time` to avoid simultaneous renegotiation. This value must be less than the `lifetime` value. If not specified, this field will default to 10% of the `lifetime` value.
	RandTime *int `json:"rand_time,omitempty"`

	// RekeyTime Time, in seconds, before a child SA establishes new keys. This value must be less than the `lifetime` value. If not specified, this field will default to 90% of the `lifetime` value.
	RekeyTime *int `json:"rekey_time,omitempty"`

	// Remoteid Remote network parameters. This field is not available if `mode` is set to `transport`.
	Remoteid *struct {
		// Address Address portion of remote network. This must be a valid IPv4 or IPv6 address (depending on the specified `mode`).
		Address *string `json:"address,omitempty"`

		// Netbits Subnet bit count of the remote network. This field is only available when `type` is set to `network`.
		Netbits *int `json:"netbits,omitempty"`

		// Type Remote ID type. This sets the scope of the remote network. Options are `address` for a single IP address, or `network` for a subnet.
		Type *string `json:"type,omitempty"`
	} `json:"remoteid,omitempty"`
}

// APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOption defines parameters for APIServicesIPsecPhase2Create.
type APIServicesIPsecPhase2CreateJSONBodyHashAlgorithmOption string

// APIServicesIPsecPhase2CreateJSONBodyMode defines parameters for APIServicesIPsecPhase2Create.
type APIServicesIPsecPhase2CreateJSONBodyMode string

// APIServicesIPsecPhase2CreateJSONBodyPfsgroup defines parameters for APIServicesIPsecPhase2Create.
type APIServicesIPsecPhase2CreateJSONBodyPfsgroup int

// APIServicesIPsecPhase2CreateJSONBodyProtocol defines parameters for APIServicesIPsecPhase2Create.
type APIServicesIPsecPhase2CreateJSONBodyProtocol string

// APIServicesIPsecPhase2UpdateJSONBody defines parameters for APIServicesIPsecPhase2Update.
type APIServicesIPsecPhase2UpdateJSONBody struct {
	// Apply Apply the IPsec configuration immediately after writing this configuration. If you are making multiple IPsec modifications, it is typically best to set this value to `false` and call the /api/v1/services/ipsec/apply endpoint once you are ready to apply the configuration.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description for this IPsec phase 2 entry.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable this IPsec phase 2 entry.
	Disabled *bool `json:"disabled,omitempty"`

	// EncryptionAlgorithmOption Encryption algorithms available to this IPsec phase 2 entry. This must be a list of encryption objects. For more information on encryption object fields, see documentation for the /api/v1/services/ipsec/phase1/encryption endpoint's `encryption-algorithm` field.
	EncryptionAlgorithmOption *[]map[string]interface{} `json:"encryption-algorithm-option,omitempty"`

	// HashAlgorithmOption Hash algorithms supported by this IPsec phase 2 entry.
	HashAlgorithmOption *[]APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOption `json:"hash-algorithm-option,omitempty"`

	// Ikeid IKE ID of the parent phase 1 entry to link this phase 2 entry to.
	Ikeid *int `json:"ikeid,omitempty"`

	// Keepalive Enable keep alive for this IPsec phase 2 entry.
	Keepalive *bool `json:"keepalive,omitempty"`

	// Lifetime Hard child SA life time, in seconds, after which the child SA will be expired. This value must be greater than `rekey_time`.
	Lifetime *int `json:"lifetime,omitempty"`

	// Localid Local network parameters. This field is not available if `mode` is set to `transport`.
	Localid *struct {
		// Address Address portion of local network. This must be a valid IPv4 or IPv6 address (depending on the specified `mode`).
		Address *string `json:"address,omitempty"`

		// Netbits Subnet bit count of the local network. This field is only available when `type` is set to `network`.
		Netbits *int `json:"netbits,omitempty"`

		// Type Local ID type. This sets the scope of the local network. Options are `address` for a single IP address, `network` for a subnet or an existing interface.
		Type *string `json:"type,omitempty"`
	} `json:"localid,omitempty"`

	// Mode IPsec phase2 tunnel mode to use.
	Mode *APIServicesIPsecPhase2UpdateJSONBodyMode `json:"mode,omitempty"`

	// Natlocalid NAT/BINAT translation parameters. This field is not available if `mode` is set to `transport` or `vti`.
	Natlocalid *struct {
		// Address Address portion of NAT network. This must be a valid IPv4 or IPv6 address (depending on the specified `mode`).
		Address *string `json:"address,omitempty"`

		// Netbits Subnet bit count of the NAT network. This field is only available when `type` is set to `network`.
		Netbits *int `json:"netbits,omitempty"`

		// Type NAT ID type. This sets the scope of the NAT network. Options are `address` for a single IP address, `network` for a subnet or an existing interface.
		Type *string `json:"type,omitempty"`
	} `json:"natlocalid,omitempty"`

	// Pfsgroup PFS group this IPsec phase 2 entry will use.
	Pfsgroup *APIServicesIPsecPhase2UpdateJSONBodyPfsgroup `json:"pfsgroup,omitempty"`

	// Pinghost IP address to send ICMP echo requests inside the tunnel.
	Pinghost *string `json:"pinghost,omitempty"`

	// Protocol IPsec phase 2 protocol to use.
	Protocol *APIServicesIPsecPhase2UpdateJSONBodyProtocol `json:"protocol,omitempty"`

	// RandTime Random value up to this amount will be subtracted from `rekey_time` to avoid simultaneous renegotiation. This value must be less than the `lifetime` value. If not specified, this field will default to 10% of the `lifetime` value.
	RandTime *int `json:"rand_time,omitempty"`

	// RekeyTime Time, in seconds, before a child SA establishes new keys. This value must be less than the `lifetime` value. If not specified, this field will default to 90% of the `lifetime` value.
	RekeyTime *int `json:"rekey_time,omitempty"`

	// Remoteid Remote network parameters. This field is not available if `mode` is set to `transport`.
	Remoteid *struct {
		// Address Address portion of remote network. This must be a valid IPv4 or IPv6 address (depending on the specified `mode`).
		Address *string `json:"address,omitempty"`

		// Netbits Subnet bit count of the remote network. This field is only available when `type` is set to `network`.
		Netbits *int `json:"netbits,omitempty"`

		// Type Remote ID type. This sets the scope of the remote network. Options are `address` for a single IP address, or `network` for a subnet.
		Type *string `json:"type,omitempty"`
	} `json:"remoteid,omitempty"`

	// Uniqid Unique ID of the IPsec phase 2 entry to update.
	Uniqid string `json:"uniqid"`
}

// APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOption defines parameters for APIServicesIPsecPhase2Update.
type APIServicesIPsecPhase2UpdateJSONBodyHashAlgorithmOption string

// APIServicesIPsecPhase2UpdateJSONBodyMode defines parameters for APIServicesIPsecPhase2Update.
type APIServicesIPsecPhase2UpdateJSONBodyMode string

// APIServicesIPsecPhase2UpdateJSONBodyPfsgroup defines parameters for APIServicesIPsecPhase2Update.
type APIServicesIPsecPhase2UpdateJSONBodyPfsgroup int

// APIServicesIPsecPhase2UpdateJSONBodyProtocol defines parameters for APIServicesIPsecPhase2Update.
type APIServicesIPsecPhase2UpdateJSONBodyProtocol string

// APIServicesNTPdUpdateJSONBody defines parameters for APIServicesNTPdUpdate.
type APIServicesNTPdUpdateJSONBody struct {
	// Clockstats Enable logging of reference clock statistics.
	Clockstats *bool `json:"clockstats,omitempty"`

	// Interface Update the interfaces NTP will listen on. You may specify either the physical Interface ID, the pfSense Interface ID or the descriptive Interface name. To match any interface, you may pass in an empty array.
	Interface *[]string `json:"interface,omitempty"`

	// Leapsec Update the leap seconds configuration. This should be the contents of the leap seconds file received from the IERS.
	Leapsec *string `json:"leapsec,omitempty"`

	// Logpeer Enable logging of peer messages.
	Logpeer *bool `json:"logpeer,omitempty"`

	// Logsys Enable logging of system messages.
	Logsys *bool `json:"logsys,omitempty"`

	// Loopstats Enable logging of clock discipline statistics.
	Loopstats *bool `json:"loopstats,omitempty"`

	// Orphan Update the orphan mode value. This must be a value between `1` and `15`. Orphan mode allows the system clock to be used when no other clocks are available. The number here specifies the stratum reported during orphan mode and should normally be set to a number high enough to insure that any other servers available to clients are preferred over this server.
	Orphan *int `json:"orphan,omitempty"`

	// Peerstats Enable logging of NTP peer statistics.
	Peerstats *bool `json:"peerstats,omitempty"`

	// Statsgraph Enable RRD graphs of NTP metrics.
	Statsgraph *bool `json:"statsgraph,omitempty"`

	// TimeServers Update the time servers used by the system. Each object may use the parameters available in the /api/v1/services/ntpd/time_server endpoint. To revert to the default timeserver, you may pass in an  empty array. Existing values will be overwritten.
	TimeServers *[]map[string]interface{} `json:"time_servers,omitempty"`
}

// APIServicesNTPdTimeServerDeleteParams defines parameters for APIServicesNTPdTimeServerDelete.
type APIServicesNTPdTimeServerDeleteParams struct {
	// Timeserver IP or hostname of the NTP time server to delete. If more than one time server exists with this value, only the first match will be deleted. In the case that the last remaining time server was deleted, the default time server `pool.ntp.org` will be written.
	Timeserver string `form:"timeserver" json:"timeserver"`
}

// APIServicesNTPdTimeServerCreateJSONBody defines parameters for APIServicesNTPdTimeServerCreate.
type APIServicesNTPdTimeServerCreateJSONBody struct {
	// Ispool Specify whether or not this time server represents an NTP server pool or a single NTP server.
	Ispool *bool `json:"ispool,omitempty"`

	// Noselect Prevent this NTP server from being selected for time.
	Noselect *bool `json:"noselect,omitempty"`

	// Prefer Set this NTP time server as a preferred NTP time server. If `true`, this time server will take preference over other time servers.
	Prefer *bool `json:"prefer,omitempty"`

	// Timeserver IP or hostname of the NTP time server to add.
	Timeserver string `json:"timeserver"`
}

// APIServicesOpenVPNClientCreateJSONBody defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBody struct {
	// Caref Specify the unique reference ID of the certificate signing authority.
	Caref *string `json:"caref,omitempty"`

	// Certref The certificate used by the VPN instance to identify itself to peers. This certificate must contain appropriate properties marking it as a server certificate and not a user or client certificate.
	// Specify the unique reference ID of the certificate revocation list.
	Certref *string `json:"certref,omitempty"`

	// Compression Compression to be used with this VPN instance. This is only necessary for `allow_compression` set to `yes` or `asym`. Compression can potentially dangerous and insecure. Deprecated. Compress tunnel packets using the LZO algorithm.
	Compression *APIServicesOpenVPNClientCreateJSONBodyCompression `json:"compression,omitempty"`

	// CreateGw If you assign a virtual interface to this OpenVPN server, this setting controls which gateway types will be created.
	CreateGw *APIServicesOpenVPNClientCreateJSONBodyCreateGw `json:"create_gw,omitempty"`

	// Crlref This optional field is for the Certificate Revocation List (CRL) this tunnel will use to check the validity of peer certificates.
	// A CRL is a list of certificates signed by a CA which are no longer valid. This could be due to a certificate being compromised or lost, such as from a stolen laptop, spyware infection, etc.
	// Specify the unique reference ID of the certificate.
	Crlref *string `json:"crlref,omitempty"`

	// CustomOptions Custom options may be added in using the Custom option box separated by a semicolon (;) and the firewall will pass the custom directives to OpenVPN.
	CustomOptions *string `json:"custom_options,omitempty"`

	// DataCiphers These options define the cryptographic ciphers OpenVPN will use for this VPN. Enter comma sepereted data encryption algorithms (e.g. `AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305`). Data encryption algorithms will be truncated to 19.
	DataCiphers *string `json:"data_ciphers,omitempty"`

	// DataCiphersFallback Enter fallback data encryption algorithm.
	DataCiphersFallback *string `json:"data_ciphers_fallback,omitempty"`

	// Description Enter a description for this VPN instance, for reference.
	Description *string `json:"description,omitempty"`

	// DevMode OpenVPN can run in one of two device modes.
	DevMode *APIServicesOpenVPNClientCreateJSONBodyDevMode `json:"dev_mode,omitempty"`

	// Digest Selects the message digest algorithm OpenVPN uses for HMAC authentication of incoming packets. This is used for the data channel and if also for the control channel when the tunnel uses a TLS key. The GUI default of SHA256 is a good balance of security and speed.
	// When using AEAD ciphers such as AES-GCM, OpenVPN ignores this value for the data channel since AEAD ciphers already perform authentication. Even with an AEAD cipher, OpenVPN still uses this algorithm to authenticate the control channel when the tunnel uses a TLS key.
	Digest *APIServicesOpenVPNClientCreateJSONBodyDigest `json:"digest,omitempty"`

	// Disable Disable this override without removing it.
	Disable *bool `json:"disable,omitempty"`

	// Engine If available, this option controls which hardware cryptographic accelerator will be used by OpenVPN. When left unspecified, OpenVPN will choose automatically based on what is available in the operating system to accelerate ciphers OpenVPN wants to use.
	// Some hardware acceleration, such as AES-NI, happens automatically in OpenVPN via OpenSSL and cannot be enabled or disabled by this option.
	// Enter Hardware crypto. Options are `none` and any enabled hardware crypto.
	Engine *string `json:"engine,omitempty"`

	// ExitNotify Controls whether or not OpenVPN will send an explicit exit notification to connected UDP clients or peers when restarting or shutting down. This notification allows peers to immediately disconnect rather than wait for a timeout. This is only relevant to UDP modes as TCP natively supports closing connections.
	ExitNotify *APIServicesOpenVPNClientCreateJSONBodyExitNotify `json:"exit_notify,omitempty"`

	// InactiveSeconds The amount of time, in seconds, which a client can be inactive before OpenVPN disconnects it for inactivity. OpenVPN bases activity on the last incoming or outgoing data channel packet, not control channel packets.
	// `0` disables this feature.
	InactiveSeconds *int `json:"inactive_seconds,omitempty"`

	// Interface Selects the interface, VIP, or failover group that the OpenVPN instance will use when communicating with peers. This also controls which interface the traffic from the instance will exit. VIP can be provided as description, subnet or uniqid. Failover group can be provided as group name.
	// _Note: If you are using a failover group, the failover group must be configured to use the same_.
	Interface *string `json:"interface,omitempty"`

	// KeepaliveInterval Enter keepalive interval.
	KeepaliveInterval *int `json:"keepalive_interval,omitempty"`

	// KeepaliveTimeout Enter keepalive timeout.
	KeepaliveTimeout *int `json:"keepalive_timeout,omitempty"`

	// LocalPort For clients, the local port should be blank in nearly every case so that OpenVPN will use a randomized local port. This behavior is more secure, but some server configurations may require a specific source port.
	LocalPort *int `json:"local_port,omitempty"`

	// Mode The role for the client, which specifies how peers connect to a server instance. Changing this also affects which options the GUI displays on the rest of the page.
	Mode *APIServicesOpenVPNClientCreateJSONBodyMode `json:"mode,omitempty"`

	// NcpEnable Enable Data Encryption Negotiation. Disabling this feature is deprecated. Omitting will enable.
	NcpEnable *bool `json:"ncp_enable,omitempty"`

	// Passtos When this option is enabled OpenVPN sets the Type-of-Service (TOS) IP header value of tunnel packets to match the encapsulated packet value. This may cause important traffic to be handled faster over the tunnel by intermediate hops at the cost of minor information disclosure.
	Passtos *bool `json:"passtos,omitempty"`

	// PingAction Exit or restart OpenVPN after timeout from remote. This is only necessary for `ping` method.
	PingAction *APIServicesOpenVPNClientCreateJSONBodyPingAction `json:"ping_action,omitempty"`

	// PingActionPush Push ping-restart/ping-exit to VPN client. This is only necessary for `ping` method.
	PingActionPush *bool `json:"ping_action_push,omitempty"`

	// PingActionSeconds Enter ping action seconds. This is only necessary for `ping` method.
	PingActionSeconds *int `json:"ping_action_seconds,omitempty"`

	// PingMethod The Ping Method controls OpenVPN monitoring of peers through the control channel and how it deals with unresponsive peers.
	PingMethod *APIServicesOpenVPNClientCreateJSONBodyPingMethod `json:"ping_method,omitempty"`

	// PingPush Push ping to VPN client. This is only necessary for `ping` method.
	PingPush *bool `json:"ping_push,omitempty"`

	// PingSeconds Enter ping seconds. This is only necessary for `ping` method.
	PingSeconds *int `json:"ping_seconds,omitempty"`

	// Protocol The IP protocol clients will use to connect to this VPN.
	Protocol *APIServicesOpenVPNClientCreateJSONBodyProtocol `json:"protocol,omitempty"`

	// RemoteNetwork IPv4 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more CIDR ranges. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv4 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetwork *string `json:"remote_network,omitempty"`

	// RemoteNetworkv6 IPv6 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more IP/PREFIX networks. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv6 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetworkv6 *string `json:"remote_networkv6,omitempty"`

	// SharedKey Enter Shared Key. This is only mandatory for mode `p2p_shared_key`. Options are `""` for automatic shared key generation and a raw shared key.
	SharedKey *string `json:"shared_key,omitempty"`

	// Sndrcvbuf Configures a Send and Receive Buffer size for OpenVPN. The default buffer size can be too small in many cases, depending on hardware and network uplink speeds. Finding the best buffer size can take experimentation. To test the best value for a site, start at 512KiB and test higher and lower values until testing results in peak performance.
	Sndrcvbuf *APIServicesOpenVPNClientCreateJSONBodySndrcvbuf `json:"sndrcvbuf,omitempty"`

	// Tls TLS, or Transport Layer Security, can provide session authentication and encryption to ensure the validity of peers and to protect the control channel. Paste the TLS key. This is not necessary for mode `p2p_shared_key`. Options are `""` or `true` for automatic TLS key generation, `false` to disable TLS or a raw TLS key as a string. Omitting disable TLS configuration.
	Tls *string `json:"tls,omitempty"`

	// TlsType Enter TLS Key Usage Mode. This is not necessary for mode `p2p_shared_key`.
	TlsType *APIServicesOpenVPNClientCreateJSONBodyTlsType `json:"tls_type,omitempty"`

	// TlsauthKeydir The direction in which this VPN endpoint uses the TLS key. The TLS Key Direction must be set to complementary values on the server and clients. The default behavior uses 0 on server instances and 1 on client instances.
	// Enter TLS keydir direction. This is not necessary for mode `p2p_shared_key`.
	TlsauthKeydir *APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydir `json:"tlsauth_keydir,omitempty"`

	// Topology Sets the method OpenVPN uses to allocate addresses for clients in a client/server setup on tun device mode VPNs. The Topology option is relevant only when supplying a virtual adapter IP address to clients using tun mode on IPv4. Some clients may require this even for IPv6, such as OpenVPN Connect, though in reality IPv6 always runs with a subnet topology even when IPv4 uses net30. OpenVPN instances using tap mode always use subnet topology as well.
	Topology *APIServicesOpenVPNClientCreateJSONBodyTopology `json:"topology,omitempty"`

	// TunnelNetwork Virtual IPv4 network used for private communications between this client and the server expressed using CIDR (e.g. 10.0.8.5/24).
	// With subnet topology, enter the client IP address and the subnet mask must match the IPv4 Tunnel Network on the server.
	// With net30 topology, the first network address of the /30 is assumed to be the server address and the second network address will be assigned to the client.
	TunnelNetwork *string `json:"tunnel_network,omitempty"`

	// TunnelNetworkv6 Virtual IPv6 network used for private communications between this client and the server expressed using prefix (e.g. 2001:db9:1:1::100/64).
	// Enter the client IPv6 address and prefix. The prefix must match the IPv6 Tunnel Network prefix on the server.
	TunnelNetworkv6 *string `json:"tunnel_networkv6,omitempty"`

	// UdpFastIo Controls whether or not OpenVPN will use fast I/O operations with UDP writes to its tun or tap device. This behavior optimizes the packet write event loop, improving CPU efficiency by 5% to 10%. Experimental.
	UdpFastIo *bool `json:"udp_fast_io,omitempty"`

	// VerbosityLevel Configures the amount of detail OpenVPN will log for this instance, which is useful for troubleshooting problems. Higher numbers will result in higher amounts of detail in the log. During normal operation the default selection is ideal. Level `3` is recommended for a good summary of what's happening without being swamped by output. Maximum level `11`. The `default` setting is equivalent to level `1`.
	VerbosityLevel *APIServicesOpenVPNClientCreateJSONBody_VerbosityLevel `json:"verbosity_level,omitempty"`
}

// APIServicesOpenVPNClientCreateJSONBodyCompression defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyCompression string

// APIServicesOpenVPNClientCreateJSONBodyCreateGw defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyCreateGw string

// APIServicesOpenVPNClientCreateJSONBodyDevMode defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyDevMode string

// APIServicesOpenVPNClientCreateJSONBodyDigest defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyDigest string

// APIServicesOpenVPNClientCreateJSONBodyExitNotify defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyExitNotify string

// APIServicesOpenVPNClientCreateJSONBodyMode defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyMode string

// APIServicesOpenVPNClientCreateJSONBodyPingAction defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyPingAction string

// APIServicesOpenVPNClientCreateJSONBodyPingMethod defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyPingMethod string

// APIServicesOpenVPNClientCreateJSONBodyProtocol defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyProtocol string

// APIServicesOpenVPNClientCreateJSONBodySndrcvbuf defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodySndrcvbuf string

// APIServicesOpenVPNClientCreateJSONBodyTlsType defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyTlsType string

// APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydir defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyTlsauthKeydir string

// APIServicesOpenVPNClientCreateJSONBodyTopology defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyTopology string

// APIServicesOpenVPNClientCreateJSONBodyVerbosityLevel0 defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyVerbosityLevel0 = string

// APIServicesOpenVPNClientCreateJSONBodyVerbosityLevel1 defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBodyVerbosityLevel1 = int

// APIServicesOpenVPNClientCreateJSONBody_VerbosityLevel defines parameters for APIServicesOpenVPNClientCreate.
type APIServicesOpenVPNClientCreateJSONBody_VerbosityLevel struct {
	union json.RawMessage
}

// APIServicesOpenVPNClientUpdateJSONBody defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBody struct {
	// AllowCompression Controls whether or not compression is allowed on the VPN, and how it is handled.
	AllowCompression *APIServicesOpenVPNClientUpdateJSONBodyAllowCompression `json:"allow_compression,omitempty"`

	// Authmode One or more authentication servers to use when checking user credentials. This can be the Local Database (user manager) or it can be a RADIUS or LDAP server configured in the user manager.
	// Selecting multiple entries will use each one in turn. If authentication against an entry fails, the VPN will try the next server. It will continue this process until it has tried all selected entries.
	// This field is only present when using a Server Mode (`server_user` or `server_tls_user`) which requires user authentication.
	Authmode *string `json:"authmode,omitempty"`

	// Caref Specify the unique reference ID of the certificate signing authority.
	Caref *string `json:"caref,omitempty"`

	// CertDepth This option limits the valid length of a certificate chain. The default value limits a chain to One (Client+Server). With that value, if an unauthorized intermediate CA signs a certificate, certificates signed by the rogue intermediate would fail validation. In cases when the certificate stricture requires chaining with intermediates, raise this limit to accommodate the longest allowed chain.
	CertDepth *APIServicesOpenVPNClientUpdateJSONBodyCertDepth `json:"cert_depth,omitempty"`

	// Certref The certificate used by the VPN instance to identify itself to peers. This certificate must contain appropriate properties marking it as a server certificate and not a user or client certificate.
	// Specify the unique reference ID of the certificate revocation list.
	Certref *string `json:"certref,omitempty"`

	// Client2client This option controls whether or not connected clients are able to communicate with one another. To allow this behavior, check the option. When unchecked, clients can only send traffic to the server or destinations beyond the server such as routed networks or the Internet.
	Client2client *bool `json:"client2client,omitempty"`

	// Compression Compression to be used with this VPN instance. This is only necessary for `allow_compression` set to `yes` or `asym`. Compression can potentially dangerous and insecure. Deprecated. Compress tunnel packets using the LZO algorithm.
	Compression *APIServicesOpenVPNClientUpdateJSONBodyCompression `json:"compression,omitempty"`

	// CompressionPush Push the selected Compression setting to connecting clients. This is only necessary for `allow_compression` set to `yes` or `asym`.
	CompressionPush *bool `json:"compression_push,omitempty"`

	// ConcurrentConnections Specifies the number of clients that may be simultaneously connected to this OpenVPN server instance at any given time.
	ConcurrentConnections *int `json:"concurrent_connections,omitempty"`

	// CreateGw If you assign a virtual interface to this OpenVPN server, this setting controls which gateway types will be created.
	CreateGw *APIServicesOpenVPNClientUpdateJSONBodyCreateGw `json:"create_gw,omitempty"`

	// Crlref This optional field is for the Certificate Revocation List (CRL) this tunnel will use to check the validity of peer certificates.
	// A CRL is a list of certificates signed by a CA which are no longer valid. This could be due to a certificate being compromised or lost, such as from a stolen laptop, spyware infection, etc.
	// Specify the unique reference ID of the certificate.
	Crlref *string `json:"crlref,omitempty"`

	// CustomOptions Custom options may be added in using the Custom option box separated by a semicolon (;) and the firewall will pass the custom directives to OpenVPN.
	CustomOptions *string `json:"custom_options,omitempty"`

	// DataCiphers These options define the cryptographic ciphers OpenVPN will use for this VPN. Enter comma sepereted data encryption algorithms (e.g. `AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305`). Data encryption algorithms will be truncated to 19.
	DataCiphers *string `json:"data_ciphers,omitempty"`

	// DataCiphersFallback Enter fallback data encryption algorithm.
	DataCiphersFallback *string `json:"data_ciphers_fallback,omitempty"`

	// Description Enter a description for this VPN instance, for reference.
	Description *string `json:"description,omitempty"`

	// DevMode OpenVPN can run in one of two device modes.
	DevMode *APIServicesOpenVPNClientUpdateJSONBodyDevMode `json:"dev_mode,omitempty"`

	// DhLength The Diffie-Hellman (DH) key exchange parameters are used for establishing a secure communications channel. They may be regenerated at any time, and they are not specific to an OpenVPN instance. When importing an existing OpenVPN configuration these parameters do not need to be copied from the previous server nor does it require generating new parameters. The length of the desired DH parameters may be chosen from the drop-down box, either 1024, 2048, or 4096. There is an additional choice for ECDH Only which disables traditional DH parameters and uses only ECDH.
	DhLength *APIServicesOpenVPNClientUpdateJSONBody_DhLength `json:"dh_length,omitempty"`

	// Digest Selects the message digest algorithm OpenVPN uses for HMAC authentication of incoming packets. This is used for the data channel and if also for the control channel when the tunnel uses a TLS key. The GUI default of SHA256 is a good balance of security and speed.
	// When using AEAD ciphers such as AES-GCM, OpenVPN ignores this value for the data channel since AEAD ciphers already perform authentication. Even with an AEAD cipher, OpenVPN still uses this algorithm to authenticate the control channel when the tunnel uses a TLS key.
	Digest *APIServicesOpenVPNClientUpdateJSONBodyDigest `json:"digest,omitempty"`

	// Disable Disable this override without removing it.
	Disable *bool `json:"disable,omitempty"`

	// DnsDomain Configures a default domain name which clients will append to DNS requests. This can be helpful to ensure name resolution works properly for hosts on the local network where DNS name resolution is used.
	DnsDomain *string `json:"dns_domain,omitempty"`

	// DnsServers Comma-separated list of no more than 4 DNS server IP addresses (i.e. 8.8.8.8). Any more than the first four are ignored. This list is provided to the clent.
	DnsServers *string `json:"dns_servers,omitempty"`

	// DuplicateCn Controls whether or not OpenVPN will allow multiple connections from the same user to work simultaneously. This is only necessary for mode `p2p_shared_key`.
	DuplicateCn *bool `json:"duplicate_cn,omitempty"`

	// DynamicIp For clients on Internet connections where the IP address changes frequently, or mobile users who commonly move between different Internet connections, check this option for more stable connectivity. Where the client IP address is static or rarely changes, not using this option offers a small security improvement.
	DynamicIp *bool `json:"dynamic_ip,omitempty"`

	// EcdhCurve Configures a specific elliptic curve to use for Elliptic Curve Diffie-Hellman key exchanges. This is only for use with ECDH TLS encryption.
	EcdhCurve *APIServicesOpenVPNClientUpdateJSONBodyEcdhCurve `json:"ecdh_curve,omitempty"`

	// Engine If available, this option controls which hardware cryptographic accelerator will be used by OpenVPN. When left unspecified, OpenVPN will choose automatically based on what is available in the operating system to accelerate ciphers OpenVPN wants to use.
	// Some hardware acceleration, such as AES-NI, happens automatically in OpenVPN via OpenSSL and cannot be enabled or disabled by this option.
	// Enter Hardware crypto. Options are `none` and any enabled hardware crypto.
	Engine *string `json:"engine,omitempty"`

	// ExitNotify Controls whether or not OpenVPN will send an explicit exit notification to connected UDP clients or peers when restarting or shutting down. This notification allows peers to immediately disconnect rather than wait for a timeout. This is only relevant to UDP modes as TCP natively supports closing connections.
	ExitNotify *APIServicesOpenVPNClientUpdateJSONBodyExitNotify `json:"exit_notify,omitempty"`

	// InactiveSeconds The amount of time, in seconds, which a client can be inactive before OpenVPN disconnects it for inactivity. OpenVPN bases activity on the last incoming or outgoing data channel packet, not control channel packets.
	// `0` disables this feature.
	InactiveSeconds *int `json:"inactive_seconds,omitempty"`

	// Interface Selects the interface, VIP, or failover group that the OpenVPN instance will use when communicating with peers. This also controls which interface the traffic from the instance will exit. VIP can be provided as description, subnet or uniqid. Failover group can be provided as group name.
	// _Note: If you are using a failover group, the failover group must be configured to use the same_.
	Interface *string `json:"interface,omitempty"`

	// KeepaliveInterval Enter keepalive interval.
	KeepaliveInterval *int `json:"keepalive_interval,omitempty"`

	// KeepaliveTimeout Enter keepalive timeout.
	KeepaliveTimeout *int `json:"keepalive_timeout,omitempty"`

	// LocalNetwork IPv4 server-side networks that will be accessible from this particular client. Expressed as a comma-separated list of one or more CIDR networks.
	// NOTE: Networks do not need to be specified here if they have already been defined on the main server configuration.
	LocalNetwork *string `json:"local_network,omitempty"`

	// LocalNetworkv6 IPv6 server-side networks that will be accessible from this particular client. Expressed as a comma-separated list of one or more IP/PREFIX networks.
	// NOTE: Networks do not need to be specified here if they have already been defined on the main server configuration.
	LocalNetworkv6 *string `json:"local_networkv6,omitempty"`

	// LocalPort The port number upon which OpenVPN will listen for incoming connections from peers. Firewall rules must allow traffic to this port and this port must be specified in the client configuration.
	// The port for each server must be unique for each interface when using a standard UDP or TCP Protocol choice and must be globally unique if using a multihome Protocol.
	// Omitting this will default to next available port.
	LocalPort *int `json:"local_port,omitempty"`

	// Mode The role for the server, which specifies how peers connect to a server instance. Changing this also affects which options the GUI displays on the rest of the page.
	Mode *APIServicesOpenVPNClientUpdateJSONBodyMode `json:"mode,omitempty"`

	// NcpEnable Enable Data Encryption Negotiation. Disabling this feature is deprecated. Omitting will enable.
	NcpEnable *bool `json:"ncp_enable,omitempty"`

	// NetbiosEnable Enable NetBIOS over TCP/IP. If this option is not set, all NetBIOS-over-TCP/IP options (including WINS) will be disabled.
	NetbiosEnable *bool `json:"netbios_enable,omitempty"`

	// NetbiosNodeType Possible options: b (broadcasts), p (point-to-point name queries to a WINS server), m (broadcast then query name server), and h (query name server, then broadcast). This parameter takes a single letter either b, p, m, or h. Any other string will result in this option being set to none.
	NetbiosNodeType *APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeType `json:"netbios_node_type,omitempty"`

	// NetbiosScope NetBIOS Scope ID provides an extended naming service for NetBIOS over TCP/IP. The NetBIOS scope ID isolates NetBIOS traffic on a single network to only those nodes with the same NetBIOS scope ID.
	NetbiosScope *string `json:"netbios_scope,omitempty"`

	// NtpServers Comma-separated list of no more than 2 NTP server IP addresses. Any more than the first two are ignored.
	NtpServers *string `json:"ntp_servers,omitempty"`

	// Ocspcheck When set, OpenVPN will attempt to confirm client certificate validity using Online Certificate Status Protocol (OCSP) against the site listed in the OCSP URL field.
	Ocspcheck *bool `json:"ocspcheck,omitempty"`

	// Ocspurl Enter OCSP URL. This is only necessary for `ocspcheck`.
	Ocspurl *string `json:"ocspurl,omitempty"`

	// Passtos When this option is enabled OpenVPN sets the Type-of-Service (TOS) IP header value of tunnel packets to match the encapsulated packet value. This may cause important traffic to be handled faster over the tunnel by intermediate hops at the cost of minor information disclosure.
	Passtos *bool `json:"passtos,omitempty"`

	// PingAction Exit or restart OpenVPN after timeout from remote. This is only necessary for `ping` method.
	PingAction *APIServicesOpenVPNClientUpdateJSONBodyPingAction `json:"ping_action,omitempty"`

	// PingActionPush Push ping-restart/ping-exit to VPN client. This is only necessary for `ping` method.
	PingActionPush *bool `json:"ping_action_push,omitempty"`

	// PingActionSeconds Enter ping action seconds. This is only necessary for `ping` method.
	PingActionSeconds *int `json:"ping_action_seconds,omitempty"`

	// PingMethod The Ping Method controls OpenVPN monitoring of peers through the control channel and how it deals with unresponsive peers.
	PingMethod *APIServicesOpenVPNClientUpdateJSONBodyPingMethod `json:"ping_method,omitempty"`

	// PingPush Push ping to VPN client. This is only necessary for `ping` method.
	PingPush *bool `json:"ping_push,omitempty"`

	// PingSeconds Enter ping seconds. This is only necessary for `ping` method.
	PingSeconds *int `json:"ping_seconds,omitempty"`

	// Protocol The IP protocol clients will use to connect to this VPN.
	Protocol *APIServicesOpenVPNClientUpdateJSONBodyProtocol `json:"protocol,omitempty"`

	// PushBlockoutsidedns Make Windows 10 Clients Block access to DNS servers except across OpenVPN while connected, forcing clients to use only VPN DNS servers.
	PushBlockoutsidedns *bool `json:"push_blockoutsidedns,omitempty"`

	// PushRegisterDns Run "net stop dnscache", "net start dnscache", "ipconfig /flushdns" and "ipconfig /registerdns" on connection initiation.
	PushRegisterDns *bool `json:"push_register_dns,omitempty"`

	// RedirectGateway When a Redirect IPv4 Gateway option is selected the server pushes a message to clients instructing them to forward all traffic for that address family, including Internet traffic, over the VPN tunnel.
	RedirectGateway *bool `json:"redirect_gateway,omitempty"`

	// RedirectGateway6 When a Redirect IPv6 Gateway option is selected the server pushes a message to clients instructing them to forward all traffic for that address family, including Internet traffic, over the VPN tunnel.
	RedirectGateway6 *bool `json:"redirect_gateway6,omitempty"`

	// RemoteNetwork IPv4 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more CIDR ranges. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv4 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetwork *string `json:"remote_network,omitempty"`

	// RemoteNetworkv6 IPv6 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more IP/PREFIX networks. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv6 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetworkv6 *string `json:"remote_networkv6,omitempty"`

	// ServerbridgeDhcp When using `tap` mode for a remote access SSL/TLS VPN, (`server_tls`, `server_user`, `server_tls_user`), additional options to control bridging behavior in OpenVPN and client address assignment.
	// When selected, OpenVPN passes through DHCP to the bridged. In the most common scenario, this is LAN.
	// Using this method connecting clients receive IP addresses from the same DHCP pool used by clients on the LAN.
	ServerbridgeDhcp *string `json:"serverbridge_dhcp,omitempty"`

	// ServerbridgeDhcpEnd Defines a DHCP range from which OpenVPN can assign addresses to clients. If these settings are left blank, OpenVPN passes DHCP through to the bridge interface and it ignores the interface setting above.
	// When set, this range should be within the same subnet as the Bridge Interface (`serverbridge_interface`) but it should not overlap an existing in-use portion of the subnet, such as the current DHCP pool.
	// This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
	ServerbridgeDhcpEnd *string `json:"serverbridge_dhcp_end,omitempty"`

	// ServerbridgeDhcpStart Defines a DHCP range from which OpenVPN can assign addresses to clients. If these settings are left blank, OpenVPN passes DHCP through to the bridge interface and it ignores the interface setting above.
	// When set, this range should be within the same subnet as the Bridge Interface (`serverbridge_interface`) but it should not overlap an existing in-use portion of the subnet, such as the current DHCP pool.
	// This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
	ServerbridgeDhcpStart *string `json:"serverbridge_dhcp_start,omitempty"`

	// ServerbridgeInterface This setting indicates to OpenVPN which interface will be used for the bridge. In most cases this is LAN. This option controls which existing IP address and subnet mask are used by OpenVPN for the bridge. Setting this to none will cause the Server Bridge DHCP (`serverbridge_dhcp_start`, `serverbridge_dhcp_end`) settings below to be ignored.
	ServerbridgeInterface *APIServicesOpenVPNClientUpdateJSONBodyServerbridgeInterface `json:"serverbridge_interface,omitempty"`

	// ServerbridgeRoutegateway Makes OpenVPN push the Bridge Interface IPv4 address to connecting clients as a route gateway.
	// When the IPv4 Tunnel Network in OpenVPN is empty for a bridged VPN, connecting clients cannot automatically determine a server-side gateway for use with routes pushed to clients by the server.
	ServerbridgeRoutegateway *bool `json:"serverbridge_routegateway,omitempty"`

	// SharedKey Enter Shared Key. This is only mandatory for mode `p2p_shared_key`. Options are `""` for automatic shared key generation and a raw shared key.
	SharedKey *string `json:"shared_key,omitempty"`

	// Sndrcvbuf Configures a Send and Receive Buffer size for OpenVPN. The default buffer size can be too small in many cases, depending on hardware and network uplink speeds. Finding the best buffer size can take experimentation. To test the best value for a site, start at 512KiB and test higher and lower values until testing results in peak performance.
	Sndrcvbuf *APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf `json:"sndrcvbuf,omitempty"`

	// Strictusercn Controls whether the firewall will enforce a strict match between the username supplied by the user and the Common Name of their user certificate when the firewall authenticates a user. When enabled, authentication fails if the two values do not match.
	// This prevents users from using their own credentials with the certificate from a different user and vice versa.
	// This is only necessary for mode `server_tls_user`. Omitting will disable.
	Strictusercn *bool `json:"strictusercn,omitempty"`

	// Tls TLS, or Transport Layer Security, can provide session authentication and encryption to ensure the validity of peers and to protect the control channel. Paste the TLS key. This is not necessary for mode `p2p_shared_key`. Options are `""` or `true` for automatic TLS key generation, `false` to disable TLS or a raw TLS key as a string. Omitting disable TLS configuration.
	Tls *string `json:"tls,omitempty"`

	// TlsType Enter TLS Key Usage Mode. This is not necessary for mode `p2p_shared_key`.
	TlsType *APIServicesOpenVPNClientUpdateJSONBodyTlsType `json:"tls_type,omitempty"`

	// TlsauthKeydir The direction in which this VPN endpoint uses the TLS key. The TLS Key Direction must be set to complementary values on the server and clients. The default behavior uses 0 on server instances and 1 on client instances.
	// Enter TLS keydir direction. This is not necessary for mode `p2p_shared_key`.
	TlsauthKeydir *APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydir `json:"tlsauth_keydir,omitempty"`

	// Topology Sets the method OpenVPN uses to allocate addresses for clients in a client/server setup on tun device mode VPNs. The Topology option is relevant only when supplying a virtual adapter IP address to clients using tun mode on IPv4. Some clients may require this even for IPv6, such as OpenVPN Connect, though in reality IPv6 always runs with a subnet topology even when IPv4 uses net30. OpenVPN instances using tap mode always use subnet topology as well.
	Topology *APIServicesOpenVPNClientUpdateJSONBodyTopology `json:"topology,omitempty"`

	// TunnelNetwork Virtual IPv4 network used for private communications between this client and the server expressed using CIDR (e.g. 10.0.8.5/24).
	// With subnet topology, enter the client IP address and the subnet mask must match the IPv4 Tunnel Network on the server.
	// With net30 topology, the first network address of the /30 is assumed to be the server address and the second network address will be assigned to the client.
	TunnelNetwork *string `json:"tunnel_network,omitempty"`

	// TunnelNetworkv6 Virtual IPv6 network used for private communications between this client and the server expressed using prefix (e.g. 2001:db9:1:1::100/64).
	// Enter the client IPv6 address and prefix. The prefix must match the IPv6 Tunnel Network prefix on the server.
	TunnelNetworkv6 *string `json:"tunnel_networkv6,omitempty"`

	// UdpFastIo Controls whether or not OpenVPN will use fast I/O operations with UDP writes to its tun or tap device. This behavior optimizes the packet write event loop, improving CPU efficiency by 5% to 10%. Experimental.
	UdpFastIo *bool `json:"udp_fast_io,omitempty"`

	// UsernameAsCommonName Controls whether or not OpenVPN will use the username given by the client in place of the certificate common name (CN) for purposes such as determining Client Specific Overrides. This is only relevant when user authentication is enabled. This is typically the best practice, but not a requirement.
	// This is only necessary for mode `server_user` or `server_tls_user`.
	UsernameAsCommonName *bool `json:"username_as_common_name,omitempty"`

	// VerbosityLevel Configures the amount of detail OpenVPN will log for this instance, which is useful for troubleshooting problems. Higher numbers will result in higher amounts of detail in the log. During normal operation the default selection is ideal. Level `3` is recommended for a good summary of what's happening without being swamped by output. Maximum level `11`. The `default` setting is equivalent to level `1`.
	VerbosityLevel *APIServicesOpenVPNClientUpdateJSONBody_VerbosityLevel `json:"verbosity_level,omitempty"`

	// Vpnid This id indicates the id of the client you want to delete. This id is static and not an index of an entry in the config array. Best to first get all clients and get the id of the one you want to delete before calling this endpoint.
	Vpnid string `json:"vpnid"`

	// WinsServers Comma-separated list of no more than 2 WINS server IP addresses. Any more than the first two are ignored.
	WinsServers *string `json:"wins_servers,omitempty"`
}

// APIServicesOpenVPNClientUpdateParams defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateParams struct {
	// Vpnid This id indicates the id of the client you want to delete. This id is static and not an index of an entry in the config array. Best to first get all clients and get the id of the one you want to delete before calling this endpoint.
	Vpnid struct {
		union json.RawMessage
	} `form:"vpnid" json:"vpnid"`
}

// APIServicesOpenVPNClientUpdateParamsVpnid0 defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateParamsVpnid0 = int

// APIServicesOpenVPNClientUpdateParamsVpnid1 defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateParamsVpnid1 = string

// APIServicesOpenVPNClientUpdateJSONBodyAllowCompression defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyAllowCompression string

// APIServicesOpenVPNClientUpdateJSONBodyCertDepth defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyCertDepth string

// APIServicesOpenVPNClientUpdateJSONBodyCompression defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyCompression string

// APIServicesOpenVPNClientUpdateJSONBodyCreateGw defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyCreateGw string

// APIServicesOpenVPNClientUpdateJSONBodyDevMode defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyDevMode string

// APIServicesOpenVPNClientUpdateJSONBodyDhLength0 defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyDhLength0 = string

// APIServicesOpenVPNClientUpdateJSONBodyDhLength1 defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyDhLength1 = int

// APIServicesOpenVPNClientUpdateJSONBody_DhLength defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBody_DhLength struct {
	union json.RawMessage
}

// APIServicesOpenVPNClientUpdateJSONBodyDigest defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyDigest string

// APIServicesOpenVPNClientUpdateJSONBodyEcdhCurve defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyEcdhCurve string

// APIServicesOpenVPNClientUpdateJSONBodyExitNotify defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyExitNotify string

// APIServicesOpenVPNClientUpdateJSONBodyMode defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyMode string

// APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeType defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyNetbiosNodeType string

// APIServicesOpenVPNClientUpdateJSONBodyPingAction defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyPingAction string

// APIServicesOpenVPNClientUpdateJSONBodyPingMethod defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyPingMethod string

// APIServicesOpenVPNClientUpdateJSONBodyProtocol defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyProtocol string

// APIServicesOpenVPNClientUpdateJSONBodyServerbridgeInterface defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyServerbridgeInterface string

// APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodySndrcvbuf string

// APIServicesOpenVPNClientUpdateJSONBodyTlsType defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyTlsType string

// APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydir defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyTlsauthKeydir string

// APIServicesOpenVPNClientUpdateJSONBodyTopology defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyTopology string

// APIServicesOpenVPNClientUpdateJSONBodyVerbosityLevel0 defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyVerbosityLevel0 = string

// APIServicesOpenVPNClientUpdateJSONBodyVerbosityLevel1 defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBodyVerbosityLevel1 = int

// APIServicesOpenVPNClientUpdateJSONBody_VerbosityLevel defines parameters for APIServicesOpenVPNClientUpdate.
type APIServicesOpenVPNClientUpdateJSONBody_VerbosityLevel struct {
	union json.RawMessage
}

// APIServicesOpenVPNClientSpecificOverridesDeleteParams defines parameters for APIServicesOpenVPNClientSpecificOverridesDelete.
type APIServicesOpenVPNClientSpecificOverridesDeleteParams struct {
	// Id ID of the client specific override to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id string `form:"id" json:"id"`
}

// APIServicesOpenVPNClientSpecificOverridesCreateJSONBody defines parameters for APIServicesOpenVPNClientSpecificOverridesCreate.
type APIServicesOpenVPNClientSpecificOverridesCreateJSONBody struct {
	// Block Prevents the client from connecting to this server. Do not use this option to permanently disable a client due to a compromised key or password. Use a CRL (certificate revocation list) instead.
	Block *bool `json:"block,omitempty"`

	// CommonName X.509 common name for the client certificate, or the username for VPNs utilizing password authentication. This match is case sensitive.
	CommonName string `json:"common_name"`

	// CustomOptions Additional options to add for this client specific override, separated by a semicolon.
	CustomOptions *string `json:"custom_options,omitempty"`

	// Description Description for administrative reference.
	Description *string `json:"description,omitempty"`

	// Disable Disable this override without removing it.
	Disable *bool `json:"disable,omitempty"`

	// DnsDomain Domain name for DNS to provide to the client.
	DnsDomain *string `json:"dns_domain,omitempty"`

	// DnsServers Comma-separated list of no more than 4 DNS server IP addresses (i.e. 8.8.8.8). Any more than the first four are ignored. This list is provided to the clent.
	DnsServers *string `json:"dns_servers,omitempty"`

	// LocalNetwork IPv4 server-side networks that will be accessible from this particular client. Expressed as a comma-separated list of one or more CIDR networks.
	// NOTE: Networks do not need to be specified here if they have already been defined on the main server configuration.
	LocalNetwork *string `json:"local_network,omitempty"`

	// LocalNetworkv6 IPv6 server-side networks that will be accessible from this particular client. Expressed as a comma-separated list of one or more IP/PREFIX networks.
	// NOTE: Networks do not need to be specified here if they have already been defined on the main server configuration.
	LocalNetworkv6 *string `json:"local_networkv6,omitempty"`

	// NetbiosEnable Enable NetBIOS over TCP/IP. If this option is not set, all NetBIOS-over-TCP/IP options (including WINS) will be disabled.
	NetbiosEnable *bool `json:"netbios_enable,omitempty"`

	// NetbiosNodeType Possible options: b (broadcasts), p (point-to-point name queries to a WINS server), m (broadcast then query name server), and h (query name server, then broadcast). This parameter takes a single letter either b, p, m, or h. Any other string will result in this option being set to none.
	NetbiosNodeType *APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeType `json:"netbios_node_type,omitempty"`

	// NetbiosScope NetBIOS Scope ID provides an extended naming service for NetBIOS over TCP/IP. The NetBIOS scope ID isolates NetBIOS traffic on a single network to only those nodes with the same NetBIOS scope ID.
	NetbiosScope *string `json:"netbios_scope,omitempty"`

	// NtpServers Comma-separated list of no more than 2 NTP server IP addresses. Any more than the first two are ignored.
	NtpServers *string `json:"ntp_servers,omitempty"`

	// PreventServerDefinitions Prevent this client from receiving any server-defined client settings.
	PreventServerDefinitions *bool `json:"prevent_server_definitions,omitempty"`

	// RedirectGateway Force all client generated traffic through the tunnel.
	RedirectGateway *bool `json:"redirect_gateway,omitempty"`

	// RemoteNetwork IPv4 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more CIDR ranges. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv4 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetwork *string `json:"remote_network,omitempty"`

	// RemoteNetworkv6 IPv6 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more IP/PREFIX networks. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv6 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetworkv6 *string `json:"remote_networkv6,omitempty"`

	// RemoveServerRoutes Prevent this client from receiving any server-defined routes without removing any other options.
	RemoveServerRoutes *bool `json:"remove_server_routes,omitempty"`

	// ServerList Comma separated string containing the ids of the OpenVPN servers that use this override. Omitting this activates the override for all servers.
	ServerList *string `json:"server_list,omitempty"`

	// TunnelNetwork Virtual IPv4 network used for private communications between this client and the server expressed using CIDR (e.g. 10.0.8.5/24).
	// With subnet topology, enter the client IP address and the subnet mask must match the IPv4 Tunnel Network on the server.
	// With net30 topology, the first network address of the /30 is assumed to be the server address and the second network address will be assigned to the client.
	TunnelNetwork *string `json:"tunnel_network,omitempty"`

	// TunnelNetworkv6 Virtual IPv6 network used for private communications between this client and the server expressed using prefix (e.g. 2001:db9:1:1::100/64).
	// Enter the client IPv6 address and prefix. The prefix must match the IPv6 Tunnel Network prefix on the server.
	TunnelNetworkv6 *string `json:"tunnel_networkv6,omitempty"`

	// WinsServers Comma-separated list of no more than 2 WINS server IP addresses. Any more than the first two are ignored.
	WinsServers *string `json:"wins_servers,omitempty"`
}

// APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeType defines parameters for APIServicesOpenVPNClientSpecificOverridesCreate.
type APIServicesOpenVPNClientSpecificOverridesCreateJSONBodyNetbiosNodeType string

// APIServicesOpenVPNClientSpecificOverridesUpdateJSONBody defines parameters for APIServicesOpenVPNClientSpecificOverridesUpdate.
type APIServicesOpenVPNClientSpecificOverridesUpdateJSONBody struct {
	// Block Prevents the client from connecting to this server. Do not use this option to permanently disable a client due to a compromised key or password. Use a CRL (certificate revocation list) instead.
	Block *bool `json:"block,omitempty"`

	// CommonName X.509 common name for the client certificate, or the username for VPNs utilizing password authentication. This match is case sensitive.
	CommonName *string `json:"common_name,omitempty"`

	// CustomOptions Additional options to add for this client specific override, separated by a semicolon.
	CustomOptions *string `json:"custom_options,omitempty"`

	// Description Description for administrative reference.
	Description *string `json:"description,omitempty"`

	// Disable Disable this override without removing it.
	Disable *bool `json:"disable,omitempty"`

	// DnsDomain Domain name for DNS to provide to the client.
	DnsDomain *string `json:"dns_domain,omitempty"`

	// DnsServers Comma-separated list of no more than 4 DNS server IP addresses (i.e. 8.8.8.8). Any more than the first four are ignored. This list is provided to the clent.
	DnsServers *string `json:"dns_servers,omitempty"`

	// Id ID of the client specific override to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id string `json:"id"`

	// LocalNetwork IPv4 server-side networks that will be accessible from this particular client. Expressed as a comma-separated list of one or more CIDR networks.
	// NOTE: Networks do not need to be specified here if they have already been defined on the main server configuration.
	LocalNetwork *string `json:"local_network,omitempty"`

	// LocalNetworkv6 IPv6 server-side networks that will be accessible from this particular client. Expressed as a comma-separated list of one or more IP/PREFIX networks.
	// NOTE: Networks do not need to be specified here if they have already been defined on the main server configuration.
	LocalNetworkv6 *string `json:"local_networkv6,omitempty"`

	// NetbiosEnable Enable NetBIOS over TCP/IP. If this option is not set, all NetBIOS-over-TCP/IP options (including WINS) will be disabled.
	NetbiosEnable *bool `json:"netbios_enable,omitempty"`

	// NetbiosNodeType Possible options: b (broadcasts), p (point-to-point name queries to a WINS server), m (broadcast then query name server), and h (query name server, then broadcast). This parameter takes a single letter either b, p, m, or h. Any other string will result in this option being set to none.
	NetbiosNodeType *APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeType `json:"netbios_node_type,omitempty"`

	// NetbiosScope NetBIOS Scope ID provides an extended naming service for NetBIOS over TCP/IP. The NetBIOS scope ID isolates NetBIOS traffic on a single network to only those nodes with the same NetBIOS scope ID.
	NetbiosScope *string `json:"netbios_scope,omitempty"`

	// NtpServers Comma-separated list of no more than 2 NTP server IP addresses. Any more than the first two are ignored.
	NtpServers *string `json:"ntp_servers,omitempty"`

	// PreventServerDefinitions Prevent this client from receiving any server-defined client settings.
	PreventServerDefinitions *bool `json:"prevent_server_definitions,omitempty"`

	// RedirectGateway Force all client generated traffic through the tunnel.
	RedirectGateway *bool `json:"redirect_gateway,omitempty"`

	// RemoteNetwork IPv4 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more CIDR ranges. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv4 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetwork *string `json:"remote_network,omitempty"`

	// RemoteNetworkv6 IPv6 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more IP/PREFIX networks. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv6 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetworkv6 *string `json:"remote_networkv6,omitempty"`

	// RemoveServerRoutes Prevent this client from receiving any server-defined routes without removing any other options.
	RemoveServerRoutes *bool `json:"remove_server_routes,omitempty"`

	// ServerList Comma separated string containing the ids of the OpenVPN servers that use this override. Omitting this activates the override for all servers.
	ServerList *string `json:"server_list,omitempty"`

	// TunnelNetwork Virtual IPv4 network used for private communications between this client and the server expressed using CIDR (e.g. 10.0.8.5/24).
	// With subnet topology, enter the client IP address and the subnet mask must match the IPv4 Tunnel Network on the server.
	// With net30 topology, the first network address of the /30 is assumed to be the server address and the second network address will be assigned to the client.
	TunnelNetwork *string `json:"tunnel_network,omitempty"`

	// TunnelNetworkv6 Virtual IPv6 network used for private communications between this client and the server expressed using prefix (e.g. 2001:db9:1:1::100/64).
	// Enter the client IPv6 address and prefix. The prefix must match the IPv6 Tunnel Network prefix on the server.
	TunnelNetworkv6 *string `json:"tunnel_networkv6,omitempty"`

	// WinsServers Comma-separated list of no more than 2 WINS server IP addresses. Any more than the first two are ignored.
	WinsServers *string `json:"wins_servers,omitempty"`
}

// APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeType defines parameters for APIServicesOpenVPNClientSpecificOverridesUpdate.
type APIServicesOpenVPNClientSpecificOverridesUpdateJSONBodyNetbiosNodeType string

// APIServicesOpenVPNServerCreateJSONBody defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBody struct {
	// AllowCompression Controls whether or not compression is allowed on the VPN, and how it is handled.
	AllowCompression *APIServicesOpenVPNServerCreateJSONBodyAllowCompression `json:"allow_compression,omitempty"`

	// Authmode One or more authentication servers to use when checking user credentials. This can be the Local Database (user manager) or it can be a RADIUS or LDAP server configured in the user manager.
	// Selecting multiple entries will use each one in turn. If authentication against an entry fails, the VPN will try the next server. It will continue this process until it has tried all selected entries.
	// This field is only present when using a Server Mode (`server_user` or `server_tls_user`) which requires user authentication.
	Authmode *string `json:"authmode,omitempty"`

	// Caref Specify the unique reference ID of the certificate signing authority.
	Caref *string `json:"caref,omitempty"`

	// CertDepth This option limits the valid length of a certificate chain. The default value limits a chain to One (Client+Server). With that value, if an unauthorized intermediate CA signs a certificate, certificates signed by the rogue intermediate would fail validation. In cases when the certificate stricture requires chaining with intermediates, raise this limit to accommodate the longest allowed chain.
	CertDepth *APIServicesOpenVPNServerCreateJSONBodyCertDepth `json:"cert_depth,omitempty"`

	// Certref The certificate used by the VPN instance to identify itself to peers. This certificate must contain appropriate properties marking it as a server certificate and not a user or client certificate.
	// Specify the unique reference ID of the certificate revocation list.
	Certref *string `json:"certref,omitempty"`

	// Client2client This option controls whether or not connected clients are able to communicate with one another. To allow this behavior, check the option. When unchecked, clients can only send traffic to the server or destinations beyond the server such as routed networks or the Internet.
	Client2client *bool `json:"client2client,omitempty"`

	// Compression Compression to be used with this VPN instance. This is only necessary for `allow_compression` set to `yes` or `asym`. Compression can potentially dangerous and insecure. Deprecated. Compress tunnel packets using the LZO algorithm.
	Compression *APIServicesOpenVPNServerCreateJSONBodyCompression `json:"compression,omitempty"`

	// CompressionPush Push the selected Compression setting to connecting clients. This is only necessary for `allow_compression` set to `yes` or `asym`.
	CompressionPush *bool `json:"compression_push,omitempty"`

	// ConcurrentConnections Specifies the number of clients that may be simultaneously connected to this OpenVPN server instance at any given time.
	ConcurrentConnections *int `json:"concurrent_connections,omitempty"`

	// CreateGw If you assign a virtual interface to this OpenVPN server, this setting controls which gateway types will be created.
	CreateGw *APIServicesOpenVPNServerCreateJSONBodyCreateGw `json:"create_gw,omitempty"`

	// Crlref This optional field is for the Certificate Revocation List (CRL) this tunnel will use to check the validity of peer certificates.
	// A CRL is a list of certificates signed by a CA which are no longer valid. This could be due to a certificate being compromised or lost, such as from a stolen laptop, spyware infection, etc.
	// Specify the unique reference ID of the certificate.
	Crlref *string `json:"crlref,omitempty"`

	// CustomOptions Custom options may be added in using the Custom option box separated by a semicolon (;) and the firewall will pass the custom directives to OpenVPN.
	CustomOptions *string `json:"custom_options,omitempty"`

	// DataCiphers These options define the cryptographic ciphers OpenVPN will use for this VPN. Enter comma sepereted data encryption algorithms (e.g. `AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305`). Data encryption algorithms will be truncated to 19.
	DataCiphers *string `json:"data_ciphers,omitempty"`

	// DataCiphersFallback Enter fallback data encryption algorithm.
	DataCiphersFallback *string `json:"data_ciphers_fallback,omitempty"`

	// Description Enter a description for this VPN instance, for reference.
	Description *string `json:"description,omitempty"`

	// DevMode OpenVPN can run in one of two device modes.
	DevMode *APIServicesOpenVPNServerCreateJSONBodyDevMode `json:"dev_mode,omitempty"`

	// DhLength The Diffie-Hellman (DH) key exchange parameters are used for establishing a secure communications channel. They may be regenerated at any time, and they are not specific to an OpenVPN instance. When importing an existing OpenVPN configuration these parameters do not need to be copied from the previous server nor does it require generating new parameters. The length of the desired DH parameters may be chosen from the drop-down box, either 1024, 2048, or 4096. There is an additional choice for ECDH Only which disables traditional DH parameters and uses only ECDH.
	DhLength *APIServicesOpenVPNServerCreateJSONBody_DhLength `json:"dh_length,omitempty"`

	// Digest Selects the message digest algorithm OpenVPN uses for HMAC authentication of incoming packets. This is used for the data channel and if also for the control channel when the tunnel uses a TLS key. The GUI default of SHA256 is a good balance of security and speed.
	// When using AEAD ciphers such as AES-GCM, OpenVPN ignores this value for the data channel since AEAD ciphers already perform authentication. Even with an AEAD cipher, OpenVPN still uses this algorithm to authenticate the control channel when the tunnel uses a TLS key.
	Digest *APIServicesOpenVPNServerCreateJSONBodyDigest `json:"digest,omitempty"`

	// Disable Disable this override without removing it.
	Disable *bool `json:"disable,omitempty"`

	// DnsDomain Configures a default domain name which clients will append to DNS requests. This can be helpful to ensure name resolution works properly for hosts on the local network where DNS name resolution is used.
	DnsDomain *string `json:"dns_domain,omitempty"`

	// DnsServers Comma-separated list of no more than 4 DNS server IP addresses (i.e. 8.8.8.8). Any more than the first four are ignored. This list is provided to the clent.
	DnsServers *string `json:"dns_servers,omitempty"`

	// DuplicateCn Controls whether or not OpenVPN will allow multiple connections from the same user to work simultaneously. This is only necessary for mode `p2p_shared_key`.
	DuplicateCn *bool `json:"duplicate_cn,omitempty"`

	// DynamicIp For clients on Internet connections where the IP address changes frequently, or mobile users who commonly move between different Internet connections, check this option for more stable connectivity. Where the client IP address is static or rarely changes, not using this option offers a small security improvement.
	DynamicIp *bool `json:"dynamic_ip,omitempty"`

	// EcdhCurve Configures a specific elliptic curve to use for Elliptic Curve Diffie-Hellman key exchanges. This is only for use with ECDH TLS encryption.
	EcdhCurve *APIServicesOpenVPNServerCreateJSONBodyEcdhCurve `json:"ecdh_curve,omitempty"`

	// Engine If available, this option controls which hardware cryptographic accelerator will be used by OpenVPN. When left unspecified, OpenVPN will choose automatically based on what is available in the operating system to accelerate ciphers OpenVPN wants to use.
	// Some hardware acceleration, such as AES-NI, happens automatically in OpenVPN via OpenSSL and cannot be enabled or disabled by this option.
	// Enter Hardware crypto. Options are `none` and any enabled hardware crypto.
	Engine *string `json:"engine,omitempty"`

	// ExitNotify Controls whether or not OpenVPN will send an explicit exit notification to connected UDP clients or peers when restarting or shutting down. This notification allows peers to immediately disconnect rather than wait for a timeout. This is only relevant to UDP modes as TCP natively supports closing connections.
	ExitNotify *APIServicesOpenVPNServerCreateJSONBodyExitNotify `json:"exit_notify,omitempty"`

	// InactiveSeconds The amount of time, in seconds, which a client can be inactive before OpenVPN disconnects it for inactivity. OpenVPN bases activity on the last incoming or outgoing data channel packet, not control channel packets.
	// `0` disables this feature.
	InactiveSeconds *int `json:"inactive_seconds,omitempty"`

	// Interface Selects the interface, VIP, or failover group that the OpenVPN instance will use when communicating with peers. This also controls which interface the traffic from the instance will exit. Interface can be provided as Interface ID (e.g. `wan`, `lan`, `opt1`, etc.), Interface physical name (e.g. `igb0`, `vtnet`, etc.) or Interface descriptive name (e.g. `MY_LAN`, `MY_WAN`, etc.). VIP can be provided as description, subnet or uniqid. Failover group can be provided as group name.
	// _Note: If you are using a failover group, the failover group must be configured to use the same_.
	Interface *string `json:"interface,omitempty"`

	// KeepaliveInterval Enter keepalive interval.
	KeepaliveInterval *int `json:"keepalive_interval,omitempty"`

	// KeepaliveTimeout Enter keepalive timeout.
	KeepaliveTimeout *int `json:"keepalive_timeout,omitempty"`

	// LocalNetwork IPv4 server-side networks that will be accessible from this particular client. Expressed as a comma-separated list of one or more CIDR networks.
	// NOTE: Networks do not need to be specified here if they have already been defined on the main server configuration.
	LocalNetwork *string `json:"local_network,omitempty"`

	// LocalNetworkv6 IPv6 server-side networks that will be accessible from this particular client. Expressed as a comma-separated list of one or more IP/PREFIX networks.
	// NOTE: Networks do not need to be specified here if they have already been defined on the main server configuration.
	LocalNetworkv6 *string `json:"local_networkv6,omitempty"`

	// LocalPort The port number upon which OpenVPN will listen for incoming connections from peers. Firewall rules must allow traffic to this port and this port must be specified in the client configuration.
	// The port for each server must be unique for each interface when using a standard UDP or TCP Protocol choice and must be globally unique if using a multihome Protocol.
	// Omitting this will default to next available port.
	LocalPort *int `json:"local_port,omitempty"`

	// Mode The role for the server, which specifies how peers connect to a server instance. Changing this also affects which options the GUI displays on the rest of the page.
	Mode *APIServicesOpenVPNServerCreateJSONBodyMode `json:"mode,omitempty"`

	// NcpEnable Enable Data Encryption Negotiation. Disabling this feature is deprecated. Omitting will enable.
	NcpEnable *bool `json:"ncp_enable,omitempty"`

	// NetbiosEnable Enable NetBIOS over TCP/IP. If this option is not set, all NetBIOS-over-TCP/IP options (including WINS) will be disabled.
	NetbiosEnable *bool `json:"netbios_enable,omitempty"`

	// NetbiosNodeType Possible options: b (broadcasts), p (point-to-point name queries to a WINS server), m (broadcast then query name server), and h (query name server, then broadcast). This parameter takes a single letter either b, p, m, or h. Any other string will result in this option being set to none.
	NetbiosNodeType *APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeType `json:"netbios_node_type,omitempty"`

	// NetbiosScope NetBIOS Scope ID provides an extended naming service for NetBIOS over TCP/IP. The NetBIOS scope ID isolates NetBIOS traffic on a single network to only those nodes with the same NetBIOS scope ID.
	NetbiosScope *string `json:"netbios_scope,omitempty"`

	// NtpServers Comma-separated list of no more than 2 NTP server IP addresses. Any more than the first two are ignored.
	NtpServers *string `json:"ntp_servers,omitempty"`

	// Ocspcheck When set, OpenVPN will attempt to confirm client certificate validity using Online Certificate Status Protocol (OCSP) against the site listed in the OCSP URL field.
	Ocspcheck *bool `json:"ocspcheck,omitempty"`

	// Ocspurl Enter OCSP URL. This is only necessary for `ocspcheck`.
	Ocspurl *string `json:"ocspurl,omitempty"`

	// Passtos When this option is enabled OpenVPN sets the Type-of-Service (TOS) IP header value of tunnel packets to match the encapsulated packet value. This may cause important traffic to be handled faster over the tunnel by intermediate hops at the cost of minor information disclosure.
	Passtos *bool `json:"passtos,omitempty"`

	// PingAction Exit or restart OpenVPN after timeout from remote. This is only necessary for `ping` method.
	PingAction *APIServicesOpenVPNServerCreateJSONBodyPingAction `json:"ping_action,omitempty"`

	// PingActionPush Push ping-restart/ping-exit to VPN client. This is only necessary for `ping` method.
	PingActionPush *bool `json:"ping_action_push,omitempty"`

	// PingActionSeconds Enter ping action seconds. This is only necessary for `ping` method.
	PingActionSeconds *int `json:"ping_action_seconds,omitempty"`

	// PingMethod The Ping Method controls OpenVPN monitoring of peers through the control channel and how it deals with unresponsive peers.
	PingMethod *APIServicesOpenVPNServerCreateJSONBodyPingMethod `json:"ping_method,omitempty"`

	// PingPush Push ping to VPN client. This is only necessary for `ping` method.
	PingPush *bool `json:"ping_push,omitempty"`

	// PingSeconds Enter ping seconds. This is only necessary for `ping` method.
	PingSeconds *int `json:"ping_seconds,omitempty"`

	// Protocol The IP protocol clients will use to connect to this VPN.
	Protocol *APIServicesOpenVPNServerCreateJSONBodyProtocol `json:"protocol,omitempty"`

	// PushBlockoutsidedns Make Windows 10 Clients Block access to DNS servers except across OpenVPN while connected, forcing clients to use only VPN DNS servers.
	PushBlockoutsidedns *bool `json:"push_blockoutsidedns,omitempty"`

	// PushRegisterDns Run "net stop dnscache", "net start dnscache", "ipconfig /flushdns" and "ipconfig /registerdns" on connection initiation.
	PushRegisterDns *bool `json:"push_register_dns,omitempty"`

	// RedirectGateway When a Redirect IPv4 Gateway option is selected the server pushes a message to clients instructing them to forward all traffic for that address family, including Internet traffic, over the VPN tunnel.
	RedirectGateway *bool `json:"redirect_gateway,omitempty"`

	// RedirectGateway6 When a Redirect IPv6 Gateway option is selected the server pushes a message to clients instructing them to forward all traffic for that address family, including Internet traffic, over the VPN tunnel.
	RedirectGateway6 *bool `json:"redirect_gateway6,omitempty"`

	// RemoteNetwork IPv4 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more CIDR ranges. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv4 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetwork *string `json:"remote_network,omitempty"`

	// RemoteNetworkv6 IPv6 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more IP/PREFIX networks. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv6 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetworkv6 *string `json:"remote_networkv6,omitempty"`

	// ServerbridgeDhcp When using `tap` mode for a remote access SSL/TLS VPN, (`server_tls`, `server_user`, `server_tls_user`), additional options to control bridging behavior in OpenVPN and client address assignment.
	// When selected, OpenVPN passes through DHCP to the bridged. In the most common scenario, this is LAN.
	// Using this method connecting clients receive IP addresses from the same DHCP pool used by clients on the LAN.
	ServerbridgeDhcp *string `json:"serverbridge_dhcp,omitempty"`

	// ServerbridgeDhcpEnd Defines a DHCP range from which OpenVPN can assign addresses to clients. If these settings are left blank, OpenVPN passes DHCP through to the bridge interface and it ignores the interface setting above.
	// When set, this range should be within the same subnet as the Bridge Interface (`serverbridge_interface`) but it should not overlap an existing in-use portion of the subnet, such as the current DHCP pool.
	// This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
	ServerbridgeDhcpEnd *string `json:"serverbridge_dhcp_end,omitempty"`

	// ServerbridgeDhcpStart Defines a DHCP range from which OpenVPN can assign addresses to clients. If these settings are left blank, OpenVPN passes DHCP through to the bridge interface and it ignores the interface setting above.
	// When set, this range should be within the same subnet as the Bridge Interface (`serverbridge_interface`) but it should not overlap an existing in-use portion of the subnet, such as the current DHCP pool.
	// This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
	ServerbridgeDhcpStart *string `json:"serverbridge_dhcp_start,omitempty"`

	// ServerbridgeInterface This setting indicates to OpenVPN which interface will be used for the bridge. In most cases this is LAN. This option controls which existing IP address and subnet mask are used by OpenVPN for the bridge. Setting this to none will cause the Server Bridge DHCP (`serverbridge_dhcp_start`, `serverbridge_dhcp_end`) settings below to be ignored.
	ServerbridgeInterface *APIServicesOpenVPNServerCreateJSONBodyServerbridgeInterface `json:"serverbridge_interface,omitempty"`

	// ServerbridgeRoutegateway Makes OpenVPN push the Bridge Interface IPv4 address to connecting clients as a route gateway.
	// When the IPv4 Tunnel Network in OpenVPN is empty for a bridged VPN, connecting clients cannot automatically determine a server-side gateway for use with routes pushed to clients by the server.
	ServerbridgeRoutegateway *bool `json:"serverbridge_routegateway,omitempty"`

	// SharedKey Enter Shared Key. This is only mandatory for mode `p2p_shared_key`. Options are `""` for automatic shared key generation and a raw shared key.
	SharedKey *string `json:"shared_key,omitempty"`

	// Sndrcvbuf Configures a Send and Receive Buffer size for OpenVPN. The default buffer size can be too small in many cases, depending on hardware and network uplink speeds. Finding the best buffer size can take experimentation. To test the best value for a site, start at 512KiB and test higher and lower values until testing results in peak performance.
	Sndrcvbuf *APIServicesOpenVPNServerCreateJSONBodySndrcvbuf `json:"sndrcvbuf,omitempty"`

	// Strictusercn Controls whether the firewall will enforce a strict match between the username supplied by the user and the Common Name of their user certificate when the firewall authenticates a user. When enabled, authentication fails if the two values do not match.
	// This prevents users from using their own credentials with the certificate from a different user and vice versa.
	// This is only necessary for mode `server_tls_user`. Omitting will disable.
	Strictusercn *bool `json:"strictusercn,omitempty"`

	// Tls TLS, or Transport Layer Security, can provide session authentication and encryption to ensure the validity of peers and to protect the control channel. Paste the TLS key. This is not necessary for mode `p2p_shared_key`. Options are `""` or `true` for automatic TLS key generation, `false` to disable TLS or a raw TLS key as a string. Omitting disable TLS configuration.
	Tls *string `json:"tls,omitempty"`

	// TlsType Enter TLS Key Usage Mode. This is not necessary for mode `p2p_shared_key`.
	TlsType *APIServicesOpenVPNServerCreateJSONBodyTlsType `json:"tls_type,omitempty"`

	// TlsauthKeydir The direction in which this VPN endpoint uses the TLS key. The TLS Key Direction must be set to complementary values on the server and clients. The default behavior uses 0 on server instances and 1 on client instances.
	// Enter TLS keydir direction. This is not necessary for mode `p2p_shared_key`.
	TlsauthKeydir *APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydir `json:"tlsauth_keydir,omitempty"`

	// Topology Sets the method OpenVPN uses to allocate addresses for clients in a client/server setup on tun device mode VPNs. The Topology option is relevant only when supplying a virtual adapter IP address to clients using tun mode on IPv4. Some clients may require this even for IPv6, such as OpenVPN Connect, though in reality IPv6 always runs with a subnet topology even when IPv4 uses net30. OpenVPN instances using tap mode always use subnet topology as well.
	Topology *APIServicesOpenVPNServerCreateJSONBodyTopology `json:"topology,omitempty"`

	// TunnelNetwork Virtual IPv4 network used for private communications between this client and the server expressed using CIDR (e.g. 10.0.8.5/24).
	// With subnet topology, enter the client IP address and the subnet mask must match the IPv4 Tunnel Network on the server.
	// With net30 topology, the first network address of the /30 is assumed to be the server address and the second network address will be assigned to the client.
	TunnelNetwork *string `json:"tunnel_network,omitempty"`

	// TunnelNetworkv6 Virtual IPv6 network used for private communications between this client and the server expressed using prefix (e.g. 2001:db9:1:1::100/64).
	// Enter the client IPv6 address and prefix. The prefix must match the IPv6 Tunnel Network prefix on the server.
	TunnelNetworkv6 *string `json:"tunnel_networkv6,omitempty"`

	// UdpFastIo Controls whether or not OpenVPN will use fast I/O operations with UDP writes to its tun or tap device. This behavior optimizes the packet write event loop, improving CPU efficiency by 5% to 10%. Experimental.
	UdpFastIo *bool `json:"udp_fast_io,omitempty"`

	// UsernameAsCommonName Controls whether or not OpenVPN will use the username given by the client in place of the certificate common name (CN) for purposes such as determining Client Specific Overrides. This is only relevant when user authentication is enabled. This is typically the best practice, but not a requirement.
	// This is only necessary for mode `server_user` or `server_tls_user`.
	UsernameAsCommonName *bool `json:"username_as_common_name,omitempty"`

	// VerbosityLevel Configures the amount of detail OpenVPN will log for this instance, which is useful for troubleshooting problems. Higher numbers will result in higher amounts of detail in the log. During normal operation the default selection is ideal. Level `3` is recommended for a good summary of what's happening without being swamped by output. Maximum level `11`. The `default` setting is equivalent to level `1`.
	VerbosityLevel *APIServicesOpenVPNServerCreateJSONBody_VerbosityLevel `json:"verbosity_level,omitempty"`

	// WinsServers Comma-separated list of no more than 2 WINS server IP addresses. Any more than the first two are ignored.
	WinsServers *string `json:"wins_servers,omitempty"`
}

// APIServicesOpenVPNServerCreateJSONBodyAllowCompression defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyAllowCompression string

// APIServicesOpenVPNServerCreateJSONBodyCertDepth defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyCertDepth string

// APIServicesOpenVPNServerCreateJSONBodyCompression defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyCompression string

// APIServicesOpenVPNServerCreateJSONBodyCreateGw defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyCreateGw string

// APIServicesOpenVPNServerCreateJSONBodyDevMode defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyDevMode string

// APIServicesOpenVPNServerCreateJSONBodyDhLength0 defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyDhLength0 = string

// APIServicesOpenVPNServerCreateJSONBodyDhLength1 defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyDhLength1 = int

// APIServicesOpenVPNServerCreateJSONBody_DhLength defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBody_DhLength struct {
	union json.RawMessage
}

// APIServicesOpenVPNServerCreateJSONBodyDigest defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyDigest string

// APIServicesOpenVPNServerCreateJSONBodyEcdhCurve defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyEcdhCurve string

// APIServicesOpenVPNServerCreateJSONBodyExitNotify defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyExitNotify string

// APIServicesOpenVPNServerCreateJSONBodyMode defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyMode string

// APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeType defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyNetbiosNodeType string

// APIServicesOpenVPNServerCreateJSONBodyPingAction defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyPingAction string

// APIServicesOpenVPNServerCreateJSONBodyPingMethod defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyPingMethod string

// APIServicesOpenVPNServerCreateJSONBodyProtocol defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyProtocol string

// APIServicesOpenVPNServerCreateJSONBodyServerbridgeInterface defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyServerbridgeInterface string

// APIServicesOpenVPNServerCreateJSONBodySndrcvbuf defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodySndrcvbuf string

// APIServicesOpenVPNServerCreateJSONBodyTlsType defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyTlsType string

// APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydir defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyTlsauthKeydir string

// APIServicesOpenVPNServerCreateJSONBodyTopology defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyTopology string

// APIServicesOpenVPNServerCreateJSONBodyVerbosityLevel0 defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyVerbosityLevel0 = string

// APIServicesOpenVPNServerCreateJSONBodyVerbosityLevel1 defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBodyVerbosityLevel1 = int

// APIServicesOpenVPNServerCreateJSONBody_VerbosityLevel defines parameters for APIServicesOpenVPNServerCreate.
type APIServicesOpenVPNServerCreateJSONBody_VerbosityLevel struct {
	union json.RawMessage
}

// APIServicesOpenVPNServerUpdateJSONBody defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBody struct {
	// AllowCompression Controls whether or not compression is allowed on the VPN, and how it is handled.
	AllowCompression *APIServicesOpenVPNServerUpdateJSONBodyAllowCompression `json:"allow_compression,omitempty"`

	// Authmode One or more authentication servers to use when checking user credentials. This can be the Local Database (user manager) or it can be a RADIUS or LDAP server configured in the user manager.
	// Selecting multiple entries will use each one in turn. If authentication against an entry fails, the VPN will try the next server. It will continue this process until it has tried all selected entries.
	// This field is only present when using a Server Mode (`server_user` or `server_tls_user`) which requires user authentication.
	Authmode *string `json:"authmode,omitempty"`

	// Caref Specify the unique reference ID of the certificate signing authority.
	Caref *string `json:"caref,omitempty"`

	// CertDepth This option limits the valid length of a certificate chain. The default value limits a chain to One (Client+Server). With that value, if an unauthorized intermediate CA signs a certificate, certificates signed by the rogue intermediate would fail validation. In cases when the certificate stricture requires chaining with intermediates, raise this limit to accommodate the longest allowed chain.
	CertDepth *APIServicesOpenVPNServerUpdateJSONBodyCertDepth `json:"cert_depth,omitempty"`

	// Certref The certificate used by the VPN instance to identify itself to peers. This certificate must contain appropriate properties marking it as a server certificate and not a user or client certificate.
	// Specify the unique reference ID of the certificate revocation list.
	Certref *string `json:"certref,omitempty"`

	// Client2client This option controls whether or not connected clients are able to communicate with one another. To allow this behavior, check the option. When unchecked, clients can only send traffic to the server or destinations beyond the server such as routed networks or the Internet.
	Client2client *bool `json:"client2client,omitempty"`

	// Compression Compression to be used with this VPN instance. This is only necessary for `allow_compression` set to `yes` or `asym`. Compression can potentially dangerous and insecure. Deprecated. Compress tunnel packets using the LZO algorithm.
	Compression *APIServicesOpenVPNServerUpdateJSONBodyCompression `json:"compression,omitempty"`

	// CompressionPush Push the selected Compression setting to connecting clients. This is only necessary for `allow_compression` set to `yes` or `asym`.
	CompressionPush *bool `json:"compression_push,omitempty"`

	// ConcurrentConnections Specifies the number of clients that may be simultaneously connected to this OpenVPN server instance at any given time.
	ConcurrentConnections *int `json:"concurrent_connections,omitempty"`

	// CreateGw If you assign a virtual interface to this OpenVPN server, this setting controls which gateway types will be created.
	CreateGw *APIServicesOpenVPNServerUpdateJSONBodyCreateGw `json:"create_gw,omitempty"`

	// Crlref This optional field is for the Certificate Revocation List (CRL) this tunnel will use to check the validity of peer certificates.
	// A CRL is a list of certificates signed by a CA which are no longer valid. This could be due to a certificate being compromised or lost, such as from a stolen laptop, spyware infection, etc.
	// Specify the unique reference ID of the certificate.
	Crlref *string `json:"crlref,omitempty"`

	// CustomOptions Custom options may be added in using the Custom option box separated by a semicolon (;) and the firewall will pass the custom directives to OpenVPN.
	CustomOptions *string `json:"custom_options,omitempty"`

	// DataCiphers These options define the cryptographic ciphers OpenVPN will use for this VPN. Enter comma sepereted data encryption algorithms (e.g. `AES-256-GCM,AES-128-GCM,CHACHA20-POLY1305`). Data encryption algorithms will be truncated to 19.
	DataCiphers *string `json:"data_ciphers,omitempty"`

	// DataCiphersFallback Enter fallback data encryption algorithm.
	DataCiphersFallback *string `json:"data_ciphers_fallback,omitempty"`

	// Description Enter a description for this VPN instance, for reference.
	Description *string `json:"description,omitempty"`

	// DevMode OpenVPN can run in one of two device modes.
	DevMode *APIServicesOpenVPNServerUpdateJSONBodyDevMode `json:"dev_mode,omitempty"`

	// DhLength The Diffie-Hellman (DH) key exchange parameters are used for establishing a secure communications channel. They may be regenerated at any time, and they are not specific to an OpenVPN instance. When importing an existing OpenVPN configuration these parameters do not need to be copied from the previous server nor does it require generating new parameters. The length of the desired DH parameters may be chosen from the drop-down box, either 1024, 2048, or 4096. There is an additional choice for ECDH Only which disables traditional DH parameters and uses only ECDH.
	DhLength *APIServicesOpenVPNServerUpdateJSONBody_DhLength `json:"dh_length,omitempty"`

	// Digest Selects the message digest algorithm OpenVPN uses for HMAC authentication of incoming packets. This is used for the data channel and if also for the control channel when the tunnel uses a TLS key. The GUI default of SHA256 is a good balance of security and speed.
	// When using AEAD ciphers such as AES-GCM, OpenVPN ignores this value for the data channel since AEAD ciphers already perform authentication. Even with an AEAD cipher, OpenVPN still uses this algorithm to authenticate the control channel when the tunnel uses a TLS key.
	Digest *APIServicesOpenVPNServerUpdateJSONBodyDigest `json:"digest,omitempty"`

	// Disable Disable this override without removing it.
	Disable *bool `json:"disable,omitempty"`

	// DnsDomain Configures a default domain name which clients will append to DNS requests. This can be helpful to ensure name resolution works properly for hosts on the local network where DNS name resolution is used.
	DnsDomain *string `json:"dns_domain,omitempty"`

	// DnsServers Comma-separated list of no more than 4 DNS server IP addresses (i.e. 8.8.8.8). Any more than the first four are ignored. This list is provided to the clent.
	DnsServers *string `json:"dns_servers,omitempty"`

	// DuplicateCn Controls whether or not OpenVPN will allow multiple connections from the same user to work simultaneously. This is only necessary for mode `p2p_shared_key`.
	DuplicateCn *bool `json:"duplicate_cn,omitempty"`

	// DynamicIp For clients on Internet connections where the IP address changes frequently, or mobile users who commonly move between different Internet connections, check this option for more stable connectivity. Where the client IP address is static or rarely changes, not using this option offers a small security improvement.
	DynamicIp *bool `json:"dynamic_ip,omitempty"`

	// EcdhCurve Configures a specific elliptic curve to use for Elliptic Curve Diffie-Hellman key exchanges. This is only for use with ECDH TLS encryption.
	EcdhCurve *APIServicesOpenVPNServerUpdateJSONBodyEcdhCurve `json:"ecdh_curve,omitempty"`

	// Engine If available, this option controls which hardware cryptographic accelerator will be used by OpenVPN. When left unspecified, OpenVPN will choose automatically based on what is available in the operating system to accelerate ciphers OpenVPN wants to use.
	// Some hardware acceleration, such as AES-NI, happens automatically in OpenVPN via OpenSSL and cannot be enabled or disabled by this option.
	// Enter Hardware crypto. Options are `none` and any enabled hardware crypto.
	Engine *string `json:"engine,omitempty"`

	// ExitNotify Controls whether or not OpenVPN will send an explicit exit notification to connected UDP clients or peers when restarting or shutting down. This notification allows peers to immediately disconnect rather than wait for a timeout. This is only relevant to UDP modes as TCP natively supports closing connections.
	ExitNotify *APIServicesOpenVPNServerUpdateJSONBodyExitNotify `json:"exit_notify,omitempty"`

	// InactiveSeconds The amount of time, in seconds, which a client can be inactive before OpenVPN disconnects it for inactivity. OpenVPN bases activity on the last incoming or outgoing data channel packet, not control channel packets.
	// `0` disables this feature.
	InactiveSeconds *int `json:"inactive_seconds,omitempty"`

	// Interface Selects the interface, VIP, or failover group that the OpenVPN instance will use when communicating with peers. This also controls which interface the traffic from the instance will exit. Interface can be provided as Interface ID (e.g. `wan`, `lan`, `opt1`, etc.), Interface physical name (e.g. `igb0`, `vtnet`, etc.) or Interface descriptive name (e.g. `MY_LAN`, `MY_WAN`, etc.). VIP can be provided as description, subnet or uniqid. Failover group can be provided as group name.
	// _Note: If you are using a failover group, the failover group must be configured to use the same_.
	Interface *string `json:"interface,omitempty"`

	// KeepaliveInterval Enter keepalive interval.
	KeepaliveInterval *int `json:"keepalive_interval,omitempty"`

	// KeepaliveTimeout Enter keepalive timeout.
	KeepaliveTimeout *int `json:"keepalive_timeout,omitempty"`

	// LocalNetwork IPv4 server-side networks that will be accessible from this particular client. Expressed as a comma-separated list of one or more CIDR networks.
	// NOTE: Networks do not need to be specified here if they have already been defined on the main server configuration.
	LocalNetwork *string `json:"local_network,omitempty"`

	// LocalNetworkv6 IPv6 server-side networks that will be accessible from this particular client. Expressed as a comma-separated list of one or more IP/PREFIX networks.
	// NOTE: Networks do not need to be specified here if they have already been defined on the main server configuration.
	LocalNetworkv6 *string `json:"local_networkv6,omitempty"`

	// LocalPort The port number upon which OpenVPN will listen for incoming connections from peers. Firewall rules must allow traffic to this port and this port must be specified in the client configuration.
	// The port for each server must be unique for each interface when using a standard UDP or TCP Protocol choice and must be globally unique if using a multihome Protocol.
	// Omitting this will default to next available port.
	LocalPort *int `json:"local_port,omitempty"`

	// Mode The role for the server, which specifies how peers connect to a server instance. Changing this also affects which options the GUI displays on the rest of the page.
	Mode *APIServicesOpenVPNServerUpdateJSONBodyMode `json:"mode,omitempty"`

	// NcpEnable Enable Data Encryption Negotiation. Disabling this feature is deprecated. Omitting will enable.
	NcpEnable *bool `json:"ncp_enable,omitempty"`

	// NetbiosEnable Enable NetBIOS over TCP/IP. If this option is not set, all NetBIOS-over-TCP/IP options (including WINS) will be disabled.
	NetbiosEnable *bool `json:"netbios_enable,omitempty"`

	// NetbiosNodeType Possible options: b (broadcasts), p (point-to-point name queries to a WINS server), m (broadcast then query name server), and h (query name server, then broadcast). This parameter takes a single letter either b, p, m, or h. Any other string will result in this option being set to none.
	NetbiosNodeType *APIServicesOpenVPNServerUpdateJSONBodyNetbiosNodeType `json:"netbios_node_type,omitempty"`

	// NetbiosScope NetBIOS Scope ID provides an extended naming service for NetBIOS over TCP/IP. The NetBIOS scope ID isolates NetBIOS traffic on a single network to only those nodes with the same NetBIOS scope ID.
	NetbiosScope *string `json:"netbios_scope,omitempty"`

	// NtpServers Comma-separated list of no more than 2 NTP server IP addresses. Any more than the first two are ignored.
	NtpServers *string `json:"ntp_servers,omitempty"`

	// Ocspcheck When set, OpenVPN will attempt to confirm client certificate validity using Online Certificate Status Protocol (OCSP) against the site listed in the OCSP URL field.
	Ocspcheck *bool `json:"ocspcheck,omitempty"`

	// Ocspurl Enter OCSP URL. This is only necessary for `ocspcheck`.
	Ocspurl *string `json:"ocspurl,omitempty"`

	// Passtos When this option is enabled OpenVPN sets the Type-of-Service (TOS) IP header value of tunnel packets to match the encapsulated packet value. This may cause important traffic to be handled faster over the tunnel by intermediate hops at the cost of minor information disclosure.
	Passtos *bool `json:"passtos,omitempty"`

	// PingAction Exit or restart OpenVPN after timeout from remote. This is only necessary for `ping` method.
	PingAction *APIServicesOpenVPNServerUpdateJSONBodyPingAction `json:"ping_action,omitempty"`

	// PingActionPush Push ping-restart/ping-exit to VPN client. This is only necessary for `ping` method.
	PingActionPush *bool `json:"ping_action_push,omitempty"`

	// PingActionSeconds Enter ping action seconds. This is only necessary for `ping` method.
	PingActionSeconds *int `json:"ping_action_seconds,omitempty"`

	// PingMethod The Ping Method controls OpenVPN monitoring of peers through the control channel and how it deals with unresponsive peers.
	PingMethod *APIServicesOpenVPNServerUpdateJSONBodyPingMethod `json:"ping_method,omitempty"`

	// PingPush Push ping to VPN client. This is only necessary for `ping` method.
	PingPush *bool `json:"ping_push,omitempty"`

	// PingSeconds Enter ping seconds. This is only necessary for `ping` method.
	PingSeconds *int `json:"ping_seconds,omitempty"`

	// Protocol The IP protocol clients will use to connect to this VPN.
	Protocol *APIServicesOpenVPNServerUpdateJSONBodyProtocol `json:"protocol,omitempty"`

	// PushBlockoutsidedns Make Windows 10 Clients Block access to DNS servers except across OpenVPN while connected, forcing clients to use only VPN DNS servers.
	PushBlockoutsidedns *bool `json:"push_blockoutsidedns,omitempty"`

	// PushRegisterDns Run "net stop dnscache", "net start dnscache", "ipconfig /flushdns" and "ipconfig /registerdns" on connection initiation.
	PushRegisterDns *bool `json:"push_register_dns,omitempty"`

	// RedirectGateway When a Redirect IPv4 Gateway option is selected the server pushes a message to clients instructing them to forward all traffic for that address family, including Internet traffic, over the VPN tunnel.
	RedirectGateway *bool `json:"redirect_gateway,omitempty"`

	// RedirectGateway6 When a Redirect IPv6 Gateway option is selected the server pushes a message to clients instructing them to forward all traffic for that address family, including Internet traffic, over the VPN tunnel.
	RedirectGateway6 *bool `json:"redirect_gateway6,omitempty"`

	// RemoteNetwork IPv4 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more CIDR ranges. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv4 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetwork *string `json:"remote_network,omitempty"`

	// RemoteNetworkv6 IPv6 client-side networks that will be routed to this client specifically using iroute, so that a site-to-site VPN can be established. Expressed as a comma-separated list of one or more IP/PREFIX networks. May be left blank if there are no client-side networks to be routed.
	// NOTE: Remember to add these subnets to the IPv6 Remote Networks list on the corresponding OpenVPN server settings.
	RemoteNetworkv6 *string `json:"remote_networkv6,omitempty"`

	// ServerbridgeDhcp When using `tap` mode for a remote access SSL/TLS VPN, (`server_tls`, `server_user`, `server_tls_user`), additional options to control bridging behavior in OpenVPN and client address assignment.
	// When selected, OpenVPN passes through DHCP to the bridged. In the most common scenario, this is LAN.
	// Using this method connecting clients receive IP addresses from the same DHCP pool used by clients on the LAN.
	ServerbridgeDhcp *string `json:"serverbridge_dhcp,omitempty"`

	// ServerbridgeDhcpEnd Defines a DHCP range from which OpenVPN can assign addresses to clients. If these settings are left blank, OpenVPN passes DHCP through to the bridge interface and it ignores the interface setting above.
	// When set, this range should be within the same subnet as the Bridge Interface (`serverbridge_interface`) but it should not overlap an existing in-use portion of the subnet, such as the current DHCP pool.
	// This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
	ServerbridgeDhcpEnd *string `json:"serverbridge_dhcp_end,omitempty"`

	// ServerbridgeDhcpStart Defines a DHCP range from which OpenVPN can assign addresses to clients. If these settings are left blank, OpenVPN passes DHCP through to the bridge interface and it ignores the interface setting above.
	// When set, this range should be within the same subnet as the Bridge Interface (`serverbridge_interface`) but it should not overlap an existing in-use portion of the subnet, such as the current DHCP pool.
	// This allows a range of IP addresses to be set aside for use only by OpenVPN clients so they may be contained within a portion of the internal network rather than consuming IP addresses from the existing DHCP pool.
	ServerbridgeDhcpStart *string `json:"serverbridge_dhcp_start,omitempty"`

	// ServerbridgeInterface This setting indicates to OpenVPN which interface will be used for the bridge. In most cases this is LAN. This option controls which existing IP address and subnet mask are used by OpenVPN for the bridge. Setting this to none will cause the Server Bridge DHCP (`serverbridge_dhcp_start`, `serverbridge_dhcp_end`) settings below to be ignored.
	ServerbridgeInterface *APIServicesOpenVPNServerUpdateJSONBodyServerbridgeInterface `json:"serverbridge_interface,omitempty"`

	// ServerbridgeRoutegateway Makes OpenVPN push the Bridge Interface IPv4 address to connecting clients as a route gateway.
	// When the IPv4 Tunnel Network in OpenVPN is empty for a bridged VPN, connecting clients cannot automatically determine a server-side gateway for use with routes pushed to clients by the server.
	ServerbridgeRoutegateway *bool `json:"serverbridge_routegateway,omitempty"`

	// SharedKey Enter Shared Key. This is only mandatory for mode `p2p_shared_key`. Options are `""` for automatic shared key generation and a raw shared key.
	SharedKey *string `json:"shared_key,omitempty"`

	// Sndrcvbuf Configures a Send and Receive Buffer size for OpenVPN. The default buffer size can be too small in many cases, depending on hardware and network uplink speeds. Finding the best buffer size can take experimentation. To test the best value for a site, start at 512KiB and test higher and lower values until testing results in peak performance.
	Sndrcvbuf *APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf `json:"sndrcvbuf,omitempty"`

	// Strictusercn Controls whether the firewall will enforce a strict match between the username supplied by the user and the Common Name of their user certificate when the firewall authenticates a user. When enabled, authentication fails if the two values do not match.
	// This prevents users from using their own credentials with the certificate from a different user and vice versa.
	// This is only necessary for mode `server_tls_user`. Omitting will disable.
	Strictusercn *bool `json:"strictusercn,omitempty"`

	// Tls TLS, or Transport Layer Security, can provide session authentication and encryption to ensure the validity of peers and to protect the control channel. Paste the TLS key. This is not necessary for mode `p2p_shared_key`. Options are `""` or `true` for automatic TLS key generation, `false` to disable TLS or a raw TLS key as a string. Omitting disable TLS configuration.
	Tls *string `json:"tls,omitempty"`

	// TlsType Enter TLS Key Usage Mode. This is not necessary for mode `p2p_shared_key`.
	TlsType *APIServicesOpenVPNServerUpdateJSONBodyTlsType `json:"tls_type,omitempty"`

	// TlsauthKeydir The direction in which this VPN endpoint uses the TLS key. The TLS Key Direction must be set to complementary values on the server and clients. The default behavior uses 0 on server instances and 1 on client instances.
	// Enter TLS keydir direction. This is not necessary for mode `p2p_shared_key`.
	TlsauthKeydir *APIServicesOpenVPNServerUpdateJSONBodyTlsauthKeydir `json:"tlsauth_keydir,omitempty"`

	// Topology Sets the method OpenVPN uses to allocate addresses for clients in a client/server setup on tun device mode VPNs. The Topology option is relevant only when supplying a virtual adapter IP address to clients using tun mode on IPv4. Some clients may require this even for IPv6, such as OpenVPN Connect, though in reality IPv6 always runs with a subnet topology even when IPv4 uses net30. OpenVPN instances using tap mode always use subnet topology as well.
	Topology *APIServicesOpenVPNServerUpdateJSONBodyTopology `json:"topology,omitempty"`

	// TunnelNetwork Virtual IPv4 network used for private communications between this client and the server expressed using CIDR (e.g. 10.0.8.5/24).
	// With subnet topology, enter the client IP address and the subnet mask must match the IPv4 Tunnel Network on the server.
	// With net30 topology, the first network address of the /30 is assumed to be the server address and the second network address will be assigned to the client.
	TunnelNetwork *string `json:"tunnel_network,omitempty"`

	// TunnelNetworkv6 Virtual IPv6 network used for private communications between this client and the server expressed using prefix (e.g. 2001:db9:1:1::100/64).
	// Enter the client IPv6 address and prefix. The prefix must match the IPv6 Tunnel Network prefix on the server.
	TunnelNetworkv6 *string `json:"tunnel_networkv6,omitempty"`

	// UdpFastIo Controls whether or not OpenVPN will use fast I/O operations with UDP writes to its tun or tap device. This behavior optimizes the packet write event loop, improving CPU efficiency by 5% to 10%. Experimental.
	UdpFastIo *bool `json:"udp_fast_io,omitempty"`

	// UsernameAsCommonName Controls whether or not OpenVPN will use the username given by the client in place of the certificate common name (CN) for purposes such as determining Client Specific Overrides. This is only relevant when user authentication is enabled. This is typically the best practice, but not a requirement.
	// This is only necessary for mode `server_user` or `server_tls_user`.
	UsernameAsCommonName *bool `json:"username_as_common_name,omitempty"`

	// VerbosityLevel Configures the amount of detail OpenVPN will log for this instance, which is useful for troubleshooting problems. Higher numbers will result in higher amounts of detail in the log. During normal operation the default selection is ideal. Level `3` is recommended for a good summary of what's happening without being swamped by output. Maximum level `11`. The `default` setting is equivalent to level `1`.
	VerbosityLevel *APIServicesOpenVPNServerUpdateJSONBody_VerbosityLevel `json:"verbosity_level,omitempty"`

	// Vpnid This id indicates the id of the server you want to delete. This id is static and not an index of an entry in the config array. Best to first get all servers and get the id of the one you want to delete before calling this endpoint.
	Vpnid string `json:"vpnid"`

	// WinsServers Comma-separated list of no more than 2 WINS server IP addresses. Any more than the first two are ignored.
	WinsServers *string `json:"wins_servers,omitempty"`
}

// APIServicesOpenVPNServerUpdateParams defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateParams struct {
	// Vpnid This id indicates the id of the server you want to delete. This id is static and not an index of an entry in the config array. Best to first get all servers and get the id of the one you want to delete before calling this endpoint.
	Vpnid struct {
		union json.RawMessage
	} `form:"vpnid" json:"vpnid"`
}

// APIServicesOpenVPNServerUpdateParamsVpnid0 defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateParamsVpnid0 = int

// APIServicesOpenVPNServerUpdateParamsVpnid1 defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateParamsVpnid1 = string

// APIServicesOpenVPNServerUpdateJSONBodyAllowCompression defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyAllowCompression string

// APIServicesOpenVPNServerUpdateJSONBodyCertDepth defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyCertDepth string

// APIServicesOpenVPNServerUpdateJSONBodyCompression defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyCompression string

// APIServicesOpenVPNServerUpdateJSONBodyCreateGw defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyCreateGw string

// APIServicesOpenVPNServerUpdateJSONBodyDevMode defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyDevMode string

// APIServicesOpenVPNServerUpdateJSONBodyDhLength0 defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyDhLength0 = string

// APIServicesOpenVPNServerUpdateJSONBodyDhLength1 defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyDhLength1 = int

// APIServicesOpenVPNServerUpdateJSONBody_DhLength defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBody_DhLength struct {
	union json.RawMessage
}

// APIServicesOpenVPNServerUpdateJSONBodyDigest defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyDigest string

// APIServicesOpenVPNServerUpdateJSONBodyEcdhCurve defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyEcdhCurve string

// APIServicesOpenVPNServerUpdateJSONBodyExitNotify defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyExitNotify string

// APIServicesOpenVPNServerUpdateJSONBodyMode defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyMode string

// APIServicesOpenVPNServerUpdateJSONBodyNetbiosNodeType defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyNetbiosNodeType string

// APIServicesOpenVPNServerUpdateJSONBodyPingAction defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyPingAction string

// APIServicesOpenVPNServerUpdateJSONBodyPingMethod defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyPingMethod string

// APIServicesOpenVPNServerUpdateJSONBodyProtocol defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyProtocol string

// APIServicesOpenVPNServerUpdateJSONBodyServerbridgeInterface defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyServerbridgeInterface string

// APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodySndrcvbuf string

// APIServicesOpenVPNServerUpdateJSONBodyTlsType defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyTlsType string

// APIServicesOpenVPNServerUpdateJSONBodyTlsauthKeydir defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyTlsauthKeydir string

// APIServicesOpenVPNServerUpdateJSONBodyTopology defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyTopology string

// APIServicesOpenVPNServerUpdateJSONBodyVerbosityLevel0 defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyVerbosityLevel0 = string

// APIServicesOpenVPNServerUpdateJSONBodyVerbosityLevel1 defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBodyVerbosityLevel1 = int

// APIServicesOpenVPNServerUpdateJSONBody_VerbosityLevel defines parameters for APIServicesOpenVPNServerUpdate.
type APIServicesOpenVPNServerUpdateJSONBody_VerbosityLevel struct {
	union json.RawMessage
}

// APIServicesRestartCreateJSONBody defines parameters for APIServicesRestartCreate.
type APIServicesRestartCreateJSONBody struct {
	// Service Specify the name of a single service to restart. If this field is not specified, all services  will be restarted.
	Service *string `json:"service,omitempty"`
}

// APIServicesServiceWatchdogUpdateJSONBody defines parameters for APIServicesServiceWatchdogUpdate.
type APIServicesServiceWatchdogUpdateJSONBody struct {
	// Services Services that Service Watchdog will monitor and automatically restart upon crash.
	Services *[]struct {
		// Name Name of the service that Service Watchdog will monitor.
		Name string `json:"name"`

		// Notify Send a notification when Service Watchdog restarts this service.
		Notify *bool `json:"notify,omitempty"`
	} `json:"services,omitempty"`
}

// APIServicesSSHdUpdateJSONBody defines parameters for APIServicesSSHdUpdate.
type APIServicesSSHdUpdateJSONBody struct {
	// Enable Enable the Secure Shell (sshd) service.
	Enable *bool `json:"enable,omitempty"`

	// Port Port the Secure Shell server will bind to.
	Port *int `json:"port,omitempty"`

	// Sshdagentforwarding Enable Secure Shell agent forwarding.
	Sshdagentforwarding *bool `json:"sshdagentforwarding,omitempty"`

	// Sshdkeyonly Secure Shell authentication type. Use `disabled` for password OR public key, `enabled` for public key only, or `both` to require both a password AND public key.
	Sshdkeyonly *APIServicesSSHdUpdateJSONBodySshdkeyonly `json:"sshdkeyonly,omitempty"`
}

// APIServicesSSHdUpdateJSONBodySshdkeyonly defines parameters for APIServicesSSHdUpdate.
type APIServicesSSHdUpdateJSONBodySshdkeyonly string

// APIServicesStopCreateJSONBody defines parameters for APIServicesStopCreate.
type APIServicesStopCreateJSONBody = map[string]interface{}

// APIServicesUnboundAccessListDeleteParams defines parameters for APIServicesUnboundAccessListDelete.
type APIServicesUnboundAccessListDeleteParams struct {
	// Id ID of the access list to delete. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`

	// Apply Specify whether or not the DNS Resolver (Unbound) configuration should be reloaded immediately after. `true` to apply immediately, `false` to keep the changes pending. If `false`, the DNS Resolver (Unbound) configuration must be reloaded manually by calling the /api/v1/services/unbound/apply endpoint.
	Apply *bool `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIServicesUnboundAccessListCreateJSONBody defines parameters for APIServicesUnboundAccessListCreate.
type APIServicesUnboundAccessListCreateJSONBody struct {
	// Aclaction Action this access list will enforce.
	Aclaction APIServicesUnboundAccessListCreateJSONBodyAclaction `json:"aclaction"`

	// Aclname Name for this access list.
	Aclname *string `json:"aclname,omitempty"`

	// Apply Specify whether or not the DNS Resolver (Unbound) configuration should be reloaded immediately after. `true` to apply immediately, `false` to keep the changes pending. If `false`, the DNS Resolver (Unbound) configuration must be reloaded manually by calling the /api/v1/services/unbound/apply endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Description Detailed description for this access list.
	Description *string `json:"description,omitempty"`

	// Row Set networks to match for this access list. This must be an array of access list row objects and must contain at least one object. For more information on access list object fields, see documentation for /api/v1/services/unbound/access_list/row.
	Row []map[string]interface{} `json:"row"`
}

// APIServicesUnboundAccessListCreateJSONBodyAclaction defines parameters for APIServicesUnboundAccessListCreate.
type APIServicesUnboundAccessListCreateJSONBodyAclaction string

// APIServicesUnboundAccessListUpdateJSONBody defines parameters for APIServicesUnboundAccessListUpdate.
type APIServicesUnboundAccessListUpdateJSONBody struct {
	// Aclaction Action this access list will enforce.
	Aclaction *APIServicesUnboundAccessListUpdateJSONBodyAclaction `json:"aclaction,omitempty"`

	// Aclname Name for this access list.
	Aclname *string `json:"aclname,omitempty"`

	// Apply Specify whether or not the DNS Resolver (Unbound) configuration should be reloaded immediately after. `true` to apply immediately, `false` to keep the changes pending. If `false`, the DNS Resolver (Unbound) configuration must be reloaded manually by calling the /api/v1/services/unbound/apply endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Description Detailed description for this access list.
	Description *string `json:"description,omitempty"`

	// Id ID of the access list to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// Row Set networks to match for this access list. This must be an array of access list row objects and must contain at least one object. For more information on access list object fields, see documentation for /api/v1/services/unbound/access_list/row. Existing values will be overwritten.
	Row *[]map[string]interface{} `json:"row,omitempty"`
}

// APIServicesUnboundAccessListUpdateJSONBodyAclaction defines parameters for APIServicesUnboundAccessListUpdate.
type APIServicesUnboundAccessListUpdateJSONBodyAclaction string

// APIServicesUnboundAccessListRowCreateJSONBody defines parameters for APIServicesUnboundAccessListRowCreate.
type APIServicesUnboundAccessListRowCreateJSONBody struct {
	// AclNetwork IPv4 or IPv6 address of the network to add to the access list.
	AclNetwork string `json:"acl_network"`

	// Apply Specify whether or not you would like this access list row to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are creating multiple access list rows at once it Is best to set this to false and apply the changes afterwards using the /api/v1/services/unbound/apply endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Description Description of the access list row (optional)
	Description *string `json:"description,omitempty"`

	// Id ID of the access list to apply this row to. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// Mask Subnet mask of the `acl_network`. This must be a value between `0` and `32` for IPv4 addresses or `0` and `128` or IPv6 addresses.
	Mask int `json:"mask"`
}

// APIServicesUnboundApplyCreateJSONBody defines parameters for APIServicesUnboundApplyCreate.
type APIServicesUnboundApplyCreateJSONBody struct {
	// Async Apply Unbound changes in the background. The Unbound reload status can be polled using a GET request to /api/v1/services/unbound/apply.
	Async *bool `json:"async,omitempty"`
}

// APIServicesUnboundHostOverrideDeleteParams defines parameters for APIServicesUnboundHostOverrideDelete.
type APIServicesUnboundHostOverrideDeleteParams struct {
	// Id ID of the host override to delete. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `form:"id" json:"id"`

	// Apply Specify whether or not you would like this deletion to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are modifying multiple host overrides at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/services/unbound/apply` endpoint.
	Apply *string `form:"apply,omitempty" json:"apply,omitempty"`
}

// APIServicesUnboundHostOverrideCreateJSONBody defines parameters for APIServicesUnboundHostOverrideCreate.
type APIServicesUnboundHostOverrideCreateJSONBody struct {
	// Aliases Host override aliases to associate with this host override. For more information on alias object fields, see documentation for /api/v1/services/unbound/host_override/alias.
	Aliases *[]map[string]interface{} `json:"aliases,omitempty"`

	// Apply Specify whether or not you would like this host override to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are modifying multiple host overrides at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/services/unbound/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description of the host override.
	Descr *string `json:"descr,omitempty"`

	// Domain Domain portion of the host override.
	Domain string `json:"domain"`

	// Host Hostname portion of the host override.
	Host string `json:"host"`

	// Ip IPv4 or IPv6 address this entry will resolve. This can be passed in as a string to resolve a single IP, or an array of strings to resolve multiple IPs. At least 1 value is required.
	Ip []string `json:"ip"`
}

// APIServicesUnboundHostOverrideUpdateJSONBody defines parameters for APIServicesUnboundHostOverrideUpdate.
type APIServicesUnboundHostOverrideUpdateJSONBody struct {
	// Aliases Host override aliases to associate with this host override. For more information on alias object fields, see documentation for /api/v1/services/unbound/host_override/alias. Existing entries will be overwritten.
	Aliases *[]map[string]interface{} `json:"aliases,omitempty"`

	// Apply Specify whether or not you would like this host override to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are modifying multiple host overrides at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/services/unbound/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Descr Description of the host override.
	Descr *string `json:"descr,omitempty"`

	// Domain Domain portion of the host override.
	Domain *string `json:"domain,omitempty"`

	// Host Hostname portion of the host override.
	Host *string `json:"host,omitempty"`

	// Id ID of the host override to update. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`

	// Ip IPv4 or IPv6 address this entry will resolve. This can be passed in as a string to resolve a single IP, or an array of strings to resolve multiple IPs. At least 1 value is required. Any existing values will be overwritten.
	Ip *[]string `json:"ip,omitempty"`
}

// APIServicesUnboundHostOverrideAliasCreateJSONBody defines parameters for APIServicesUnboundHostOverrideAliasCreate.
type APIServicesUnboundHostOverrideAliasCreateJSONBody struct {
	// Apply Specify whether or not you would like this host override alias to be applied immediately, or simply written to the configuration to be applied later. Typically, if you are creating multiple host override aliases at once it Is best to set this to false and apply the changes afterwards using the `/api/v1/services/unbound/apply` endpoint.
	Apply *bool `json:"apply,omitempty"`

	// Description Description of the alias.
	Description *string `json:"description,omitempty"`

	// Domain Domain of the alias.
	Domain string `json:"domain"`

	// Host Hostname of the alias.
	Host string `json:"host"`

	// Id ID of the host override to apply this alias to. Refer to the 'Obtaining Object IDs' section in the documentation intro for help obtaining this ID.
	Id int `json:"id"`
}

// APIServicesUnboundHostOverrideFlushUpdateJSONBody defines parameters for APIServicesUnboundHostOverrideFlushUpdate.
type APIServicesUnboundHostOverrideFlushUpdateJSONBody struct {
	// Apply Specify whether or not you would like these host overrides to be applied immediately, or simply written to the configuration to be applied later using the /api/v1/services/unbound/apply endpoint.
	Apply *bool `json:"apply,omitempty"`

	// HostOverrides Host override objects to replace existing host overrides with. Specifying an empty array will remove all existing host overrides. Each object within this array can use any properties available to the /api/v1/services/unbound/host_override endpoint.
	HostOverrides []map[string]interface{} `json:"host_overrides"`
}

// APIServicesWOLSendCreateJSONBody defines parameters for APIServicesWOLSendCreate.
type APIServicesWOLSendCreateJSONBody struct {
	// Interface Interface to which the host to be woken is connected.
	Interface string `json:"interface"`

	// Mac MAC address of the host to be woken.
	Mac string `json:"mac"`
}

// APIStatusCARPUpdateJSONBody defines parameters for APIStatusCARPUpdate.
type APIStatusCARPUpdateJSONBody struct {
	// Enable Enable or disable CARP.
	Enable *bool `json:"enable,omitempty"`

	// MaintenanceMode Enable or disable CARP maintenance mode.
	MaintenanceMode *bool `json:"maintenance_mode,omitempty"`
}

// APIStatusLogSettingsUpdateJSONBody defines parameters for APIStatusLogSettingsUpdate.
type APIStatusLogSettingsUpdateJSONBody struct {
	// Auth Send authentication logs to the remote log server. This field is only available if `enable` is set to `True`.
	Auth *bool `json:"auth,omitempty"`

	// Dhcp Send DHCP logs to the remote log server. This field is only available if `enable` is set to `True`.
	Dhcp *bool `json:"dhcp,omitempty"`

	// Disablelocallogging Disable writing log files to the local disk. This will also disable Login Protection!
	Disablelocallogging *bool `json:"disablelocallogging,omitempty"`

	// Dpinger Send gateway logs to the remote log server. This field is only available if `enable` is set to `True`.
	Dpinger *bool `json:"dpinger,omitempty"`

	// Enable Send logs to remote syslog servers.
	Enable *bool `json:"enable,omitempty"`

	// Filter Send firewall logs to the remote log server. This field is only available if `enable` is set to `True`.
	Filter *bool `json:"filter,omitempty"`

	// Filterdescriptions Show the applied rule description below or in the firewall log rows. `0` to not display descriptions, `1` to display as a column, or `2` to display as a separate row.
	Filterdescriptions *APIStatusLogSettingsUpdateJSONBodyFilterdescriptions `json:"filterdescriptions,omitempty"`

	// Format The logging format for syslog to use.
	Format *APIStatusLogSettingsUpdateJSONBodyFormat `json:"format,omitempty"`

	// Hostapd Send wireless logs to the remote log server. This field is only available if `enable` is set to `True`.
	Hostapd *bool `json:"hostapd,omitempty"`

	// Ipprotocol Selects either the IPv4 or IPv6 address of the interface specified in `sourceip`.
	Ipprotocol *APIStatusLogSettingsUpdateJSONBodyIpprotocol `json:"ipprotocol,omitempty"`

	// Logall Send all logs to the remote log server. This field is only available if `enable` is set to `True`.
	Logall *bool `json:"logall,omitempty"`

	// Logcompressiontype Type of compression to use when rotating log files.
	Logcompressiontype *APIStatusLogSettingsUpdateJSONBodyLogcompressiontype `json:"logcompressiontype,omitempty"`

	// Logconfigchanges Generate log entries when making changes to the configuration.
	Logconfigchanges *bool `json:"logconfigchanges,omitempty"`

	// Logfilesize Size (in bytes) at which logs will be rotated.
	Logfilesize *int `json:"logfilesize,omitempty"`

	// Nentries Number of log entries to display in the webConfigurator.
	Nentries *int `json:"nentries,omitempty"`

	// Nologbogons Disable logging packets blocked by 'Block Bogon Networks' rules.
	Nologbogons *bool `json:"nologbogons,omitempty"`

	// Nologdefaultblock Disable logging packets blocked by default firewall rules.
	Nologdefaultblock *bool `json:"nologdefaultblock,omitempty"`

	// Nologdefaultpass Disable logging packets passed by default firewall rules.
	Nologdefaultpass *bool `json:"nologdefaultpass,omitempty"`

	// Nolognginx Disable logging errors from the web server process.
	Nolognginx *bool `json:"nolognginx,omitempty"`

	// Nologprivatenets Disable logging packets blocked by 'Block Private Networks' rules.
	Nologprivatenets *bool `json:"nologprivatenets,omitempty"`

	// Ntpd Send NTP logs to the remote log server. This field is only available if `enable` is set to `True`.
	Ntpd *bool `json:"ntpd,omitempty"`

	// Portalauth Send captive portal logs to the remote log server. This field is only available if `enable` is set to `True`.
	Portalauth *bool `json:"portalauth,omitempty"`

	// Ppp Send PPP logs to the remote log server. This field is only available if `enable` is set to `True`.
	Ppp *bool `json:"ppp,omitempty"`

	// Rawfilter Show logs generated by the packet filter without any formatting.
	Rawfilter *bool `json:"rawfilter,omitempty"`

	// Remoteserver The remote server to send logs to. This field is only available if `enable` is set to `True`.
	Remoteserver *string `json:"remoteserver,omitempty"`

	// Remoteserver2 An additional remote server to send logs to. This field is only available if a `remoteserver` value is set.
	Remoteserver2 *string `json:"remoteserver2,omitempty"`

	// Remoteserver3 An additional remote server to send logs to. This field is only available if a `remoteserver2` value is set.
	Remoteserver3 *string `json:"remoteserver3,omitempty"`

	// Resolver Send DNS logs to the remote log server. This field is only available if `enable` is set to `True`.
	Resolver *bool `json:"resolver,omitempty"`

	// Reverse View logs in reverse order.
	Reverse *bool `json:"reverse,omitempty"`

	// Rotatecount Number of log files to keep before the oldest copy is removed on rotation.
	Rotatecount *int `json:"rotatecount,omitempty"`

	// Routing Send routing logs to the remote log server. This field is only available if `enable` is set to `True`.
	Routing *bool `json:"routing,omitempty"`

	// Sourceip Interface to send remote logs from. You may use the real interface ID (e.g. igb0), the descriptive interface name, the pfSense ID (e.g. wan, lan, optx) or `any` to use any interface.
	Sourceip *string `json:"sourceip,omitempty"`

	// System Send system logs to the remote log server. This field is only available if `enable` is set to `True`.
	System *bool `json:"system,omitempty"`

	// Vpn Send VPN logs to the remote log server. This field is only available if `enable` is set to `True`.
	Vpn *bool `json:"vpn,omitempty"`
}

// APIStatusLogSettingsUpdateJSONBodyFilterdescriptions defines parameters for APIStatusLogSettingsUpdate.
type APIStatusLogSettingsUpdateJSONBodyFilterdescriptions int

// APIStatusLogSettingsUpdateJSONBodyFormat defines parameters for APIStatusLogSettingsUpdate.
type APIStatusLogSettingsUpdateJSONBodyFormat string

// APIStatusLogSettingsUpdateJSONBodyIpprotocol defines parameters for APIStatusLogSettingsUpdate.
type APIStatusLogSettingsUpdateJSONBodyIpprotocol string

// APIStatusLogSettingsUpdateJSONBodyLogcompressiontype defines parameters for APIStatusLogSettingsUpdate.
type APIStatusLogSettingsUpdateJSONBodyLogcompressiontype string

// APISystemAPIUpdateJSONBody defines parameters for APISystemAPIUpdate.
type APISystemAPIUpdateJSONBody struct {
	// AccessList Set the API access list. This must be an array of IPv4 or IPv6 subnets in CIDR notation. If left blank, all subnets will be allowed.
	AccessList *[]string `json:"access_list,omitempty"`

	// AllowOptions Enable or disable the Options request method from API responses. If set to `true`, the API will answer Options requests. If set to `false`, the API will return a 405 Method Not Allowed response.
	AllowOptions *bool `json:"allow_options,omitempty"`

	// AllowedInterfaces Interfaces that are allowed to answer API requests. Each item in the array must be a valid real interface ID (e.g. `em0`), pfSense interface ID, (e.g. `opt1`), or descriptive interface name (e.g. `"WAN"`). Additionally you may add `localhost` to allow local API requests, or add `any` to allow any interface to answer API requests. It is best practice to only allow inside interfaces to answer API requests, or use firewall rules to filter requests made to outside interfaces.
	AllowedInterfaces *[]string `json:"allowed_interfaces,omitempty"`

	// Authmode Update the API authentication mode.
	Authmode *APISystemAPIUpdateJSONBodyAuthmode `json:"authmode,omitempty"`

	// CustomHeaders Custom response headers for the API to return in API responses. To revert custom headers to the default state, simply pass in an empty array. In most cases, custom headers are not necessary. An example use case for custom headers is setting CORS policy headers  required by some frontend web applications.
	CustomHeaders *[]map[string]interface{} `json:"custom_headers,omitempty"`

	// Enable Enable or disable the API. If set to `false`, the API will be disabled and you will no longer be able to  API requests until the API enabled via the webConfigurator.
	Enable *bool `json:"enable,omitempty"`

	// EnableLoginProtection Enable or disable Login Protection for API authentication requests.
	EnableLoginProtection *bool `json:"enable_login_protection,omitempty"`

	// Hasync Enable or disable HA sync for API configurations.
	Hasync *bool `json:"hasync,omitempty"`

	// HasyncHosts Hosts to sync API configurations to. This must be an array of IP addresses or FQDN strings. At least one host must be specified when `hasync` is set to `true`.
	HasyncHosts *[]string `json:"hasync_hosts,omitempty"`

	// HasyncPassword Password of the username to authenticate as for HA synchronization. This parameter is required when  `hasync` is set to `true`.
	HasyncPassword *string `json:"hasync_password,omitempty"`

	// HasyncUsername Username to authenticate as for HA synchronization. This user must be present on ALL hosts specified in the `hasync_hosts` value and must hold the `page-system-api` privilege. This parameter is required when `hasync` is set to `true`.
	HasyncUsername *string `json:"hasync_username,omitempty"`

	// JwtExp JWT expiration interval (in seconds). This parameter is only available when `authmode` is set  to `jwt`.
	JwtExp *int `json:"jwt_exp,omitempty"`

	// Keybytes Key byte strength to use when generating API tokens. This parameter is only available when `authmode` is  set to `token`.
	Keybytes *APISystemAPIUpdateJSONBodyKeybytes `json:"keybytes,omitempty"`

	// Keyhash Hashing algorithm to use when generating API tokens. This parameter is only available when `authmode` is  set to `token`.
	Keyhash *APISystemAPIUpdateJSONBodyKeyhash `json:"keyhash,omitempty"`

	// LogSuccessfulAuth Enable or disable logging successful API authentication requests in syslog. This field is only applicable if `enable_login_protection` is set to `true`.
	LogSuccessfulAuth *bool `json:"log_successful_auth,omitempty"`

	// Persist Enable or disable persistent API configuration. If set to `true`, the API will store a copy of the API configuration in the case a system update or package update is needed and/or the API configuration must be restored. If set to `false`, all API configuration will be lost whenever the system updates, the package is updated, or the package is deleted. It is recommended to keep this feature enabled.
	Persist *bool `json:"persist,omitempty"`

	// Readonly Enable or disable read-only API mode. If `true`, the API will only respond to read requests and modifications to configuration will not be allowed.
	Readonly *bool `json:"readonly,omitempty"`
}

// APISystemAPIUpdateJSONBodyAuthmode defines parameters for APISystemAPIUpdate.
type APISystemAPIUpdateJSONBodyAuthmode string

// APISystemAPIUpdateJSONBodyKeybytes defines parameters for APISystemAPIUpdate.
type APISystemAPIUpdateJSONBodyKeybytes int

// APISystemAPIUpdateJSONBodyKeyhash defines parameters for APISystemAPIUpdate.
type APISystemAPIUpdateJSONBodyKeyhash string

// APISystemARPDeleteParams defines parameters for APISystemARPDelete.
type APISystemARPDeleteParams struct {
	// Ip IPv4 address to delete from the ARP table.
	Ip string `form:"ip" json:"ip"`
}

// APISystemCADeleteParams defines parameters for APISystemCADelete.
type APISystemCADeleteParams struct {
	// Refid The `refid` of the existing CA to delete.
	Refid string `form:"refid" json:"refid"`
}

// APISystemCACreateJSONBody defines parameters for APISystemCACreate.
type APISystemCACreateJSONBody struct {
	// Caref Specify the unique reference ID of the root certificate signing authority for the intermediate CA certificate. This parameter is required when `method` is set to `intermediate`.
	Caref *string `json:"caref,omitempty"`

	// Crt Base64 encoded PEM CA certificate to import. This parameter is required when `method` is set to `existing`.
	Crt *string `json:"crt,omitempty"`

	// Descr Descriptive name for the CA.
	Descr string `json:"descr"`

	// DigestAlg Digest algorithm to use. This parameter is required when `method` is set to `internal` or `intermediate`. _Note: options are subject to change, when in doubt, check the pfSense webConfigurator options for this field._
	DigestAlg *APISystemCACreateJSONBodyDigestAlg `json:"digest_alg,omitempty"`

	// DnCity City or locale for this CA. This parameter is only available when `method` is set to `internal` or `intermediate`.
	DnCity *string `json:"dn_city,omitempty"`

	// DnCommonname Common name of this CA. In mose cases, this will be a hostname. This parameter is required when `method` is set to `internal` or `intermediate`.
	DnCommonname *string `json:"dn_commonname,omitempty"`

	// DnCountry Country code for this CA. This must be a known 2-digit country code. This parameter is only available when `method` is set to `internal` or `intermediate`.
	DnCountry *string `json:"dn_country,omitempty"`

	// DnOrganization The managing organization for this CA. This parameter is only available when `method` is set to `internal` or `intermediate`.
	DnOrganization *string `json:"dn_organization,omitempty"`

	// DnOrganizationalunit The managing organizational unit or team for this CA. This parameter is only available when `method` is set to `internal` or `intermediate`.
	DnOrganizationalunit *string `json:"dn_organizationalunit,omitempty"`

	// DnState State or province for this CA. This parameter is only available when `method` is set to `internal` or `intermediate`.
	DnState *string `json:"dn_state,omitempty"`

	// Ecname Elliptic curve name to use when generating the private key. It is recommended to view options and compatibility within the pfSense webConfigurator or manually through OpenSSL as certain curves are not compatible in some circumstances. This parameter is required when `method` is set to `internal` or `intermediate` AND `keytype` is set to `ECDSA`. _Note: options are subject to change, when in doubt, check the pfSense webConfigurator options for this field._
	Ecname *string `json:"ecname,omitempty"`

	// Keylen Private key length to generate. This parameter is required when `method` is set to `internal` or `intermediate` AND `keytype` is set to `RSA`.
	Keylen *APISystemCACreateJSONBodyKeylen `json:"keylen,omitempty"`

	// Keytype Specify the private key type to generate. This parameter is required when `method` is set to `internal` or `intermediate`.
	Keytype *APISystemCACreateJSONBodyKeytype `json:"keytype,omitempty"`

	// Lifetime Number of days you would like this CA to be valid for. This must be below OpenSSL's maximum lifetime value (around `12000` days). This parameter is required when `method` is set to `internal` or `intermediate`. _Note: maximum value is subject to change, when in doubt, check the pfSense webConfigurator options for this field._
	Lifetime *int `json:"lifetime,omitempty"`

	// Method Method used to add the CA. _Note: previous releases referred to the `existing` method as `import`. You may use `existing` or `import` interchangeably._
	Method APISystemCACreateJSONBodyMethod `json:"method"`

	// Prv Corresponding Base64 encoded CA certificate key. This parameter is only available when `method` is set to `existing`.
	Prv *string `json:"prv,omitempty"`

	// Randomserial Use randomized serial numbers for certificates signed by this CA.
	Randomserial *bool `json:"randomserial,omitempty"`

	// Serial Set the serial number to be assigned to the next certificate signed by this CA. This field is only available when `method` is set to `existing`.
	Serial *int `json:"serial,omitempty"`

	// Trust Trust this CA across the entire system.
	Trust *bool `json:"trust,omitempty"`
}

// APISystemCACreateJSONBodyDigestAlg defines parameters for APISystemCACreate.
type APISystemCACreateJSONBodyDigestAlg string

// APISystemCACreateJSONBodyKeylen defines parameters for APISystemCACreate.
type APISystemCACreateJSONBodyKeylen int

// APISystemCACreateJSONBodyKeytype defines parameters for APISystemCACreate.
type APISystemCACreateJSONBodyKeytype string

// APISystemCACreateJSONBodyMethod defines parameters for APISystemCACreate.
type APISystemCACreateJSONBodyMethod string

// APISystemCertificateDeleteParams defines parameters for APISystemCertificateDelete.
type APISystemCertificateDeleteParams struct {
	// Refid The `refid` of the certificate to delete.
	Refid string `form:"refid" json:"refid"`
}

// APISystemCertificateCreateJSONBody defines parameters for APISystemCertificateCreate.
type APISystemCertificateCreateJSONBody struct {
	// Active Set this certificate as the active certificate used by the webConfigurator. This parameter is only available when `type` is set to `server` or `method` is set to `existing`.
	Active *bool `json:"active,omitempty"`

	// Altnames Subject alternative names to list in this certificate. This must be an array of objects with each object containing a alt name type as the key and the alt name value as the value. Supported alt name types are `dns` for FQDNs, `ip` for IP addresses, `uri` for URLs, and `email` for email addresses. This parameter is only available when `method` is set to `internal`.
	Altnames *[]map[string]interface{} `json:"altnames,omitempty"`

	// Caref Unique reference ID of the existing certificate signing authority to use for the certificate. This parameter is required when `method` is set to `internal`.
	Caref *string `json:"caref,omitempty"`

	// Crt Base64 encoded PEM certificate to import. This parameter is required when `method` is set to `existing`. _Note: previous releases referred to the `crt` parameter as `cert`. Both `crt` and `cert` can be used interchangeably._
	Crt *string `json:"crt,omitempty"`

	// Descr Descriptive name for the certificate.
	Descr string `json:"descr"`

	// DigestAlg Digest algorithm to use. This parameter is required when `method` is set to `internal`. _Note: options are subject to change, when in doubt, check the pfSense webConfigurator options for this field._
	DigestAlg *APISystemCertificateCreateJSONBodyDigestAlg `json:"digest_alg,omitempty"`

	// DnCity City or locale for this certificate. This parameter is only available when `method` is set to `internal`.
	DnCity *string `json:"dn_city,omitempty"`

	// DnCommonname Common name of this certificate. In mose cases, this will be a hostname. This parameter is required when `method` is set to `internal`.
	DnCommonname *string `json:"dn_commonname,omitempty"`

	// DnCountry Country code for this certificate. This must be a known 2-digit country code. This parameter is only available when `method` is set to `internal`.
	DnCountry *string `json:"dn_country,omitempty"`

	// DnOrganization The managing organization for this certificate. This parameter is only available when `method` is set to `internal`.
	DnOrganization *string `json:"dn_organization,omitempty"`

	// DnOrganizationalunit The managing organizational unit or team for this certificate. This parameter is only available when  `method` is set to `internal`.
	DnOrganizationalunit *string `json:"dn_organizationalunit,omitempty"`

	// DnState State or province for this certificate. This parameter is only available when `method` is set to `internal`.
	DnState *string `json:"dn_state,omitempty"`

	// Ecname Elliptic curve name to use when generating the private key. It is recommended to view options and compatibility within the pfSense webConfigurator or manually through OpenSSL as certain curves are not compatible in some circumstances. This parameter is required when `method` is set to `internal` AND `keytype` is set to `ECDSA`. _Note: options are subject to change, when in doubt, check the pfSense webConfigurator options for this parameter._
	Ecname *string `json:"ecname,omitempty"`

	// Keylen Specify the private key length to generate. This parameter is required when `method` is set to `internal` AND `keytype` is set to `RSA`.
	Keylen *APISystemCertificateCreateJSONBodyKeylen `json:"keylen,omitempty"`

	// Keytype Private key type to generate. Options are `RSA` or `ECDSA`. This parameter is required when `method` is set to `internal`.
	Keytype *APISystemCertificateCreateJSONBodyKeytype `json:"keytype,omitempty"`

	// Lifetime Number of days you would like this certificate to be valid for. This must be below OpenSSL's maximum lifetime value (around `12000` days). This parameter is required when `method` is set  to `internal`. _Note: maximum value is subject to change, when in doubt,  check the pfSense webConfigurator options for this parameter._
	Lifetime *int `json:"lifetime,omitempty"`

	// Method Method used to add the certificate. _Note: previous releases referred to the `existing` method as `import`.  You may use `existing` or `import` interchangeably._
	Method APISystemCertificateCreateJSONBodyMethod `json:"method"`

	// Prv Corresponding Base64 encoded certificate key. This parameter is required when `method` is set to `existing`. _Note: previous releases referred to the `prv` parameter as `key`. Both `prv` and `key` can be used interchangeably._
	Prv *string `json:"prv,omitempty"`

	// Type Type of certificate to generate. This parameter is required when `method` is set to `internal`.
	Type *APISystemCertificateCreateJSONBodyType `json:"type,omitempty"`
}

// APISystemCertificateCreateJSONBodyDigestAlg defines parameters for APISystemCertificateCreate.
type APISystemCertificateCreateJSONBodyDigestAlg string

// APISystemCertificateCreateJSONBodyKeylen defines parameters for APISystemCertificateCreate.
type APISystemCertificateCreateJSONBodyKeylen int

// APISystemCertificateCreateJSONBodyKeytype defines parameters for APISystemCertificateCreate.
type APISystemCertificateCreateJSONBodyKeytype string

// APISystemCertificateCreateJSONBodyMethod defines parameters for APISystemCertificateCreate.
type APISystemCertificateCreateJSONBodyMethod string

// APISystemCertificateCreateJSONBodyType defines parameters for APISystemCertificateCreate.
type APISystemCertificateCreateJSONBodyType string

// APISystemCertificateUpdateJSONBody defines parameters for APISystemCertificateUpdate.
type APISystemCertificateUpdateJSONBody struct {
	// Active Set this certificate as the active certificate used by the webConfigurator.
	Active *bool `json:"active,omitempty"`

	// Crt Base64 encoded PEM certificate to import. _Note: previous releases referred to the `crt` parameter as `cert`. Both `crt` and `cert` can be used interchangeably._
	Crt string `json:"crt"`

	// Descr Descriptive name for the certificate.
	Descr *string `json:"descr,omitempty"`

	// Prv Corresponding Base64 encoded certificate key. _Note: previous releases referred to the `prv` parameter as `key`. Both `prv` and `key` can be used interchangeably._
	Prv string `json:"prv"`

	// Refid ID of the certificate to be updated.
	Refid string `json:"refid"`
}

// APISystemConsoleUpdateJSONBody defines parameters for APISystemConsoleUpdate.
type APISystemConsoleUpdateJSONBody struct {
	// Disableconsolemenu Enable or disable console password protection.
	Disableconsolemenu *bool `json:"disableconsolemenu,omitempty"`
}

// APISystemCRLDeleteParams defines parameters for APISystemCRLDelete.
type APISystemCRLDeleteParams struct {
	// Refid The `refid` of the existing certificate revocation list to delete.
	Refid string `form:"refid" json:"refid"`
}

// APISystemCRLCreateJSONBody defines parameters for APISystemCRLCreate.
type APISystemCRLCreateJSONBody struct {
	// Caref Specify the unique reference ID of the certificate signing authority for the certificate revocation list.
	Caref string `json:"caref"`

	// CrlData Base64 encoded PEM certificate revocation list to import. This parameter is required when `method` is set to `existing`. _Note: Import Certificate Revocation List in X.509 CRL format. `-----BEGIN X509 CRL-----[A bunch of random-looking base64-encoded data]-----END X509 CRL-----`._
	CrlData *string `json:"crl_data,omitempty"`

	// Descr Descriptive name for the certificate revocation list.
	Descr string `json:"descr"`

	// Lifetime Number of days you would like this certificate revocation list to be valid for. This must be below OpenSSL's maximum lifetime value (around `12000` days). This parameter is  only available when `method` is set to `internal`. _Note: maximum  value is subject to change, when in doubt, check the pfSense webConfigurator  options for this field._
	Lifetime *int `json:"lifetime,omitempty"`

	// Method Method used to add the certificate revocation list. _Note: `internal` method will create new certificate revocation list for CA provided in `caref`_.
	Method APISystemCRLCreateJSONBodyMethod `json:"method"`

	// Serial Serial number to be assigned to the next certificate revocation list. This parameter is only available when `method` is set to `internal`.
	Serial *int `json:"serial,omitempty"`
}

// APISystemCRLCreateJSONBodyMethod defines parameters for APISystemCRLCreate.
type APISystemCRLCreateJSONBodyMethod string

// APISystemDNSUpdateJSONBody defines parameters for APISystemDNSUpdate.
type APISystemDNSUpdateJSONBody struct {
	// Dnsallowoverride Allow or deny DNS server list to be overridden by DHCP/PPP on WAN or remote OpenVPN server.
	Dnsallowoverride *bool `json:"dnsallowoverride,omitempty"`

	// Dnslocalhost Enable or disable system DNS resolution via local DNS services.
	Dnslocalhost *bool `json:"dnslocalhost,omitempty"`

	// Dnsserver DNS servers to assign the system. Existing values will be overwritten.
	Dnsserver *[]string `json:"dnsserver,omitempty"`
}

// APISystemDNSServerDeleteParams defines parameters for APISystemDNSServerDelete.
type APISystemDNSServerDeleteParams struct {
	// Dnsserver IP of the system DNS servers to remove.
	Dnsserver string `form:"dnsserver" json:"dnsserver"`
}

// APISystemDNSServerCreateJSONBody defines parameters for APISystemDNSServerCreate.
type APISystemDNSServerCreateJSONBody struct {
	// Dnsserver IP(s) of the DNS servers to add.
	Dnsserver *[]string `json:"dnsserver,omitempty"`
}

// APISystemHostnameUpdateJSONBody defines parameters for APISystemHostnameUpdate.
type APISystemHostnameUpdateJSONBody struct {
	// Domain Domain portion of the system hostname. Do not specify to retain existing value.
	Domain *string `json:"domain,omitempty"`

	// Hostname Hostname portion of the system hostname. Do not specify to retain existing value.
	Hostname *string `json:"hostname,omitempty"`
}

// APISystemNotificationsEmailUpdateJSONBody defines parameters for APISystemNotificationsEmailUpdate.
type APISystemNotificationsEmailUpdateJSONBody struct {
	// AuthenticationMechanism Authentication type to use for connections to the remote SMTP server.
	AuthenticationMechanism APISystemNotificationsEmailUpdateJSONBodyAuthenticationMechanism `json:"authentication_mechanism"`

	// Disabled Enable or disable email notifications.
	Disabled *bool `json:"disabled,omitempty"`

	// Fromaddress Email address email notifications will be sent from.
	Fromaddress openapi_types.Email `json:"fromaddress"`

	// Ipaddress IP address or hostname of the remote SMTP server.
	Ipaddress string `json:"ipaddress"`

	// Notifyemailaddress Email address email notifications will be sent to.
	Notifyemailaddress openapi_types.Email `json:"notifyemailaddress"`

	// Password Password to use during authentication. This parameter is only available when `authentication_mechanism` is set to `LOGIN`.
	Password *string `json:"password,omitempty"`

	// Port Port of the remote SMTP server.
	Port int `json:"port"`

	// Ssl Enable or disable SMTP over SSL/TLS.
	Ssl *bool `json:"ssl,omitempty"`

	// Sslvalidate Enable or disable certificate verification for SSL/TLS connections.
	Sslvalidate *bool `json:"sslvalidate,omitempty"`

	// Timeout Timeout (in seconds) for connections to the remote SMTP server.
	Timeout *int `json:"timeout,omitempty"`

	// Username Username to use during authentication. This parameter is only available when `authentication_mechanism` is set to `LOGIN`.
	Username *string `json:"username,omitempty"`
}

// APISystemNotificationsEmailUpdateJSONBodyAuthenticationMechanism defines parameters for APISystemNotificationsEmailUpdate.
type APISystemNotificationsEmailUpdateJSONBodyAuthenticationMechanism string

// APISystemPackageDeleteParams defines parameters for APISystemPackageDelete.
type APISystemPackageDeleteParams struct {
	// Name Name of pfSense package to delete. This must be the pfSense package internal name including the  `pfSense-pkg-` prefix. Non-pfSense packages cannot be removed.
	Name string `form:"name" json:"name"`
}

// APISystemPackageReadParams defines parameters for APISystemPackageRead.
type APISystemPackageReadParams struct {
	// All Include all pfSense packages available, even packages that are not installed.
	All *bool `form:"all,omitempty" json:"all,omitempty"`
}

// APISystemPackageCreateJSONBody defines parameters for APISystemPackageCreate.
type APISystemPackageCreateJSONBody struct {
	// Name Name of pfSense package to install. This must be the pfSense package internal name including the  `pfSense-pkg-` prefix.
	Name string `json:"name"`
}

// APISystemTableReadParams defines parameters for APISystemTableRead.
type APISystemTableReadParams struct {
	// Name Name of the table to read. This must be an existing table. If no table name is specified, all tables will be read. Depending on the size of the tables on the system, reading all tables may take a while.
	Name *string `form:"name,omitempty" json:"name,omitempty"`
}

// APISystemTunableDeleteParams defines parameters for APISystemTunableDelete.
type APISystemTunableDeleteParams struct {
	// Id Name of the existing tunable to delete.
	Id string `form:"id" json:"id"`
}

// APISystemTunableCreateJSONBody defines parameters for APISystemTunableCreate.
type APISystemTunableCreateJSONBody struct {
	// Descr Description for this tunable.
	Descr *string `json:"descr,omitempty"`

	// Tunable Name of this tunable. This should be a value recognized by sysctl.
	Tunable string `json:"tunable"`

	// Value Value to assign this tunable.
	Value string `json:"value"`
}

// APISystemTunableUpdateJSONBody defines parameters for APISystemTunableUpdate.
type APISystemTunableUpdateJSONBody struct {
	// Descr Description for this tunable.
	Descr *string `json:"descr,omitempty"`

	// Id Name of the existing tunable to update.
	Id string `json:"id"`

	// Tunable New name to assign this tunable. This should be a value recognized by sysctl.
	Tunable *string `json:"tunable,omitempty"`

	// Value Value to assign this tunable.
	Value *string `json:"value,omitempty"`
}

// APISystemVersionUpgradeReadParams defines parameters for APISystemVersionUpgradeRead.
type APISystemVersionUpgradeReadParams struct {
	// UseCache Use cached upgrade information. This will speed up the response but may reference slightly outdated data. pfSense updates this cache automatically at scheduled intervals.
	UseCache *bool `form:"use_cache,omitempty" json:"use_cache,omitempty"`
}

// APIUserDeleteParams defines parameters for APIUserDelete.
type APIUserDeleteParams struct {
	// Username Username of user to delete.
	Username string `form:"username" json:"username"`
}

// APIUserCreateJSONBody defines parameters for APIUserCreate.
type APIUserCreateJSONBody struct {
	// Authorizedkeys Base64 encoded authorized SSH keys to assign new user.
	Authorizedkeys *string `json:"authorizedkeys,omitempty"`

	// Cert Assign certificates to this user. This must be an array of corresponding user certificate's `refid` values.
	Cert *[]string `json:"cert,omitempty"`

	// Descr Full name of the new user.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable user account upon creation.
	Disabled *bool `json:"disabled,omitempty"`

	// Expires Expiration date for user account in MM/DD/YYYY format.
	Expires *string `json:"expires,omitempty"`

	// Ipsecpsk IPsec pre-shared key to assign new user.
	Ipsecpsk *string `json:"ipsecpsk,omitempty"`

	// Password Password to assign new user.
	Password string `json:"password"`

	// Priv Assign privileges to this user. This must be an array of corresponding pfSense privileges.
	Priv *[]string `json:"priv,omitempty"`

	// Username Username to assign to the new user.
	Username string `json:"username"`
}

// APIUserUpdateJSONBody defines parameters for APIUserUpdate.
type APIUserUpdateJSONBody struct {
	// Authorizedkeys New Base64 encoded authorized SSH keys to assign new user.
	Authorizedkeys *string `json:"authorizedkeys,omitempty"`

	// Cert Assign certificates to this user. This must be an array of corresponding user certificate's `refid` values. Existing values will be overwritten.
	Cert *[]string `json:"cert,omitempty"`

	// Descr New full name of the user.
	Descr *string `json:"descr,omitempty"`

	// Disabled Disable user account.
	Disabled *bool `json:"disabled,omitempty"`

	// Expires New expiration date for user account in MM/DD/YYYY format.
	Expires *string `json:"expires,omitempty"`

	// Ipsecpsk New IPsec pre-shared key to assign new user.
	Ipsecpsk *string `json:"ipsecpsk,omitempty"`

	// Password New password to assign user.
	Password *string `json:"password,omitempty"`

	// Priv Assign privileges to this user. This must be an array of corresponding pfSense privileges. Existing values will be overwritten.
	Priv *[]string `json:"priv,omitempty"`

	// Username Username of the user to update. This field cannot be updated.
	Username string `json:"username"`
}

// APIUserAuthServerDeleteParams defines parameters for APIUserAuthServerDelete.
type APIUserAuthServerDeleteParams struct {
	// Name Name of authentication server to delete.
	Name string `form:"name" json:"name"`
}

// APIUserAuthServerLDAPDeleteParams defines parameters for APIUserAuthServerLDAPDelete.
type APIUserAuthServerLDAPDeleteParams struct {
	// Name Name of the LDAP authentication server to delete.
	Name string `form:"name" json:"name"`
}

// APIUserAuthServerLDAPCreateJSONBody defines parameters for APIUserAuthServerLDAPCreate.
type APIUserAuthServerLDAPCreateJSONBody struct {
	// Active Set this authentication server as the system default.
	Active *bool `json:"active,omitempty"`

	// Host Hostname or IP of the LDAP server to query.
	Host string `json:"host"`

	// LdapAttrGroup LDAP group naming attribute.
	LdapAttrGroup string `json:"ldap_attr_group"`

	// LdapAttrGroupobj LDAP group object class. Specifying any value enables RFC2307 mode.
	LdapAttrGroupobj *string `json:"ldap_attr_groupobj,omitempty"`

	// LdapAttrMember LDAP group member attribute.
	LdapAttrMember string `json:"ldap_attr_member"`

	// LdapAttrUser LDAP user naming attribute.
	LdapAttrUser string `json:"ldap_attr_user"`

	// LdapAuthcn LDAP authentication container.
	LdapAuthcn *string `json:"ldap_authcn,omitempty"`

	// LdapBasedn Base distinguished name of LDAP tree.
	LdapBasedn *string `json:"ldap_basedn,omitempty"`

	// LdapBinddn Bind DN to use for LDAP authentication.
	LdapBinddn *string `json:"ldap_binddn,omitempty"`

	// LdapBindpw Bind password to use for LDAP authentication.
	LdapBindpw string `json:"ldap_bindpw"`

	// LdapExtendedQuery Extended LDAP queries. Specifying any value enables LDAP extended queries.
	LdapExtendedQuery *string `json:"ldap_extended_query,omitempty"`

	// LdapNostripAt Disable LDAP username alterations.
	LdapNostripAt *bool `json:"ldap_nostrip_at,omitempty"`

	// LdapPort Remote LDAP server's LDAP port.
	LdapPort int `json:"ldap_port"`

	// LdapProtver LDAP version used by the remote authentication server.
	LdapProtver *APIUserAuthServerLDAPCreateJSONBodyLdapProtver `json:"ldap_protver,omitempty"`

	// LdapScope Scope of LDAP search.
	LdapScope APIUserAuthServerLDAPCreateJSONBodyLdapScope `json:"ldap_scope"`

	// LdapTimeout Connection timeout for LDAP requests.
	LdapTimeout *int `json:"ldap_timeout,omitempty"`

	// LdapUrltype Transport method to use for LDAP queries.
	LdapUrltype APIUserAuthServerLDAPCreateJSONBodyLdapUrltype `json:"ldap_urltype"`

	// LdapUtf8 Enable UTF-8 encoded LDAP parameters.
	LdapUtf8 *bool `json:"ldap_utf8,omitempty"`

	// Name Unique name for the authentication server.
	Name string `json:"name"`
}

// APIUserAuthServerLDAPCreateJSONBodyLdapProtver defines parameters for APIUserAuthServerLDAPCreate.
type APIUserAuthServerLDAPCreateJSONBodyLdapProtver int

// APIUserAuthServerLDAPCreateJSONBodyLdapScope defines parameters for APIUserAuthServerLDAPCreate.
type APIUserAuthServerLDAPCreateJSONBodyLdapScope string

// APIUserAuthServerLDAPCreateJSONBodyLdapUrltype defines parameters for APIUserAuthServerLDAPCreate.
type APIUserAuthServerLDAPCreateJSONBodyLdapUrltype string

// APIUserAuthServerRADIUSDeleteParams defines parameters for APIUserAuthServerRADIUSDelete.
type APIUserAuthServerRADIUSDeleteParams struct {
	// Name Name of the RADIUS authentication server to delete.
	Name string `form:"name" json:"name"`
}

// APIUserAuthServerRADIUSCreateJSONBody defines parameters for APIUserAuthServerRADIUSCreate.
type APIUserAuthServerRADIUSCreateJSONBody struct {
	// Active Set this authentication server as the system default.
	Active *bool `json:"active,omitempty"`

	// Host IP or hostname of the remote RADIUS authentication server.
	Host string `json:"host"`

	// Name Descriptive name for the RADIUS authentication server.  This name must be unique from all other authentication servers on the system.
	Name string `json:"name"`

	// RadiusAcctPort Remote RADIUS authentication server's accounting port. If no value is specified, the accounting service on the remote RADIUS server will not be used. This field is optional if a `radius_auth_port` value is specified.
	RadiusAcctPort *int `json:"radius_acct_port,omitempty"`

	// RadiusAuthPort Remote RADIUS authentication server's authentication port. If no value is specified, the authentication service on the remote RADIUS server will not be used. This field is optional if a `radius_acct_port` value is specified.
	RadiusAuthPort *int `json:"radius_auth_port,omitempty"`

	// RadiusNasipAttribute Interface to use for the "NAS-IP-Address" attribute during RADIUS requests.
	RadiusNasipAttribute *string `json:"radius_nasip_attribute,omitempty"`

	// RadiusProtocol RADIUS authentication protocol to use when communicating with the remote RADIUS server.
	RadiusProtocol *APIUserAuthServerRADIUSCreateJSONBodyRadiusProtocol `json:"radius_protocol,omitempty"`

	// RadiusSecret Shared secret of the remote RADIUS authentication server.
	RadiusSecret string `json:"radius_secret"`

	// RadiusTimeout Amount of time (in seconds) to wait for the remote RADIUS server to respond before timing out.
	RadiusTimeout *int `json:"radius_timeout,omitempty"`
}

// APIUserAuthServerRADIUSCreateJSONBodyRadiusProtocol defines parameters for APIUserAuthServerRADIUSCreate.
type APIUserAuthServerRADIUSCreateJSONBodyRadiusProtocol string

// APIUserGroupDeleteParams defines parameters for APIUserGroupDelete.
type APIUserGroupDeleteParams struct {
	// Id Name of the group to delete.
	Id string `form:"id" json:"id"`
}

// APIUserGroupCreateJSONBody defines parameters for APIUserGroupCreate.
type APIUserGroupCreateJSONBody struct {
	// Description Description of the group
	Description *string `json:"description,omitempty"`

	// Member UIDs of users to assign to this group.
	Member *[]int `json:"member,omitempty"`

	// Name Name of the group.
	Name string `json:"name"`

	// Priv Privileges to assign to this group.
	Priv *[]string `json:"priv,omitempty"`

	// Scope Scope of the group.
	Scope *APIUserGroupCreateJSONBodyScope `json:"scope,omitempty"`
}

// APIUserGroupCreateJSONBodyScope defines parameters for APIUserGroupCreate.
type APIUserGroupCreateJSONBodyScope string

// APIUserGroupUpdateJSONBody defines parameters for APIUserGroupUpdate.
type APIUserGroupUpdateJSONBody struct {
	// Description Description of the group
	Description *string `json:"description,omitempty"`

	// Id Name of the group to update.
	Id string `json:"id"`

	// Member UIDs of users to assign to this group.
	Member *[]int `json:"member,omitempty"`

	// Name New name of the group.
	Name *string `json:"name,omitempty"`

	// Priv Privileges to assign to this group.
	Priv *[]string `json:"priv,omitempty"`

	// Scope Scope of the group.
	Scope *APIUserGroupUpdateJSONBodyScope `json:"scope,omitempty"`
}

// APIUserGroupUpdateJSONBodyScope defines parameters for APIUserGroupUpdate.
type APIUserGroupUpdateJSONBodyScope string

// APIUserGroupMemberDeleteParams defines parameters for APIUserGroupMemberDelete.
type APIUserGroupMemberDeleteParams struct {
	// Username Username of member to remove from group.
	Username string `form:"username" json:"username"`

	// Group Name of group to remove user from.
	Group string `form:"group" json:"group"`
}

// APIUserGroupMemberCreateJSONBody defines parameters for APIUserGroupMemberCreate.
type APIUserGroupMemberCreateJSONBody struct {
	// Group Names of groups to assign user to.
	Group []string `json:"group"`

	// Username Username of user to assign to groups.
	Username string `json:"username"`
}

// APIUserPrivilegeDeleteParams defines parameters for APIUserPrivilegeDelete.
type APIUserPrivilegeDeleteParams struct {
	// Username Username of user to remove privilege.
	Username string `form:"username" json:"username"`

	// Priv Name of the privilege to remove from the user.
	Priv string `form:"priv" json:"priv"`
}

// APIUserPrivilegeCreateJSONBody defines parameters for APIUserPrivilegeCreate.
type APIUserPrivilegeCreateJSONBody struct {
	// Priv Names of privileges to assign to the user.
	Priv *[]string `json:"priv,omitempty"`

	// Username Username of user to be granted privileges.
	Username string `json:"username"`
}

// APIDiagnosticsCommandPromptCreateJSONRequestBody defines body for APIDiagnosticsCommandPromptCreate for application/json ContentType.
type APIDiagnosticsCommandPromptCreateJSONRequestBody APIDiagnosticsCommandPromptCreateJSONBody

// APIFirewallAliasCreateJSONRequestBody defines body for APIFirewallAliasCreate for application/json ContentType.
type APIFirewallAliasCreateJSONRequestBody APIFirewallAliasCreateJSONBody

// APIFirewallAliasUpdateJSONRequestBody defines body for APIFirewallAliasUpdate for application/json ContentType.
type APIFirewallAliasUpdateJSONRequestBody APIFirewallAliasUpdateJSONBody

// APIFirewallAliasAdvancedUpdateJSONRequestBody defines body for APIFirewallAliasAdvancedUpdate for application/json ContentType.
type APIFirewallAliasAdvancedUpdateJSONRequestBody APIFirewallAliasAdvancedUpdateJSONBody

// APIFirewallAliasEntryCreateJSONRequestBody defines body for APIFirewallAliasEntryCreate for application/json ContentType.
type APIFirewallAliasEntryCreateJSONRequestBody APIFirewallAliasEntryCreateJSONBody

// APIFirewallApplyCreateJSONRequestBody defines body for APIFirewallApplyCreate for application/json ContentType.
type APIFirewallApplyCreateJSONRequestBody APIFirewallApplyCreateJSONBody

// APIFirewallNATOneToOneCreateJSONRequestBody defines body for APIFirewallNATOneToOneCreate for application/json ContentType.
type APIFirewallNATOneToOneCreateJSONRequestBody APIFirewallNATOneToOneCreateJSONBody

// APIFirewallNATOneToOneUpdateJSONRequestBody defines body for APIFirewallNATOneToOneUpdate for application/json ContentType.
type APIFirewallNATOneToOneUpdateJSONRequestBody APIFirewallNATOneToOneUpdateJSONBody

// APIFirewallNATOutboundUpdateJSONRequestBody defines body for APIFirewallNATOutboundUpdate for application/json ContentType.
type APIFirewallNATOutboundUpdateJSONRequestBody APIFirewallNATOutboundUpdateJSONBody

// APIFirewallNATOutboundMappingCreateJSONRequestBody defines body for APIFirewallNATOutboundMappingCreate for application/json ContentType.
type APIFirewallNATOutboundMappingCreateJSONRequestBody APIFirewallNATOutboundMappingCreateJSONBody

// APIFirewallNATOutboundMappingUpdateJSONRequestBody defines body for APIFirewallNATOutboundMappingUpdate for application/json ContentType.
type APIFirewallNATOutboundMappingUpdateJSONRequestBody APIFirewallNATOutboundMappingUpdateJSONBody

// APIFirewallNATOutboundPortForwardCreateJSONRequestBody defines body for APIFirewallNATOutboundPortForwardCreate for application/json ContentType.
type APIFirewallNATOutboundPortForwardCreateJSONRequestBody APIFirewallNATOutboundPortForwardCreateJSONBody

// APIFirewallNATOutboundPortForwardUpdateJSONRequestBody defines body for APIFirewallNATOutboundPortForwardUpdate for application/json ContentType.
type APIFirewallNATOutboundPortForwardUpdateJSONRequestBody APIFirewallNATOutboundPortForwardUpdateJSONBody

// APIFirewallRuleCreateJSONRequestBody defines body for APIFirewallRuleCreate for application/json ContentType.
type APIFirewallRuleCreateJSONRequestBody APIFirewallRuleCreateJSONBody

// APIFirewallRuleUpdateJSONRequestBody defines body for APIFirewallRuleUpdate for application/json ContentType.
type APIFirewallRuleUpdateJSONRequestBody APIFirewallRuleUpdateJSONBody

// APIFirewallRuleFlushUpdateJSONRequestBody defines body for APIFirewallRuleFlushUpdate for application/json ContentType.
type APIFirewallRuleFlushUpdateJSONRequestBody APIFirewallRuleFlushUpdateJSONBody

// APIFirewallRuleSortUpdateJSONRequestBody defines body for APIFirewallRuleSortUpdate for application/json ContentType.
type APIFirewallRuleSortUpdateJSONRequestBody APIFirewallRuleSortUpdateJSONBody

// APIFirewallScheduleCreateJSONRequestBody defines body for APIFirewallScheduleCreate for application/json ContentType.
type APIFirewallScheduleCreateJSONRequestBody APIFirewallScheduleCreateJSONBody

// APIFirewallScheduleUpdateJSONRequestBody defines body for APIFirewallScheduleUpdate for application/json ContentType.
type APIFirewallScheduleUpdateJSONRequestBody APIFirewallScheduleUpdateJSONBody

// APIFirewallScheduleTimeRangeCreateJSONRequestBody defines body for APIFirewallScheduleTimeRangeCreate for application/json ContentType.
type APIFirewallScheduleTimeRangeCreateJSONRequestBody APIFirewallScheduleTimeRangeCreateJSONBody

// APIFirewallStatesSizeUpdateJSONRequestBody defines body for APIFirewallStatesSizeUpdate for application/json ContentType.
type APIFirewallStatesSizeUpdateJSONRequestBody APIFirewallStatesSizeUpdateJSONBody

// APIFirewallTrafficShaperCreateJSONRequestBody defines body for APIFirewallTrafficShaperCreate for application/json ContentType.
type APIFirewallTrafficShaperCreateJSONRequestBody APIFirewallTrafficShaperCreateJSONBody

// APIFirewallTrafficShaperUpdateJSONRequestBody defines body for APIFirewallTrafficShaperUpdate for application/json ContentType.
type APIFirewallTrafficShaperUpdateJSONRequestBody APIFirewallTrafficShaperUpdateJSONBody

// APIFirewallTrafficShaperLimiterCreateJSONRequestBody defines body for APIFirewallTrafficShaperLimiterCreate for application/json ContentType.
type APIFirewallTrafficShaperLimiterCreateJSONRequestBody APIFirewallTrafficShaperLimiterCreateJSONBody

// APIFirewallTrafficShaperLimiterBandwidthCreateJSONRequestBody defines body for APIFirewallTrafficShaperLimiterBandwidthCreate for application/json ContentType.
type APIFirewallTrafficShaperLimiterBandwidthCreateJSONRequestBody APIFirewallTrafficShaperLimiterBandwidthCreateJSONBody

// APIFirewallTrafficShaperLimiterQueueCreateJSONRequestBody defines body for APIFirewallTrafficShaperLimiterQueueCreate for application/json ContentType.
type APIFirewallTrafficShaperLimiterQueueCreateJSONRequestBody APIFirewallTrafficShaperLimiterQueueCreateJSONBody

// APIFirewallTrafficShaperQueueCreateJSONRequestBody defines body for APIFirewallTrafficShaperQueueCreate for application/json ContentType.
type APIFirewallTrafficShaperQueueCreateJSONRequestBody APIFirewallTrafficShaperQueueCreateJSONBody

// APIFirewallVirtualIPCreateJSONRequestBody defines body for APIFirewallVirtualIPCreate for application/json ContentType.
type APIFirewallVirtualIPCreateJSONRequestBody APIFirewallVirtualIPCreateJSONBody

// APIFirewallVirtualIPUpdateJSONRequestBody defines body for APIFirewallVirtualIPUpdate for application/json ContentType.
type APIFirewallVirtualIPUpdateJSONRequestBody APIFirewallVirtualIPUpdateJSONBody

// APIInterfaceCreateJSONRequestBody defines body for APIInterfaceCreate for application/json ContentType.
type APIInterfaceCreateJSONRequestBody APIInterfaceCreateJSONBody

// APIInterfaceUpdateJSONRequestBody defines body for APIInterfaceUpdate for application/json ContentType.
type APIInterfaceUpdateJSONRequestBody APIInterfaceUpdateJSONBody

// APIInterfaceApplyCreateJSONRequestBody defines body for APIInterfaceApplyCreate for application/json ContentType.
type APIInterfaceApplyCreateJSONRequestBody APIInterfaceApplyCreateJSONBody

// APIInterfaceBridgeCreateJSONRequestBody defines body for APIInterfaceBridgeCreate for application/json ContentType.
type APIInterfaceBridgeCreateJSONRequestBody APIInterfaceBridgeCreateJSONBody

// APIInterfaceBridgeUpdateJSONRequestBody defines body for APIInterfaceBridgeUpdate for application/json ContentType.
type APIInterfaceBridgeUpdateJSONRequestBody APIInterfaceBridgeUpdateJSONBody

// APIInterfaceGroupCreateJSONRequestBody defines body for APIInterfaceGroupCreate for application/json ContentType.
type APIInterfaceGroupCreateJSONRequestBody APIInterfaceGroupCreateJSONBody

// APIInterfaceGroupUpdateJSONRequestBody defines body for APIInterfaceGroupUpdate for application/json ContentType.
type APIInterfaceGroupUpdateJSONRequestBody APIInterfaceGroupUpdateJSONBody

// APIInterfaceVLANCreateJSONRequestBody defines body for APIInterfaceVLANCreate for application/json ContentType.
type APIInterfaceVLANCreateJSONRequestBody APIInterfaceVLANCreateJSONBody

// APIInterfaceVLANUpdateJSONRequestBody defines body for APIInterfaceVLANUpdate for application/json ContentType.
type APIInterfaceVLANUpdateJSONRequestBody APIInterfaceVLANUpdateJSONBody

// APIRoutingGatewayCreateJSONRequestBody defines body for APIRoutingGatewayCreate for application/json ContentType.
type APIRoutingGatewayCreateJSONRequestBody APIRoutingGatewayCreateJSONBody

// APIRoutingGatewayUpdateJSONRequestBody defines body for APIRoutingGatewayUpdate for application/json ContentType.
type APIRoutingGatewayUpdateJSONRequestBody APIRoutingGatewayUpdateJSONBody

// APIRoutingGatewayDefaultUpdateJSONRequestBody defines body for APIRoutingGatewayDefaultUpdate for application/json ContentType.
type APIRoutingGatewayDefaultUpdateJSONRequestBody APIRoutingGatewayDefaultUpdateJSONBody

// APIRoutingStaticRouteCreateJSONRequestBody defines body for APIRoutingStaticRouteCreate for application/json ContentType.
type APIRoutingStaticRouteCreateJSONRequestBody APIRoutingStaticRouteCreateJSONBody

// APIRoutingStaticRouteUpdateJSONRequestBody defines body for APIRoutingStaticRouteUpdate for application/json ContentType.
type APIRoutingStaticRouteUpdateJSONRequestBody APIRoutingStaticRouteUpdateJSONBody

// APIServicesDHCPdUpdateJSONRequestBody defines body for APIServicesDHCPdUpdate for application/json ContentType.
type APIServicesDHCPdUpdateJSONRequestBody APIServicesDHCPdUpdateJSONBody

// APIServicesDHCPdOptionsCreateJSONRequestBody defines body for APIServicesDHCPdOptionsCreate for application/json ContentType.
type APIServicesDHCPdOptionsCreateJSONRequestBody APIServicesDHCPdOptionsCreateJSONBody

// APIServicesDHCPdStaticMappingCreateJSONRequestBody defines body for APIServicesDHCPdStaticMappingCreate for application/json ContentType.
type APIServicesDHCPdStaticMappingCreateJSONRequestBody APIServicesDHCPdStaticMappingCreateJSONBody

// APIServicesDHCPdStaticMappingUpdateJSONRequestBody defines body for APIServicesDHCPdStaticMappingUpdate for application/json ContentType.
type APIServicesDHCPdStaticMappingUpdateJSONRequestBody APIServicesDHCPdStaticMappingUpdateJSONBody

// APIServicesDnsmasqHostOverrideCreateJSONRequestBody defines body for APIServicesDnsmasqHostOverrideCreate for application/json ContentType.
type APIServicesDnsmasqHostOverrideCreateJSONRequestBody APIServicesDnsmasqHostOverrideCreateJSONBody

// APIServicesDnsmasqHostOverrideUpdateJSONRequestBody defines body for APIServicesDnsmasqHostOverrideUpdate for application/json ContentType.
type APIServicesDnsmasqHostOverrideUpdateJSONRequestBody APIServicesDnsmasqHostOverrideUpdateJSONBody

// APIServicesDnsmasqHostOverrideAliasCreateJSONRequestBody defines body for APIServicesDnsmasqHostOverrideAliasCreate for application/json ContentType.
type APIServicesDnsmasqHostOverrideAliasCreateJSONRequestBody APIServicesDnsmasqHostOverrideAliasCreateJSONBody

// APIServicesIPsecApplyCreateJSONRequestBody defines body for APIServicesIPsecApplyCreate for application/json ContentType.
type APIServicesIPsecApplyCreateJSONRequestBody APIServicesIPsecApplyCreateJSONBody

// APIServicesIPsecPhase1CreateJSONRequestBody defines body for APIServicesIPsecPhase1Create for application/json ContentType.
type APIServicesIPsecPhase1CreateJSONRequestBody APIServicesIPsecPhase1CreateJSONBody

// APIServicesIPsecPhase1UpdateJSONRequestBody defines body for APIServicesIPsecPhase1Update for application/json ContentType.
type APIServicesIPsecPhase1UpdateJSONRequestBody APIServicesIPsecPhase1UpdateJSONBody

// APIServicesIPsecPhase1EncryptionCreateJSONRequestBody defines body for APIServicesIPsecPhase1EncryptionCreate for application/json ContentType.
type APIServicesIPsecPhase1EncryptionCreateJSONRequestBody APIServicesIPsecPhase1EncryptionCreateJSONBody

// APIServicesIPsecPhase2CreateJSONRequestBody defines body for APIServicesIPsecPhase2Create for application/json ContentType.
type APIServicesIPsecPhase2CreateJSONRequestBody APIServicesIPsecPhase2CreateJSONBody

// APIServicesIPsecPhase2UpdateJSONRequestBody defines body for APIServicesIPsecPhase2Update for application/json ContentType.
type APIServicesIPsecPhase2UpdateJSONRequestBody APIServicesIPsecPhase2UpdateJSONBody

// APIServicesNTPdUpdateJSONRequestBody defines body for APIServicesNTPdUpdate for application/json ContentType.
type APIServicesNTPdUpdateJSONRequestBody APIServicesNTPdUpdateJSONBody

// APIServicesNTPdTimeServerCreateJSONRequestBody defines body for APIServicesNTPdTimeServerCreate for application/json ContentType.
type APIServicesNTPdTimeServerCreateJSONRequestBody APIServicesNTPdTimeServerCreateJSONBody

// APIServicesOpenVPNClientCreateJSONRequestBody defines body for APIServicesOpenVPNClientCreate for application/json ContentType.
type APIServicesOpenVPNClientCreateJSONRequestBody APIServicesOpenVPNClientCreateJSONBody

// APIServicesOpenVPNClientUpdateJSONRequestBody defines body for APIServicesOpenVPNClientUpdate for application/json ContentType.
type APIServicesOpenVPNClientUpdateJSONRequestBody APIServicesOpenVPNClientUpdateJSONBody

// APIServicesOpenVPNClientSpecificOverridesCreateJSONRequestBody defines body for APIServicesOpenVPNClientSpecificOverridesCreate for application/json ContentType.
type APIServicesOpenVPNClientSpecificOverridesCreateJSONRequestBody APIServicesOpenVPNClientSpecificOverridesCreateJSONBody

// APIServicesOpenVPNClientSpecificOverridesUpdateJSONRequestBody defines body for APIServicesOpenVPNClientSpecificOverridesUpdate for application/json ContentType.
type APIServicesOpenVPNClientSpecificOverridesUpdateJSONRequestBody APIServicesOpenVPNClientSpecificOverridesUpdateJSONBody

// APIServicesOpenVPNServerCreateJSONRequestBody defines body for APIServicesOpenVPNServerCreate for application/json ContentType.
type APIServicesOpenVPNServerCreateJSONRequestBody APIServicesOpenVPNServerCreateJSONBody

// APIServicesOpenVPNServerUpdateJSONRequestBody defines body for APIServicesOpenVPNServerUpdate for application/json ContentType.
type APIServicesOpenVPNServerUpdateJSONRequestBody APIServicesOpenVPNServerUpdateJSONBody

// APIServicesRestartCreateJSONRequestBody defines body for APIServicesRestartCreate for application/json ContentType.
type APIServicesRestartCreateJSONRequestBody APIServicesRestartCreateJSONBody

// APIServicesServiceWatchdogUpdateJSONRequestBody defines body for APIServicesServiceWatchdogUpdate for application/json ContentType.
type APIServicesServiceWatchdogUpdateJSONRequestBody APIServicesServiceWatchdogUpdateJSONBody

// APIServicesSSHdUpdateJSONRequestBody defines body for APIServicesSSHdUpdate for application/json ContentType.
type APIServicesSSHdUpdateJSONRequestBody APIServicesSSHdUpdateJSONBody

// APIServicesStopCreateJSONRequestBody defines body for APIServicesStopCreate for application/json ContentType.
type APIServicesStopCreateJSONRequestBody = APIServicesStopCreateJSONBody

// APIServicesUnboundAccessListCreateJSONRequestBody defines body for APIServicesUnboundAccessListCreate for application/json ContentType.
type APIServicesUnboundAccessListCreateJSONRequestBody APIServicesUnboundAccessListCreateJSONBody

// APIServicesUnboundAccessListUpdateJSONRequestBody defines body for APIServicesUnboundAccessListUpdate for application/json ContentType.
type APIServicesUnboundAccessListUpdateJSONRequestBody APIServicesUnboundAccessListUpdateJSONBody

// APIServicesUnboundAccessListRowCreateJSONRequestBody defines body for APIServicesUnboundAccessListRowCreate for application/json ContentType.
type APIServicesUnboundAccessListRowCreateJSONRequestBody APIServicesUnboundAccessListRowCreateJSONBody

// APIServicesUnboundApplyCreateJSONRequestBody defines body for APIServicesUnboundApplyCreate for application/json ContentType.
type APIServicesUnboundApplyCreateJSONRequestBody APIServicesUnboundApplyCreateJSONBody

// APIServicesUnboundHostOverrideCreateJSONRequestBody defines body for APIServicesUnboundHostOverrideCreate for application/json ContentType.
type APIServicesUnboundHostOverrideCreateJSONRequestBody APIServicesUnboundHostOverrideCreateJSONBody

// APIServicesUnboundHostOverrideUpdateJSONRequestBody defines body for APIServicesUnboundHostOverrideUpdate for application/json ContentType.
type APIServicesUnboundHostOverrideUpdateJSONRequestBody APIServicesUnboundHostOverrideUpdateJSONBody

// APIServicesUnboundHostOverrideAliasCreateJSONRequestBody defines body for APIServicesUnboundHostOverrideAliasCreate for application/json ContentType.
type APIServicesUnboundHostOverrideAliasCreateJSONRequestBody APIServicesUnboundHostOverrideAliasCreateJSONBody

// APIServicesUnboundHostOverrideFlushUpdateJSONRequestBody defines body for APIServicesUnboundHostOverrideFlushUpdate for application/json ContentType.
type APIServicesUnboundHostOverrideFlushUpdateJSONRequestBody APIServicesUnboundHostOverrideFlushUpdateJSONBody

// APIServicesWOLSendCreateJSONRequestBody defines body for APIServicesWOLSendCreate for application/json ContentType.
type APIServicesWOLSendCreateJSONRequestBody APIServicesWOLSendCreateJSONBody

// APIStatusCARPUpdateJSONRequestBody defines body for APIStatusCARPUpdate for application/json ContentType.
type APIStatusCARPUpdateJSONRequestBody APIStatusCARPUpdateJSONBody

// APIStatusLogSettingsUpdateJSONRequestBody defines body for APIStatusLogSettingsUpdate for application/json ContentType.
type APIStatusLogSettingsUpdateJSONRequestBody APIStatusLogSettingsUpdateJSONBody

// APISystemAPIUpdateJSONRequestBody defines body for APISystemAPIUpdate for application/json ContentType.
type APISystemAPIUpdateJSONRequestBody APISystemAPIUpdateJSONBody

// APISystemCACreateJSONRequestBody defines body for APISystemCACreate for application/json ContentType.
type APISystemCACreateJSONRequestBody APISystemCACreateJSONBody

// APISystemCertificateCreateJSONRequestBody defines body for APISystemCertificateCreate for application/json ContentType.
type APISystemCertificateCreateJSONRequestBody APISystemCertificateCreateJSONBody

// APISystemCertificateUpdateJSONRequestBody defines body for APISystemCertificateUpdate for application/json ContentType.
type APISystemCertificateUpdateJSONRequestBody APISystemCertificateUpdateJSONBody

// APISystemConsoleUpdateJSONRequestBody defines body for APISystemConsoleUpdate for application/json ContentType.
type APISystemConsoleUpdateJSONRequestBody APISystemConsoleUpdateJSONBody

// APISystemCRLCreateJSONRequestBody defines body for APISystemCRLCreate for application/json ContentType.
type APISystemCRLCreateJSONRequestBody APISystemCRLCreateJSONBody

// APISystemDNSUpdateJSONRequestBody defines body for APISystemDNSUpdate for application/json ContentType.
type APISystemDNSUpdateJSONRequestBody APISystemDNSUpdateJSONBody

// APISystemDNSServerCreateJSONRequestBody defines body for APISystemDNSServerCreate for application/json ContentType.
type APISystemDNSServerCreateJSONRequestBody APISystemDNSServerCreateJSONBody

// APISystemHostnameUpdateJSONRequestBody defines body for APISystemHostnameUpdate for application/json ContentType.
type APISystemHostnameUpdateJSONRequestBody APISystemHostnameUpdateJSONBody

// APISystemNotificationsEmailUpdateJSONRequestBody defines body for APISystemNotificationsEmailUpdate for application/json ContentType.
type APISystemNotificationsEmailUpdateJSONRequestBody APISystemNotificationsEmailUpdateJSONBody

// APISystemPackageCreateJSONRequestBody defines body for APISystemPackageCreate for application/json ContentType.
type APISystemPackageCreateJSONRequestBody APISystemPackageCreateJSONBody

// APISystemTunableCreateJSONRequestBody defines body for APISystemTunableCreate for application/json ContentType.
type APISystemTunableCreateJSONRequestBody APISystemTunableCreateJSONBody

// APISystemTunableUpdateJSONRequestBody defines body for APISystemTunableUpdate for application/json ContentType.
type APISystemTunableUpdateJSONRequestBody APISystemTunableUpdateJSONBody

// APIUserCreateJSONRequestBody defines body for APIUserCreate for application/json ContentType.
type APIUserCreateJSONRequestBody APIUserCreateJSONBody

// APIUserUpdateJSONRequestBody defines body for APIUserUpdate for application/json ContentType.
type APIUserUpdateJSONRequestBody APIUserUpdateJSONBody

// APIUserAuthServerLDAPCreateJSONRequestBody defines body for APIUserAuthServerLDAPCreate for application/json ContentType.
type APIUserAuthServerLDAPCreateJSONRequestBody APIUserAuthServerLDAPCreateJSONBody

// APIUserAuthServerRADIUSCreateJSONRequestBody defines body for APIUserAuthServerRADIUSCreate for application/json ContentType.
type APIUserAuthServerRADIUSCreateJSONRequestBody APIUserAuthServerRADIUSCreateJSONBody

// APIUserGroupCreateJSONRequestBody defines body for APIUserGroupCreate for application/json ContentType.
type APIUserGroupCreateJSONRequestBody APIUserGroupCreateJSONBody

// APIUserGroupUpdateJSONRequestBody defines body for APIUserGroupUpdate for application/json ContentType.
type APIUserGroupUpdateJSONRequestBody APIUserGroupUpdateJSONBody

// APIUserGroupMemberCreateJSONRequestBody defines body for APIUserGroupMemberCreate for application/json ContentType.
type APIUserGroupMemberCreateJSONRequestBody APIUserGroupMemberCreateJSONBody

// APIUserPrivilegeCreateJSONRequestBody defines body for APIUserPrivilegeCreate for application/json ContentType.
type APIUserPrivilegeCreateJSONRequestBody APIUserPrivilegeCreateJSONBody

// AsResponseData0 returns the union data inside the Response_Data as a ResponseData0
func (t Response_Data) AsResponseData0() (ResponseData0, error) {
	var body ResponseData0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromResponseData0 overwrites any union data inside the Response_Data as the provided ResponseData0
func (t *Response_Data) FromResponseData0(v ResponseData0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeResponseData0 performs a merge with any union data inside the Response_Data, using the provided ResponseData0
func (t *Response_Data) MergeResponseData0(v ResponseData0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(b, t.union)
	t.union = merged
	return err
}

// AsResponseData1 returns the union data inside the Response_Data as a ResponseData1
func (t Response_Data) AsResponseData1() (ResponseData1, error) {
	var body ResponseData1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromResponseData1 overwrites any union data inside the Response_Data as the provided ResponseData1
func (t *Response_Data) FromResponseData1(v ResponseData1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeResponseData1 performs a merge with any union data inside the Response_Data, using the provided ResponseData1
func (t *Response_Data) MergeResponseData1(v ResponseData1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JsonMerge(b, t.union)
	t.union = merged
	return err
}

func (t Response_Data) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Response_Data) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
